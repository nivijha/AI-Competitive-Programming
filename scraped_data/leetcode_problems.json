[
  {
    "id": "1",
    "frontend_id": "1",
    "title": "Two Sum",
    "slug": "two-sum",
    "difficulty": "Easy",
    "acceptance_rate": 55.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/two-sum"
  },
  {
    "id": "2",
    "frontend_id": "2",
    "title": "Add Two Numbers",
    "slug": "add-two-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 45.6,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/add-two-numbers"
  },
  {
    "id": "3",
    "frontend_id": "3",
    "title": "Longest Substring Without Repeating Characters",
    "slug": "longest-substring-without-repeating-characters",
    "difficulty": "Medium",
    "acceptance_rate": 36.46,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters"
  },
  {
    "id": "4",
    "frontend_id": "4",
    "title": "Median of Two Sorted Arrays",
    "slug": "median-of-two-sorted-arrays",
    "difficulty": "Hard",
    "acceptance_rate": 43.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/median-of-two-sorted-arrays"
  },
  {
    "id": "5",
    "frontend_id": "5",
    "title": "Longest Palindromic Substring",
    "slug": "longest-palindromic-substring",
    "difficulty": "Medium",
    "acceptance_rate": 35.41,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/longest-palindromic-substring"
  },
  {
    "id": "6",
    "frontend_id": "6",
    "title": "Zigzag Conversion",
    "slug": "zigzag-conversion",
    "difficulty": "Medium",
    "acceptance_rate": 50.95,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/zigzag-conversion"
  },
  {
    "id": "7",
    "frontend_id": "7",
    "title": "Reverse Integer",
    "slug": "reverse-integer",
    "difficulty": "Medium",
    "acceptance_rate": 29.95,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-integer"
  },
  {
    "id": "8",
    "frontend_id": "8",
    "title": "String to Integer (atoi)",
    "slug": "string-to-integer-atoi",
    "difficulty": "Medium",
    "acceptance_rate": 18.82,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/string-to-integer-atoi"
  },
  {
    "id": "9",
    "frontend_id": "9",
    "title": "Palindrome Number",
    "slug": "palindrome-number",
    "difficulty": "Easy",
    "acceptance_rate": 58.78,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/palindrome-number"
  },
  {
    "id": "10",
    "frontend_id": "10",
    "title": "Regular Expression Matching",
    "slug": "regular-expression-matching",
    "difficulty": "Hard",
    "acceptance_rate": 29.02,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/regular-expression-matching"
  },
  {
    "id": "11",
    "frontend_id": "11",
    "title": "Container With Most Water",
    "slug": "container-with-most-water",
    "difficulty": "Medium",
    "acceptance_rate": 57.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/container-with-most-water"
  },
  {
    "id": "12",
    "frontend_id": "12",
    "title": "Integer to Roman",
    "slug": "integer-to-roman",
    "difficulty": "Medium",
    "acceptance_rate": 67.98,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/integer-to-roman"
  },
  {
    "id": "13",
    "frontend_id": "13",
    "title": "Roman to Integer",
    "slug": "roman-to-integer",
    "difficulty": "Easy",
    "acceptance_rate": 64.3,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/roman-to-integer"
  },
  {
    "id": "14",
    "frontend_id": "14",
    "title": "Longest Common Prefix",
    "slug": "longest-common-prefix",
    "difficulty": "Easy",
    "acceptance_rate": 45.02,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/longest-common-prefix"
  },
  {
    "id": "15",
    "frontend_id": "15",
    "title": "3Sum",
    "slug": "3sum",
    "difficulty": "Medium",
    "acceptance_rate": 36.58,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/3sum"
  },
  {
    "id": "16",
    "frontend_id": "16",
    "title": "3Sum Closest",
    "slug": "3sum-closest",
    "difficulty": "Medium",
    "acceptance_rate": 46.65,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/3sum-closest"
  },
  {
    "id": "17",
    "frontend_id": "17",
    "title": "Letter Combinations of a Phone Number",
    "slug": "letter-combinations-of-a-phone-number",
    "difficulty": "Medium",
    "acceptance_rate": 63.25,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number"
  },
  {
    "id": "18",
    "frontend_id": "18",
    "title": "4Sum",
    "slug": "4sum",
    "difficulty": "Medium",
    "acceptance_rate": 37.72,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/4sum"
  },
  {
    "id": "19",
    "frontend_id": "19",
    "title": "Remove Nth Node From End of List",
    "slug": "remove-nth-node-from-end-of-list",
    "difficulty": "Medium",
    "acceptance_rate": 48.28,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list"
  },
  {
    "id": "20",
    "frontend_id": "20",
    "title": "Valid Parentheses",
    "slug": "valid-parentheses",
    "difficulty": "Easy",
    "acceptance_rate": 41.95,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/valid-parentheses"
  },
  {
    "id": "21",
    "frontend_id": "21",
    "title": "Merge Two Sorted Lists",
    "slug": "merge-two-sorted-lists",
    "difficulty": "Easy",
    "acceptance_rate": 66.4,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/merge-two-sorted-lists"
  },
  {
    "id": "22",
    "frontend_id": "22",
    "title": "Generate Parentheses",
    "slug": "generate-parentheses",
    "difficulty": "Medium",
    "acceptance_rate": 76.66,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/generate-parentheses"
  },
  {
    "id": "23",
    "frontend_id": "23",
    "title": "Merge k Sorted Lists",
    "slug": "merge-k-sorted-lists",
    "difficulty": "Hard",
    "acceptance_rate": 56.01,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/merge-k-sorted-lists"
  },
  {
    "id": "24",
    "frontend_id": "24",
    "title": "Swap Nodes in Pairs",
    "slug": "swap-nodes-in-pairs",
    "difficulty": "Medium",
    "acceptance_rate": 66.65,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/swap-nodes-in-pairs"
  },
  {
    "id": "25",
    "frontend_id": "25",
    "title": "Reverse Nodes in k-Group",
    "slug": "reverse-nodes-in-k-group",
    "difficulty": "Hard",
    "acceptance_rate": 62.25,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-nodes-in-k-group"
  },
  {
    "id": "26",
    "frontend_id": "26",
    "title": "Remove Duplicates from Sorted Array",
    "slug": "remove-duplicates-from-sorted-array",
    "difficulty": "Easy",
    "acceptance_rate": 59.67,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array"
  },
  {
    "id": "27",
    "frontend_id": "27",
    "title": "Remove Element",
    "slug": "remove-element",
    "difficulty": "Easy",
    "acceptance_rate": 59.58,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/remove-element"
  },
  {
    "id": "28",
    "frontend_id": "28",
    "title": "Find the Index of the First Occurrence in a String",
    "slug": "find-the-index-of-the-first-occurrence-in-a-string",
    "difficulty": "Easy",
    "acceptance_rate": 44.58,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string"
  },
  {
    "id": "29",
    "frontend_id": "29",
    "title": "Divide Two Integers",
    "slug": "divide-two-integers",
    "difficulty": "Medium",
    "acceptance_rate": 18.2,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/divide-two-integers"
  },
  {
    "id": "30",
    "frontend_id": "30",
    "title": "Substring with Concatenation of All Words",
    "slug": "substring-with-concatenation-of-all-words",
    "difficulty": "Hard",
    "acceptance_rate": 32.83,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words"
  },
  {
    "id": "31",
    "frontend_id": "31",
    "title": "Next Permutation",
    "slug": "next-permutation",
    "difficulty": "Medium",
    "acceptance_rate": 42.49,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/next-permutation"
  },
  {
    "id": "32",
    "frontend_id": "32",
    "title": "Longest Valid Parentheses",
    "slug": "longest-valid-parentheses",
    "difficulty": "Hard",
    "acceptance_rate": 35.8,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-valid-parentheses"
  },
  {
    "id": "33",
    "frontend_id": "33",
    "title": "Search in Rotated Sorted Array",
    "slug": "search-in-rotated-sorted-array",
    "difficulty": "Medium",
    "acceptance_rate": 42.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/search-in-rotated-sorted-array"
  },
  {
    "id": "34",
    "frontend_id": "34",
    "title": "Find First and Last Position of Element in Sorted Array",
    "slug": "find-first-and-last-position-of-element-in-sorted-array",
    "difficulty": "Medium",
    "acceptance_rate": 46.29,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array"
  },
  {
    "id": "35",
    "frontend_id": "35",
    "title": "Search Insert Position",
    "slug": "search-insert-position",
    "difficulty": "Easy",
    "acceptance_rate": 48.48,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/search-insert-position"
  },
  {
    "id": "36",
    "frontend_id": "36",
    "title": "Valid Sudoku",
    "slug": "valid-sudoku",
    "difficulty": "Medium",
    "acceptance_rate": 61.79,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-sudoku"
  },
  {
    "id": "37",
    "frontend_id": "37",
    "title": "Sudoku Solver",
    "slug": "sudoku-solver",
    "difficulty": "Hard",
    "acceptance_rate": 63.68,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sudoku-solver"
  },
  {
    "id": "38",
    "frontend_id": "38",
    "title": "Count and Say",
    "slug": "count-and-say",
    "difficulty": "Medium",
    "acceptance_rate": 58.07,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-and-say"
  },
  {
    "id": "39",
    "frontend_id": "39",
    "title": "Combination Sum",
    "slug": "combination-sum",
    "difficulty": "Medium",
    "acceptance_rate": 74.08,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/combination-sum"
  },
  {
    "id": "40",
    "frontend_id": "40",
    "title": "Combination Sum II",
    "slug": "combination-sum-ii",
    "difficulty": "Medium",
    "acceptance_rate": 57.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/combination-sum-ii"
  },
  {
    "id": "41",
    "frontend_id": "41",
    "title": "First Missing Positive",
    "slug": "first-missing-positive",
    "difficulty": "Hard",
    "acceptance_rate": 40.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/first-missing-positive"
  },
  {
    "id": "42",
    "frontend_id": "42",
    "title": "Trapping Rain Water",
    "slug": "trapping-rain-water",
    "difficulty": "Hard",
    "acceptance_rate": 64.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/trapping-rain-water"
  },
  {
    "id": "43",
    "frontend_id": "43",
    "title": "Multiply Strings",
    "slug": "multiply-strings",
    "difficulty": "Medium",
    "acceptance_rate": 41.94,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/multiply-strings"
  },
  {
    "id": "44",
    "frontend_id": "44",
    "title": "Wildcard Matching",
    "slug": "wildcard-matching",
    "difficulty": "Hard",
    "acceptance_rate": 29.46,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/wildcard-matching"
  },
  {
    "id": "45",
    "frontend_id": "45",
    "title": "Jump Game II",
    "slug": "jump-game-ii",
    "difficulty": "Medium",
    "acceptance_rate": 41.2,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/jump-game-ii"
  },
  {
    "id": "46",
    "frontend_id": "46",
    "title": "Permutations",
    "slug": "permutations",
    "difficulty": "Medium",
    "acceptance_rate": 80.25,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/permutations"
  },
  {
    "id": "47",
    "frontend_id": "47",
    "title": "Permutations II",
    "slug": "permutations-ii",
    "difficulty": "Medium",
    "acceptance_rate": 61.13,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/permutations-ii"
  },
  {
    "id": "48",
    "frontend_id": "48",
    "title": "Rotate Image",
    "slug": "rotate-image",
    "difficulty": "Medium",
    "acceptance_rate": 77.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotate-image"
  },
  {
    "id": "49",
    "frontend_id": "49",
    "title": "Group Anagrams",
    "slug": "group-anagrams",
    "difficulty": "Medium",
    "acceptance_rate": 70.48,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/group-anagrams"
  },
  {
    "id": "50",
    "frontend_id": "50",
    "title": "Pow(x, n)",
    "slug": "powx-n",
    "difficulty": "Medium",
    "acceptance_rate": 36.61,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/powx-n"
  },
  {
    "id": "51",
    "frontend_id": "51",
    "title": "N-Queens",
    "slug": "n-queens",
    "difficulty": "Hard",
    "acceptance_rate": 71.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-queens"
  },
  {
    "id": "52",
    "frontend_id": "52",
    "title": "N-Queens II",
    "slug": "n-queens-ii",
    "difficulty": "Hard",
    "acceptance_rate": 76.18,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-queens-ii"
  },
  {
    "id": "53",
    "frontend_id": "53",
    "title": "Maximum Subarray",
    "slug": "maximum-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 51.82,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/maximum-subarray"
  },
  {
    "id": "54",
    "frontend_id": "54",
    "title": "Spiral Matrix",
    "slug": "spiral-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 53.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/spiral-matrix"
  },
  {
    "id": "55",
    "frontend_id": "55",
    "title": "Jump Game",
    "slug": "jump-game",
    "difficulty": "Medium",
    "acceptance_rate": 39.17,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/jump-game"
  },
  {
    "id": "56",
    "frontend_id": "56",
    "title": "Merge Intervals",
    "slug": "merge-intervals",
    "difficulty": "Medium",
    "acceptance_rate": 48.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/merge-intervals"
  },
  {
    "id": "57",
    "frontend_id": "57",
    "title": "Insert Interval",
    "slug": "insert-interval",
    "difficulty": "Medium",
    "acceptance_rate": 43.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/insert-interval"
  },
  {
    "id": "58",
    "frontend_id": "58",
    "title": "Length of Last Word",
    "slug": "length-of-last-word",
    "difficulty": "Easy",
    "acceptance_rate": 55.65,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/length-of-last-word"
  },
  {
    "id": "59",
    "frontend_id": "59",
    "title": "Spiral Matrix II",
    "slug": "spiral-matrix-ii",
    "difficulty": "Medium",
    "acceptance_rate": 73.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/spiral-matrix-ii"
  },
  {
    "id": "60",
    "frontend_id": "60",
    "title": "Permutation Sequence",
    "slug": "permutation-sequence",
    "difficulty": "Hard",
    "acceptance_rate": 49.31,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/permutation-sequence"
  },
  {
    "id": "61",
    "frontend_id": "61",
    "title": "Rotate List",
    "slug": "rotate-list",
    "difficulty": "Medium",
    "acceptance_rate": 39.51,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotate-list"
  },
  {
    "id": "62",
    "frontend_id": "62",
    "title": "Unique Paths",
    "slug": "unique-paths",
    "difficulty": "Medium",
    "acceptance_rate": 65.48,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-paths"
  },
  {
    "id": "63",
    "frontend_id": "63",
    "title": "Unique Paths II",
    "slug": "unique-paths-ii",
    "difficulty": "Medium",
    "acceptance_rate": 42.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-paths-ii"
  },
  {
    "id": "64",
    "frontend_id": "64",
    "title": "Minimum Path Sum",
    "slug": "minimum-path-sum",
    "difficulty": "Medium",
    "acceptance_rate": 65.98,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-path-sum"
  },
  {
    "id": "65",
    "frontend_id": "65",
    "title": "Valid Number",
    "slug": "valid-number",
    "difficulty": "Hard",
    "acceptance_rate": 21.21,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-number"
  },
  {
    "id": "66",
    "frontend_id": "66",
    "title": "Plus One",
    "slug": "plus-one",
    "difficulty": "Easy",
    "acceptance_rate": 47.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/plus-one"
  },
  {
    "id": "67",
    "frontend_id": "67",
    "title": "Add Binary",
    "slug": "add-binary",
    "difficulty": "Easy",
    "acceptance_rate": 55.3,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-binary"
  },
  {
    "id": "68",
    "frontend_id": "68",
    "title": "Text Justification",
    "slug": "text-justification",
    "difficulty": "Hard",
    "acceptance_rate": 47.35,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/text-justification"
  },
  {
    "id": "69",
    "frontend_id": "69",
    "title": "Sqrt(x)",
    "slug": "sqrtx",
    "difficulty": "Easy",
    "acceptance_rate": 40.1,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/sqrtx"
  },
  {
    "id": "70",
    "frontend_id": "70",
    "title": "Climbing Stairs",
    "slug": "climbing-stairs",
    "difficulty": "Easy",
    "acceptance_rate": 53.38,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/climbing-stairs"
  },
  {
    "id": "71",
    "frontend_id": "71",
    "title": "Simplify Path",
    "slug": "simplify-path",
    "difficulty": "Medium",
    "acceptance_rate": 46.88,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/simplify-path"
  },
  {
    "id": "72",
    "frontend_id": "72",
    "title": "Edit Distance",
    "slug": "edit-distance",
    "difficulty": "Medium",
    "acceptance_rate": 58.3,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/edit-distance"
  },
  {
    "id": "73",
    "frontend_id": "73",
    "title": "Set Matrix Zeroes",
    "slug": "set-matrix-zeroes",
    "difficulty": "Medium",
    "acceptance_rate": 59.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/set-matrix-zeroes"
  },
  {
    "id": "74",
    "frontend_id": "74",
    "title": "Search a 2D Matrix",
    "slug": "search-a-2d-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 51.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/search-a-2d-matrix"
  },
  {
    "id": "75",
    "frontend_id": "75",
    "title": "Sort Colors",
    "slug": "sort-colors",
    "difficulty": "Medium",
    "acceptance_rate": 66.53,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-colors"
  },
  {
    "id": "76",
    "frontend_id": "76",
    "title": "Minimum Window Substring",
    "slug": "minimum-window-substring",
    "difficulty": "Hard",
    "acceptance_rate": 44.81,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-window-substring"
  },
  {
    "id": "77",
    "frontend_id": "77",
    "title": "Combinations",
    "slug": "combinations",
    "difficulty": "Medium",
    "acceptance_rate": 72.42,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/combinations"
  },
  {
    "id": "78",
    "frontend_id": "78",
    "title": "Subsets",
    "slug": "subsets",
    "difficulty": "Medium",
    "acceptance_rate": 80.38,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/subsets"
  },
  {
    "id": "79",
    "frontend_id": "79",
    "title": "Word Search",
    "slug": "word-search",
    "difficulty": "Medium",
    "acceptance_rate": 44.75,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-search"
  },
  {
    "id": "80",
    "frontend_id": "80",
    "title": "Remove Duplicates from Sorted Array II",
    "slug": "remove-duplicates-from-sorted-array-ii",
    "difficulty": "Medium",
    "acceptance_rate": 62.36,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii"
  },
  {
    "id": "81",
    "frontend_id": "81",
    "title": "Search in Rotated Sorted Array II",
    "slug": "search-in-rotated-sorted-array-ii",
    "difficulty": "Medium",
    "acceptance_rate": 38.64,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii"
  },
  {
    "id": "82",
    "frontend_id": "82",
    "title": "Remove Duplicates from Sorted List II",
    "slug": "remove-duplicates-from-sorted-list-ii",
    "difficulty": "Medium",
    "acceptance_rate": 49.38,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii"
  },
  {
    "id": "83",
    "frontend_id": "83",
    "title": "Remove Duplicates from Sorted List",
    "slug": "remove-duplicates-from-sorted-list",
    "difficulty": "Easy",
    "acceptance_rate": 54.46,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list"
  },
  {
    "id": "84",
    "frontend_id": "84",
    "title": "Largest Rectangle in Histogram",
    "slug": "largest-rectangle-in-histogram",
    "difficulty": "Hard",
    "acceptance_rate": 46.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/largest-rectangle-in-histogram"
  },
  {
    "id": "85",
    "frontend_id": "85",
    "title": "Maximal Rectangle",
    "slug": "maximal-rectangle",
    "difficulty": "Hard",
    "acceptance_rate": 53.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximal-rectangle"
  },
  {
    "id": "86",
    "frontend_id": "86",
    "title": "Partition List",
    "slug": "partition-list",
    "difficulty": "Medium",
    "acceptance_rate": 58.45,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/partition-list"
  },
  {
    "id": "87",
    "frontend_id": "87",
    "title": "Scramble String",
    "slug": "scramble-string",
    "difficulty": "Hard",
    "acceptance_rate": 41.75,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/scramble-string"
  },
  {
    "id": "88",
    "frontend_id": "88",
    "title": "Merge Sorted Array",
    "slug": "merge-sorted-array",
    "difficulty": "Easy",
    "acceptance_rate": 52.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/merge-sorted-array"
  },
  {
    "id": "89",
    "frontend_id": "89",
    "title": "Gray Code",
    "slug": "gray-code",
    "difficulty": "Medium",
    "acceptance_rate": 61.3,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/gray-code"
  },
  {
    "id": "90",
    "frontend_id": "90",
    "title": "Subsets II",
    "slug": "subsets-ii",
    "difficulty": "Medium",
    "acceptance_rate": 59.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subsets-ii"
  },
  {
    "id": "91",
    "frontend_id": "91",
    "title": "Decode Ways",
    "slug": "decode-ways",
    "difficulty": "Medium",
    "acceptance_rate": 36.19,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/decode-ways"
  },
  {
    "id": "92",
    "frontend_id": "92",
    "title": "Reverse Linked List II",
    "slug": "reverse-linked-list-ii",
    "difficulty": "Medium",
    "acceptance_rate": 49.21,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-linked-list-ii"
  },
  {
    "id": "93",
    "frontend_id": "93",
    "title": "Restore IP Addresses",
    "slug": "restore-ip-addresses",
    "difficulty": "Medium",
    "acceptance_rate": 52.51,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/restore-ip-addresses"
  },
  {
    "id": "94",
    "frontend_id": "94",
    "title": "Binary Tree Inorder Traversal",
    "slug": "binary-tree-inorder-traversal",
    "difficulty": "Easy",
    "acceptance_rate": 78.13,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-inorder-traversal"
  },
  {
    "id": "95",
    "frontend_id": "95",
    "title": "Unique Binary Search Trees II",
    "slug": "unique-binary-search-trees-ii",
    "difficulty": "Medium",
    "acceptance_rate": 59.88,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-binary-search-trees-ii"
  },
  {
    "id": "96",
    "frontend_id": "96",
    "title": "Unique Binary Search Trees",
    "slug": "unique-binary-search-trees",
    "difficulty": "Medium",
    "acceptance_rate": 62.19,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-binary-search-trees"
  },
  {
    "id": "97",
    "frontend_id": "97",
    "title": "Interleaving String",
    "slug": "interleaving-string",
    "difficulty": "Medium",
    "acceptance_rate": 41.48,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/interleaving-string"
  },
  {
    "id": "98",
    "frontend_id": "98",
    "title": "Validate Binary Search Tree",
    "slug": "validate-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 34.06,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/validate-binary-search-tree"
  },
  {
    "id": "99",
    "frontend_id": "99",
    "title": "Recover Binary Search Tree",
    "slug": "recover-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 55.61,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/recover-binary-search-tree"
  },
  {
    "id": "100",
    "frontend_id": "100",
    "title": "Same Tree",
    "slug": "same-tree",
    "difficulty": "Easy",
    "acceptance_rate": 64.58,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/same-tree"
  },
  {
    "id": "101",
    "frontend_id": "101",
    "title": "Symmetric Tree",
    "slug": "symmetric-tree",
    "difficulty": "Easy",
    "acceptance_rate": 58.78,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/symmetric-tree"
  },
  {
    "id": "102",
    "frontend_id": "102",
    "title": "Binary Tree Level Order Traversal",
    "slug": "binary-tree-level-order-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 69.98,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-level-order-traversal"
  },
  {
    "id": "103",
    "frontend_id": "103",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "slug": "binary-tree-zigzag-level-order-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 61.14,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal"
  },
  {
    "id": "104",
    "frontend_id": "104",
    "title": "Maximum Depth of Binary Tree",
    "slug": "maximum-depth-of-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 76.84,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/maximum-depth-of-binary-tree"
  },
  {
    "id": "105",
    "frontend_id": "105",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 66.27,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal"
  },
  {
    "id": "106",
    "frontend_id": "106",
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 65.85,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal"
  },
  {
    "id": "107",
    "frontend_id": "107",
    "title": "Binary Tree Level Order Traversal II",
    "slug": "binary-tree-level-order-traversal-ii",
    "difficulty": "Medium",
    "acceptance_rate": 65.5,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii"
  },
  {
    "id": "108",
    "frontend_id": "108",
    "title": "Convert Sorted Array to Binary Search Tree",
    "slug": "convert-sorted-array-to-binary-search-tree",
    "difficulty": "Easy",
    "acceptance_rate": 73.66,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree"
  },
  {
    "id": "109",
    "frontend_id": "109",
    "title": "Convert Sorted List to Binary Search Tree",
    "slug": "convert-sorted-list-to-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 63.99,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree"
  },
  {
    "id": "110",
    "frontend_id": "110",
    "title": "Balanced Binary Tree",
    "slug": "balanced-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 54.76,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/balanced-binary-tree"
  },
  {
    "id": "111",
    "frontend_id": "111",
    "title": "Minimum Depth of Binary Tree",
    "slug": "minimum-depth-of-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 50.14,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-depth-of-binary-tree"
  },
  {
    "id": "112",
    "frontend_id": "112",
    "title": "Path Sum",
    "slug": "path-sum",
    "difficulty": "Easy",
    "acceptance_rate": 52.51,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/path-sum"
  },
  {
    "id": "113",
    "frontend_id": "113",
    "title": "Path Sum II",
    "slug": "path-sum-ii",
    "difficulty": "Medium",
    "acceptance_rate": 60.14,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/path-sum-ii"
  },
  {
    "id": "114",
    "frontend_id": "114",
    "title": "Flatten Binary Tree to Linked List",
    "slug": "flatten-binary-tree-to-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 67.85,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list"
  },
  {
    "id": "115",
    "frontend_id": "115",
    "title": "Distinct Subsequences",
    "slug": "distinct-subsequences",
    "difficulty": "Hard",
    "acceptance_rate": 49.57,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/distinct-subsequences"
  },
  {
    "id": "116",
    "frontend_id": "116",
    "title": "Populating Next Right Pointers in Each Node",
    "slug": "populating-next-right-pointers-in-each-node",
    "difficulty": "Medium",
    "acceptance_rate": 64.98,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node"
  },
  {
    "id": "117",
    "frontend_id": "117",
    "title": "Populating Next Right Pointers in Each Node II",
    "slug": "populating-next-right-pointers-in-each-node-ii",
    "difficulty": "Medium",
    "acceptance_rate": 55.02,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii"
  },
  {
    "id": "118",
    "frontend_id": "118",
    "title": "Pascal's Triangle",
    "slug": "pascals-triangle",
    "difficulty": "Easy",
    "acceptance_rate": 76.55,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/pascals-triangle"
  },
  {
    "id": "119",
    "frontend_id": "119",
    "title": "Pascal's Triangle II",
    "slug": "pascals-triangle-ii",
    "difficulty": "Easy",
    "acceptance_rate": 65.59,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/pascals-triangle-ii"
  },
  {
    "id": "120",
    "frontend_id": "120",
    "title": "Triangle",
    "slug": "triangle",
    "difficulty": "Medium",
    "acceptance_rate": 58.73,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/triangle"
  },
  {
    "id": "121",
    "frontend_id": "121",
    "title": "Best Time to Buy and Sell Stock",
    "slug": "best-time-to-buy-and-sell-stock",
    "difficulty": "Easy",
    "acceptance_rate": 54.86,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock"
  },
  {
    "id": "122",
    "frontend_id": "122",
    "title": "Best Time to Buy and Sell Stock II",
    "slug": "best-time-to-buy-and-sell-stock-ii",
    "difficulty": "Medium",
    "acceptance_rate": 68.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"
  },
  {
    "id": "123",
    "frontend_id": "123",
    "title": "Best Time to Buy and Sell Stock III",
    "slug": "best-time-to-buy-and-sell-stock-iii",
    "difficulty": "Hard",
    "acceptance_rate": 50.39,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"
  },
  {
    "id": "124",
    "frontend_id": "124",
    "title": "Binary Tree Maximum Path Sum",
    "slug": "binary-tree-maximum-path-sum",
    "difficulty": "Hard",
    "acceptance_rate": 40.98,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum"
  },
  {
    "id": "125",
    "frontend_id": "125",
    "title": "Valid Palindrome",
    "slug": "valid-palindrome",
    "difficulty": "Easy",
    "acceptance_rate": 50.33,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-palindrome"
  },
  {
    "id": "126",
    "frontend_id": "126",
    "title": "Word Ladder II",
    "slug": "word-ladder-ii",
    "difficulty": "Hard",
    "acceptance_rate": 27.12,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-ladder-ii"
  },
  {
    "id": "127",
    "frontend_id": "127",
    "title": "Word Ladder",
    "slug": "word-ladder",
    "difficulty": "Hard",
    "acceptance_rate": 42.05,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/word-ladder"
  },
  {
    "id": "128",
    "frontend_id": "128",
    "title": "Longest Consecutive Sequence",
    "slug": "longest-consecutive-sequence",
    "difficulty": "Medium",
    "acceptance_rate": 47.15,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-consecutive-sequence"
  },
  {
    "id": "129",
    "frontend_id": "129",
    "title": "Sum Root to Leaf Numbers",
    "slug": "sum-root-to-leaf-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 68.04,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers"
  },
  {
    "id": "130",
    "frontend_id": "130",
    "title": "Surrounded Regions",
    "slug": "surrounded-regions",
    "difficulty": "Medium",
    "acceptance_rate": 42.2,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/surrounded-regions"
  },
  {
    "id": "131",
    "frontend_id": "131",
    "title": "Palindrome Partitioning",
    "slug": "palindrome-partitioning",
    "difficulty": "Medium",
    "acceptance_rate": 71.52,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindrome-partitioning"
  },
  {
    "id": "132",
    "frontend_id": "132",
    "title": "Palindrome Partitioning II",
    "slug": "palindrome-partitioning-ii",
    "difficulty": "Hard",
    "acceptance_rate": 34.94,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindrome-partitioning-ii"
  },
  {
    "id": "133",
    "frontend_id": "133",
    "title": "Clone Graph",
    "slug": "clone-graph",
    "difficulty": "Medium",
    "acceptance_rate": 61.44,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/clone-graph"
  },
  {
    "id": "134",
    "frontend_id": "134",
    "title": "Gas Station",
    "slug": "gas-station",
    "difficulty": "Medium",
    "acceptance_rate": 46.04,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/gas-station"
  },
  {
    "id": "135",
    "frontend_id": "135",
    "title": "Candy",
    "slug": "candy",
    "difficulty": "Hard",
    "acceptance_rate": 44.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/candy"
  },
  {
    "id": "136",
    "frontend_id": "136",
    "title": "Single Number",
    "slug": "single-number",
    "difficulty": "Easy",
    "acceptance_rate": 75.48,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/single-number"
  },
  {
    "id": "137",
    "frontend_id": "137",
    "title": "Single Number II",
    "slug": "single-number-ii",
    "difficulty": "Medium",
    "acceptance_rate": 64.8,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/single-number-ii"
  },
  {
    "id": "138",
    "frontend_id": "138",
    "title": "Copy List with Random Pointer",
    "slug": "copy-list-with-random-pointer",
    "difficulty": "Medium",
    "acceptance_rate": 59.73,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/copy-list-with-random-pointer"
  },
  {
    "id": "139",
    "frontend_id": "139",
    "title": "Word Break",
    "slug": "word-break",
    "difficulty": "Medium",
    "acceptance_rate": 47.97,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/word-break"
  },
  {
    "id": "140",
    "frontend_id": "140",
    "title": "Word Break II",
    "slug": "word-break-ii",
    "difficulty": "Hard",
    "acceptance_rate": 53.09,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-break-ii"
  },
  {
    "id": "141",
    "frontend_id": "141",
    "title": "Linked List Cycle",
    "slug": "linked-list-cycle",
    "difficulty": "Easy",
    "acceptance_rate": 52.1,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/linked-list-cycle"
  },
  {
    "id": "142",
    "frontend_id": "142",
    "title": "Linked List Cycle II",
    "slug": "linked-list-cycle-ii",
    "difficulty": "Medium",
    "acceptance_rate": 54.19,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/linked-list-cycle-ii"
  },
  {
    "id": "143",
    "frontend_id": "143",
    "title": "Reorder List",
    "slug": "reorder-list",
    "difficulty": "Medium",
    "acceptance_rate": 61.77,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reorder-list"
  },
  {
    "id": "144",
    "frontend_id": "144",
    "title": "Binary Tree Preorder Traversal",
    "slug": "binary-tree-preorder-traversal",
    "difficulty": "Easy",
    "acceptance_rate": 72.49,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-preorder-traversal"
  },
  {
    "id": "145",
    "frontend_id": "145",
    "title": "Binary Tree Postorder Traversal",
    "slug": "binary-tree-postorder-traversal",
    "difficulty": "Easy",
    "acceptance_rate": 75.06,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-postorder-traversal"
  },
  {
    "id": "146",
    "frontend_id": "146",
    "title": "LRU Cache",
    "slug": "lru-cache",
    "difficulty": "Medium",
    "acceptance_rate": 44.61,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lru-cache"
  },
  {
    "id": "147",
    "frontend_id": "147",
    "title": "Insertion Sort List",
    "slug": "insertion-sort-list",
    "difficulty": "Medium",
    "acceptance_rate": 55.91,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/insertion-sort-list"
  },
  {
    "id": "148",
    "frontend_id": "148",
    "title": "Sort List",
    "slug": "sort-list",
    "difficulty": "Medium",
    "acceptance_rate": 61.1,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-list"
  },
  {
    "id": "149",
    "frontend_id": "149",
    "title": "Max Points on a Line",
    "slug": "max-points-on-a-line",
    "difficulty": "Hard",
    "acceptance_rate": 28.53,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-points-on-a-line"
  },
  {
    "id": "150",
    "frontend_id": "150",
    "title": "Evaluate Reverse Polish Notation",
    "slug": "evaluate-reverse-polish-notation",
    "difficulty": "Medium",
    "acceptance_rate": 54.24,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation"
  },
  {
    "id": "151",
    "frontend_id": "151",
    "title": "Reverse Words in a String",
    "slug": "reverse-words-in-a-string",
    "difficulty": "Medium",
    "acceptance_rate": 50.51,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-words-in-a-string"
  },
  {
    "id": "152",
    "frontend_id": "152",
    "title": "Maximum Product Subarray",
    "slug": "maximum-product-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 34.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-product-subarray"
  },
  {
    "id": "153",
    "frontend_id": "153",
    "title": "Find Minimum in Rotated Sorted Array",
    "slug": "find-minimum-in-rotated-sorted-array",
    "difficulty": "Medium",
    "acceptance_rate": 52.26,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array"
  },
  {
    "id": "154",
    "frontend_id": "154",
    "title": "Find Minimum in Rotated Sorted Array II",
    "slug": "find-minimum-in-rotated-sorted-array-ii",
    "difficulty": "Hard",
    "acceptance_rate": 44.03,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii"
  },
  {
    "id": "155",
    "frontend_id": "155",
    "title": "Min Stack",
    "slug": "min-stack",
    "difficulty": "Medium",
    "acceptance_rate": 56.03,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/min-stack"
  },
  {
    "id": "156",
    "frontend_id": "156",
    "title": "Binary Tree Upside Down",
    "slug": "binary-tree-upside-down",
    "difficulty": "Medium",
    "acceptance_rate": 64.21,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-upside-down"
  },
  {
    "id": "157",
    "frontend_id": "157",
    "title": "Read N Characters Given Read4",
    "slug": "read-n-characters-given-read4",
    "difficulty": "Easy",
    "acceptance_rate": 42.11,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/read-n-characters-given-read4"
  },
  {
    "id": "158",
    "frontend_id": "158",
    "title": "Read N Characters Given read4 II - Call Multiple Times",
    "slug": "read-n-characters-given-read4-ii-call-multiple-times",
    "difficulty": "Hard",
    "acceptance_rate": 42.78,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times"
  },
  {
    "id": "159",
    "frontend_id": "159",
    "title": "Longest Substring with At Most Two Distinct Characters",
    "slug": "longest-substring-with-at-most-two-distinct-characters",
    "difficulty": "Medium",
    "acceptance_rate": 56.14,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters"
  },
  {
    "id": "160",
    "frontend_id": "160",
    "title": "Intersection of Two Linked Lists",
    "slug": "intersection-of-two-linked-lists",
    "difficulty": "Easy",
    "acceptance_rate": 60.44,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/intersection-of-two-linked-lists"
  },
  {
    "id": "161",
    "frontend_id": "161",
    "title": "One Edit Distance",
    "slug": "one-edit-distance",
    "difficulty": "Medium",
    "acceptance_rate": 34.45,
    "premium": true,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/one-edit-distance"
  },
  {
    "id": "162",
    "frontend_id": "162",
    "title": "Find Peak Element",
    "slug": "find-peak-element",
    "difficulty": "Medium",
    "acceptance_rate": 46.38,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/find-peak-element"
  },
  {
    "id": "163",
    "frontend_id": "163",
    "title": "Missing Ranges",
    "slug": "missing-ranges",
    "difficulty": "Easy",
    "acceptance_rate": 35.04,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/missing-ranges"
  },
  {
    "id": "164",
    "frontend_id": "164",
    "title": "Maximum Gap",
    "slug": "maximum-gap",
    "difficulty": "Medium",
    "acceptance_rate": 48.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Radix Sort",
        "slug": "radix-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-gap"
  },
  {
    "id": "165",
    "frontend_id": "165",
    "title": "Compare Version Numbers",
    "slug": "compare-version-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 42.03,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/compare-version-numbers"
  },
  {
    "id": "166",
    "frontend_id": "166",
    "title": "Fraction to Recurring Decimal",
    "slug": "fraction-to-recurring-decimal",
    "difficulty": "Medium",
    "acceptance_rate": 25.96,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/fraction-to-recurring-decimal"
  },
  {
    "id": "167",
    "frontend_id": "167",
    "title": "Two Sum II - Input Array Is Sorted",
    "slug": "two-sum-ii-input-array-is-sorted",
    "difficulty": "Medium",
    "acceptance_rate": 62.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted"
  },
  {
    "id": "168",
    "frontend_id": "168",
    "title": "Excel Sheet Column Title",
    "slug": "excel-sheet-column-title",
    "difficulty": "Easy",
    "acceptance_rate": 42.99,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/excel-sheet-column-title"
  },
  {
    "id": "169",
    "frontend_id": "169",
    "title": "Majority Element",
    "slug": "majority-element",
    "difficulty": "Easy",
    "acceptance_rate": 65.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/majority-element"
  },
  {
    "id": "170",
    "frontend_id": "170",
    "title": "Two Sum III - Data structure design",
    "slug": "two-sum-iii-data-structure-design",
    "difficulty": "Easy",
    "acceptance_rate": 38.58,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/two-sum-iii-data-structure-design"
  },
  {
    "id": "171",
    "frontend_id": "171",
    "title": "Excel Sheet Column Number",
    "slug": "excel-sheet-column-number",
    "difficulty": "Easy",
    "acceptance_rate": 65.4,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/excel-sheet-column-number"
  },
  {
    "id": "172",
    "frontend_id": "172",
    "title": "Factorial Trailing Zeroes",
    "slug": "factorial-trailing-zeroes",
    "difficulty": "Medium",
    "acceptance_rate": 44.53,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/factorial-trailing-zeroes"
  },
  {
    "id": "173",
    "frontend_id": "173",
    "title": "Binary Search Tree Iterator",
    "slug": "binary-search-tree-iterator",
    "difficulty": "Medium",
    "acceptance_rate": 74.4,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-search-tree-iterator"
  },
  {
    "id": "174",
    "frontend_id": "174",
    "title": "Dungeon Game",
    "slug": "dungeon-game",
    "difficulty": "Hard",
    "acceptance_rate": 39.19,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/dungeon-game"
  },
  {
    "id": "175",
    "frontend_id": "175",
    "title": "Combine Two Tables",
    "slug": "combine-two-tables",
    "difficulty": "Easy",
    "acceptance_rate": 77.68,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/combine-two-tables"
  },
  {
    "id": "176",
    "frontend_id": "176",
    "title": "Second Highest Salary",
    "slug": "second-highest-salary",
    "difficulty": "Medium",
    "acceptance_rate": 43.14,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/second-highest-salary"
  },
  {
    "id": "177",
    "frontend_id": "177",
    "title": "Nth Highest Salary",
    "slug": "nth-highest-salary",
    "difficulty": "Medium",
    "acceptance_rate": 37.89,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/nth-highest-salary"
  },
  {
    "id": "178",
    "frontend_id": "178",
    "title": "Rank Scores",
    "slug": "rank-scores",
    "difficulty": "Medium",
    "acceptance_rate": 64.69,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rank-scores"
  },
  {
    "id": "179",
    "frontend_id": "179",
    "title": "Largest Number",
    "slug": "largest-number",
    "difficulty": "Medium",
    "acceptance_rate": 40.94,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-number"
  },
  {
    "id": "180",
    "frontend_id": "180",
    "title": "Consecutive Numbers",
    "slug": "consecutive-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 45.54,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/consecutive-numbers"
  },
  {
    "id": "181",
    "frontend_id": "181",
    "title": "Employees Earning More Than Their Managers",
    "slug": "employees-earning-more-than-their-managers",
    "difficulty": "Easy",
    "acceptance_rate": 71.14,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/employees-earning-more-than-their-managers"
  },
  {
    "id": "182",
    "frontend_id": "182",
    "title": "Duplicate Emails",
    "slug": "duplicate-emails",
    "difficulty": "Easy",
    "acceptance_rate": 72.17,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/duplicate-emails"
  },
  {
    "id": "183",
    "frontend_id": "183",
    "title": "Customers Who Never Order",
    "slug": "customers-who-never-order",
    "difficulty": "Easy",
    "acceptance_rate": 70.38,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/customers-who-never-order"
  },
  {
    "id": "184",
    "frontend_id": "184",
    "title": "Department Highest Salary",
    "slug": "department-highest-salary",
    "difficulty": "Medium",
    "acceptance_rate": 54.05,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/department-highest-salary"
  },
  {
    "id": "185",
    "frontend_id": "185",
    "title": "Department Top Three Salaries",
    "slug": "department-top-three-salaries",
    "difficulty": "Hard",
    "acceptance_rate": 57.02,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/department-top-three-salaries"
  },
  {
    "id": "186",
    "frontend_id": "186",
    "title": "Reverse Words in a String II",
    "slug": "reverse-words-in-a-string-ii",
    "difficulty": "Medium",
    "acceptance_rate": 55.83,
    "premium": true,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-words-in-a-string-ii"
  },
  {
    "id": "187",
    "frontend_id": "187",
    "title": "Repeated DNA Sequences",
    "slug": "repeated-dna-sequences",
    "difficulty": "Medium",
    "acceptance_rate": 50.84,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/repeated-dna-sequences"
  },
  {
    "id": "188",
    "frontend_id": "188",
    "title": "Best Time to Buy and Sell Stock IV",
    "slug": "best-time-to-buy-and-sell-stock-iv",
    "difficulty": "Hard",
    "acceptance_rate": 46.22,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"
  },
  {
    "id": "189",
    "frontend_id": "189",
    "title": "Rotate Array",
    "slug": "rotate-array",
    "difficulty": "Medium",
    "acceptance_rate": 42.57,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotate-array"
  },
  {
    "id": "190",
    "frontend_id": "190",
    "title": "Reverse Bits",
    "slug": "reverse-bits",
    "difficulty": "Easy",
    "acceptance_rate": 62.38,
    "premium": false,
    "topics": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-bits"
  },
  {
    "id": "191",
    "frontend_id": "191",
    "title": "Number of 1 Bits",
    "slug": "number-of-1-bits",
    "difficulty": "Easy",
    "acceptance_rate": 73.93,
    "premium": false,
    "topics": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-1-bits"
  },
  {
    "id": "192",
    "frontend_id": "192",
    "title": "Word Frequency",
    "slug": "word-frequency",
    "difficulty": "Medium",
    "acceptance_rate": 26.93,
    "premium": false,
    "topics": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-frequency"
  },
  {
    "id": "193",
    "frontend_id": "193",
    "title": "Valid Phone Numbers",
    "slug": "valid-phone-numbers",
    "difficulty": "Easy",
    "acceptance_rate": 27.05,
    "premium": false,
    "topics": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-phone-numbers"
  },
  {
    "id": "194",
    "frontend_id": "194",
    "title": "Transpose File",
    "slug": "transpose-file",
    "difficulty": "Medium",
    "acceptance_rate": 28.04,
    "premium": false,
    "topics": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/transpose-file"
  },
  {
    "id": "195",
    "frontend_id": "195",
    "title": "Tenth Line",
    "slug": "tenth-line",
    "difficulty": "Easy",
    "acceptance_rate": 34.26,
    "premium": false,
    "topics": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/tenth-line"
  },
  {
    "id": "196",
    "frontend_id": "196",
    "title": "Delete Duplicate Emails",
    "slug": "delete-duplicate-emails",
    "difficulty": "Easy",
    "acceptance_rate": 63.93,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-duplicate-emails"
  },
  {
    "id": "197",
    "frontend_id": "197",
    "title": "Rising Temperature",
    "slug": "rising-temperature",
    "difficulty": "Easy",
    "acceptance_rate": 49.9,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rising-temperature"
  },
  {
    "id": "198",
    "frontend_id": "198",
    "title": "House Robber",
    "slug": "house-robber",
    "difficulty": "Medium",
    "acceptance_rate": 52.04,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/house-robber"
  },
  {
    "id": "199",
    "frontend_id": "199",
    "title": "Binary Tree Right Side View",
    "slug": "binary-tree-right-side-view",
    "difficulty": "Medium",
    "acceptance_rate": 65.97,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/binary-tree-right-side-view"
  },
  {
    "id": "200",
    "frontend_id": "200",
    "title": "Number of Islands",
    "slug": "number-of-islands",
    "difficulty": "Medium",
    "acceptance_rate": 61.76,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/number-of-islands"
  },
  {
    "id": "201",
    "frontend_id": "201",
    "title": "Bitwise AND of Numbers Range",
    "slug": "bitwise-and-of-numbers-range",
    "difficulty": "Medium",
    "acceptance_rate": 47.58,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bitwise-and-of-numbers-range"
  },
  {
    "id": "202",
    "frontend_id": "202",
    "title": "Happy Number",
    "slug": "happy-number",
    "difficulty": "Easy",
    "acceptance_rate": 57.66,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/happy-number"
  },
  {
    "id": "203",
    "frontend_id": "203",
    "title": "Remove Linked List Elements",
    "slug": "remove-linked-list-elements",
    "difficulty": "Easy",
    "acceptance_rate": 51.31,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-linked-list-elements"
  },
  {
    "id": "204",
    "frontend_id": "204",
    "title": "Count Primes",
    "slug": "count-primes",
    "difficulty": "Medium",
    "acceptance_rate": 34.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-primes"
  },
  {
    "id": "205",
    "frontend_id": "205",
    "title": "Isomorphic Strings",
    "slug": "isomorphic-strings",
    "difficulty": "Easy",
    "acceptance_rate": 46.49,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/isomorphic-strings"
  },
  {
    "id": "206",
    "frontend_id": "206",
    "title": "Reverse Linked List",
    "slug": "reverse-linked-list",
    "difficulty": "Easy",
    "acceptance_rate": 78.77,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-linked-list"
  },
  {
    "id": "207",
    "frontend_id": "207",
    "title": "Course Schedule",
    "slug": "course-schedule",
    "difficulty": "Medium",
    "acceptance_rate": 48.62,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/course-schedule"
  },
  {
    "id": "208",
    "frontend_id": "208",
    "title": "Implement Trie (Prefix Tree)",
    "slug": "implement-trie-prefix-tree",
    "difficulty": "Medium",
    "acceptance_rate": 67.58,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/implement-trie-prefix-tree"
  },
  {
    "id": "209",
    "frontend_id": "209",
    "title": "Minimum Size Subarray Sum",
    "slug": "minimum-size-subarray-sum",
    "difficulty": "Medium",
    "acceptance_rate": 48.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-size-subarray-sum"
  },
  {
    "id": "210",
    "frontend_id": "210",
    "title": "Course Schedule II",
    "slug": "course-schedule-ii",
    "difficulty": "Medium",
    "acceptance_rate": 52.8,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/course-schedule-ii"
  },
  {
    "id": "211",
    "frontend_id": "211",
    "title": "Design Add and Search Words Data Structure",
    "slug": "design-add-and-search-words-data-structure",
    "difficulty": "Medium",
    "acceptance_rate": 46.81,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-add-and-search-words-data-structure"
  },
  {
    "id": "212",
    "frontend_id": "212",
    "title": "Word Search II",
    "slug": "word-search-ii",
    "difficulty": "Hard",
    "acceptance_rate": 37.08,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/word-search-ii"
  },
  {
    "id": "213",
    "frontend_id": "213",
    "title": "House Robber II",
    "slug": "house-robber-ii",
    "difficulty": "Medium",
    "acceptance_rate": 43.22,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/house-robber-ii"
  },
  {
    "id": "214",
    "frontend_id": "214",
    "title": "Shortest Palindrome",
    "slug": "shortest-palindrome",
    "difficulty": "Hard",
    "acceptance_rate": 40.38,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-palindrome"
  },
  {
    "id": "215",
    "frontend_id": "215",
    "title": "Kth Largest Element in an Array",
    "slug": "kth-largest-element-in-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 67.69,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/kth-largest-element-in-an-array"
  },
  {
    "id": "216",
    "frontend_id": "216",
    "title": "Combination Sum III",
    "slug": "combination-sum-iii",
    "difficulty": "Medium",
    "acceptance_rate": 71.47,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/combination-sum-iii"
  },
  {
    "id": "217",
    "frontend_id": "217",
    "title": "Contains Duplicate",
    "slug": "contains-duplicate",
    "difficulty": "Easy",
    "acceptance_rate": 62.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/contains-duplicate"
  },
  {
    "id": "218",
    "frontend_id": "218",
    "title": "The Skyline Problem",
    "slug": "the-skyline-problem",
    "difficulty": "Hard",
    "acceptance_rate": 43.7,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/the-skyline-problem"
  },
  {
    "id": "219",
    "frontend_id": "219",
    "title": "Contains Duplicate II",
    "slug": "contains-duplicate-ii",
    "difficulty": "Easy",
    "acceptance_rate": 48.34,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/contains-duplicate-ii"
  },
  {
    "id": "220",
    "frontend_id": "220",
    "title": "Contains Duplicate III",
    "slug": "contains-duplicate-iii",
    "difficulty": "Hard",
    "acceptance_rate": 23.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/contains-duplicate-iii"
  },
  {
    "id": "221",
    "frontend_id": "221",
    "title": "Maximal Square",
    "slug": "maximal-square",
    "difficulty": "Medium",
    "acceptance_rate": 48.35,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximal-square"
  },
  {
    "id": "222",
    "frontend_id": "222",
    "title": "Count Complete Tree Nodes",
    "slug": "count-complete-tree-nodes",
    "difficulty": "Easy",
    "acceptance_rate": 69.15,
    "premium": false,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-complete-tree-nodes"
  },
  {
    "id": "223",
    "frontend_id": "223",
    "title": "Rectangle Area",
    "slug": "rectangle-area",
    "difficulty": "Medium",
    "acceptance_rate": 47.1,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rectangle-area"
  },
  {
    "id": "224",
    "frontend_id": "224",
    "title": "Basic Calculator",
    "slug": "basic-calculator",
    "difficulty": "Hard",
    "acceptance_rate": 45.04,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/basic-calculator"
  },
  {
    "id": "225",
    "frontend_id": "225",
    "title": "Implement Stack using Queues",
    "slug": "implement-stack-using-queues",
    "difficulty": "Easy",
    "acceptance_rate": 66.68,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/implement-stack-using-queues"
  },
  {
    "id": "226",
    "frontend_id": "226",
    "title": "Invert Binary Tree",
    "slug": "invert-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 78.69,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/invert-binary-tree"
  },
  {
    "id": "227",
    "frontend_id": "227",
    "title": "Basic Calculator II",
    "slug": "basic-calculator-ii",
    "difficulty": "Medium",
    "acceptance_rate": 45.37,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/basic-calculator-ii"
  },
  {
    "id": "228",
    "frontend_id": "228",
    "title": "Summary Ranges",
    "slug": "summary-ranges",
    "difficulty": "Easy",
    "acceptance_rate": 52.68,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/summary-ranges"
  },
  {
    "id": "229",
    "frontend_id": "229",
    "title": "Majority Element II",
    "slug": "majority-element-ii",
    "difficulty": "Medium",
    "acceptance_rate": 53.82,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/majority-element-ii"
  },
  {
    "id": "230",
    "frontend_id": "230",
    "title": "Kth Smallest Element in a BST",
    "slug": "kth-smallest-element-in-a-bst",
    "difficulty": "Medium",
    "acceptance_rate": 74.84,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst"
  },
  {
    "id": "231",
    "frontend_id": "231",
    "title": "Power of Two",
    "slug": "power-of-two",
    "difficulty": "Easy",
    "acceptance_rate": 48.23,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/power-of-two"
  },
  {
    "id": "232",
    "frontend_id": "232",
    "title": "Implement Queue using Stacks",
    "slug": "implement-queue-using-stacks",
    "difficulty": "Easy",
    "acceptance_rate": 67.83,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/implement-queue-using-stacks"
  },
  {
    "id": "233",
    "frontend_id": "233",
    "title": "Number of Digit One",
    "slug": "number-of-digit-one",
    "difficulty": "Hard",
    "acceptance_rate": 35.63,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-digit-one"
  },
  {
    "id": "234",
    "frontend_id": "234",
    "title": "Palindrome Linked List",
    "slug": "palindrome-linked-list",
    "difficulty": "Easy",
    "acceptance_rate": 55.3,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/palindrome-linked-list"
  },
  {
    "id": "235",
    "frontend_id": "235",
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "slug": "lowest-common-ancestor-of-a-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 67.61,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree"
  },
  {
    "id": "236",
    "frontend_id": "236",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "slug": "lowest-common-ancestor-of-a-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 65.9,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree"
  },
  {
    "id": "237",
    "frontend_id": "237",
    "title": "Delete Node in a Linked List",
    "slug": "delete-node-in-a-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 81.85,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-node-in-a-linked-list"
  },
  {
    "id": "238",
    "frontend_id": "238",
    "title": "Product of Array Except Self",
    "slug": "product-of-array-except-self",
    "difficulty": "Medium",
    "acceptance_rate": 67.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/product-of-array-except-self"
  },
  {
    "id": "239",
    "frontend_id": "239",
    "title": "Sliding Window Maximum",
    "slug": "sliding-window-maximum",
    "difficulty": "Hard",
    "acceptance_rate": 47.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sliding-window-maximum"
  },
  {
    "id": "240",
    "frontend_id": "240",
    "title": "Search a 2D Matrix II",
    "slug": "search-a-2d-matrix-ii",
    "difficulty": "Medium",
    "acceptance_rate": 54.57,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/search-a-2d-matrix-ii"
  },
  {
    "id": "241",
    "frontend_id": "241",
    "title": "Different Ways to Add Parentheses",
    "slug": "different-ways-to-add-parentheses",
    "difficulty": "Medium",
    "acceptance_rate": 72.16,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/different-ways-to-add-parentheses"
  },
  {
    "id": "242",
    "frontend_id": "242",
    "title": "Valid Anagram",
    "slug": "valid-anagram",
    "difficulty": "Easy",
    "acceptance_rate": 66.26,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/valid-anagram"
  },
  {
    "id": "243",
    "frontend_id": "243",
    "title": "Shortest Word Distance",
    "slug": "shortest-word-distance",
    "difficulty": "Easy",
    "acceptance_rate": 65.83,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-word-distance"
  },
  {
    "id": "244",
    "frontend_id": "244",
    "title": "Shortest Word Distance II",
    "slug": "shortest-word-distance-ii",
    "difficulty": "Medium",
    "acceptance_rate": 61.94,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/shortest-word-distance-ii"
  },
  {
    "id": "245",
    "frontend_id": "245",
    "title": "Shortest Word Distance III",
    "slug": "shortest-word-distance-iii",
    "difficulty": "Medium",
    "acceptance_rate": 58.91,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-word-distance-iii"
  },
  {
    "id": "246",
    "frontend_id": "246",
    "title": "Strobogrammatic Number",
    "slug": "strobogrammatic-number",
    "difficulty": "Easy",
    "acceptance_rate": 47.6,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/strobogrammatic-number"
  },
  {
    "id": "247",
    "frontend_id": "247",
    "title": "Strobogrammatic Number II",
    "slug": "strobogrammatic-number-ii",
    "difficulty": "Medium",
    "acceptance_rate": 52.97,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/strobogrammatic-number-ii"
  },
  {
    "id": "248",
    "frontend_id": "248",
    "title": "Strobogrammatic Number III",
    "slug": "strobogrammatic-number-iii",
    "difficulty": "Hard",
    "acceptance_rate": 42.37,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/strobogrammatic-number-iii"
  },
  {
    "id": "249",
    "frontend_id": "249",
    "title": "Group Shifted Strings",
    "slug": "group-shifted-strings",
    "difficulty": "Medium",
    "acceptance_rate": 67.05,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/group-shifted-strings"
  },
  {
    "id": "250",
    "frontend_id": "250",
    "title": "Count Univalue Subtrees",
    "slug": "count-univalue-subtrees",
    "difficulty": "Medium",
    "acceptance_rate": 57.03,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-univalue-subtrees"
  },
  {
    "id": "251",
    "frontend_id": "251",
    "title": "Flatten 2D Vector",
    "slug": "flatten-2d-vector",
    "difficulty": "Medium",
    "acceptance_rate": 50.04,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flatten-2d-vector"
  },
  {
    "id": "252",
    "frontend_id": "252",
    "title": "Meeting Rooms",
    "slug": "meeting-rooms",
    "difficulty": "Easy",
    "acceptance_rate": 58.81,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/meeting-rooms"
  },
  {
    "id": "253",
    "frontend_id": "253",
    "title": "Meeting Rooms II",
    "slug": "meeting-rooms-ii",
    "difficulty": "Medium",
    "acceptance_rate": 51.97,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/meeting-rooms-ii"
  },
  {
    "id": "254",
    "frontend_id": "254",
    "title": "Factor Combinations",
    "slug": "factor-combinations",
    "difficulty": "Medium",
    "acceptance_rate": 50.16,
    "premium": true,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/factor-combinations"
  },
  {
    "id": "255",
    "frontend_id": "255",
    "title": "Verify Preorder Sequence in Binary Search Tree",
    "slug": "verify-preorder-sequence-in-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 50.71,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree"
  },
  {
    "id": "256",
    "frontend_id": "256",
    "title": "Paint House",
    "slug": "paint-house",
    "difficulty": "Medium",
    "acceptance_rate": 63.51,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/paint-house"
  },
  {
    "id": "257",
    "frontend_id": "257",
    "title": "Binary Tree Paths",
    "slug": "binary-tree-paths",
    "difficulty": "Easy",
    "acceptance_rate": 65.94,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-paths"
  },
  {
    "id": "258",
    "frontend_id": "258",
    "title": "Add Digits",
    "slug": "add-digits",
    "difficulty": "Easy",
    "acceptance_rate": 67.67,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-digits"
  },
  {
    "id": "259",
    "frontend_id": "259",
    "title": "3Sum Smaller",
    "slug": "3sum-smaller",
    "difficulty": "Medium",
    "acceptance_rate": 50.94,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/3sum-smaller"
  },
  {
    "id": "260",
    "frontend_id": "260",
    "title": "Single Number III",
    "slug": "single-number-iii",
    "difficulty": "Medium",
    "acceptance_rate": 70.69,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/single-number-iii"
  },
  {
    "id": "261",
    "frontend_id": "261",
    "title": "Graph Valid Tree",
    "slug": "graph-valid-tree",
    "difficulty": "Medium",
    "acceptance_rate": 49.13,
    "premium": true,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/graph-valid-tree"
  },
  {
    "id": "262",
    "frontend_id": "262",
    "title": "Trips and Users",
    "slug": "trips-and-users",
    "difficulty": "Hard",
    "acceptance_rate": 37.03,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/trips-and-users"
  },
  {
    "id": "263",
    "frontend_id": "263",
    "title": "Ugly Number",
    "slug": "ugly-number",
    "difficulty": "Easy",
    "acceptance_rate": 42.22,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ugly-number"
  },
  {
    "id": "264",
    "frontend_id": "264",
    "title": "Ugly Number II",
    "slug": "ugly-number-ii",
    "difficulty": "Medium",
    "acceptance_rate": 49.17,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ugly-number-ii"
  },
  {
    "id": "265",
    "frontend_id": "265",
    "title": "Paint House II",
    "slug": "paint-house-ii",
    "difficulty": "Hard",
    "acceptance_rate": 56.12,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/paint-house-ii"
  },
  {
    "id": "266",
    "frontend_id": "266",
    "title": "Palindrome Permutation",
    "slug": "palindrome-permutation",
    "difficulty": "Easy",
    "acceptance_rate": 68.41,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindrome-permutation"
  },
  {
    "id": "267",
    "frontend_id": "267",
    "title": "Palindrome Permutation II",
    "slug": "palindrome-permutation-ii",
    "difficulty": "Medium",
    "acceptance_rate": 42.05,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindrome-permutation-ii"
  },
  {
    "id": "268",
    "frontend_id": "268",
    "title": "Missing Number",
    "slug": "missing-number",
    "difficulty": "Easy",
    "acceptance_rate": 69.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/missing-number"
  },
  {
    "id": "269",
    "frontend_id": "269",
    "title": "Alien Dictionary",
    "slug": "alien-dictionary",
    "difficulty": "Hard",
    "acceptance_rate": 36.49,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/alien-dictionary"
  },
  {
    "id": "270",
    "frontend_id": "270",
    "title": "Closest Binary Search Tree Value",
    "slug": "closest-binary-search-tree-value",
    "difficulty": "Easy",
    "acceptance_rate": 50.07,
    "premium": true,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/closest-binary-search-tree-value"
  },
  {
    "id": "271",
    "frontend_id": "271",
    "title": "Encode and Decode Strings",
    "slug": "encode-and-decode-strings",
    "difficulty": "Medium",
    "acceptance_rate": 49.11,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/encode-and-decode-strings"
  },
  {
    "id": "272",
    "frontend_id": "272",
    "title": "Closest Binary Search Tree Value II",
    "slug": "closest-binary-search-tree-value-ii",
    "difficulty": "Hard",
    "acceptance_rate": 60.03,
    "premium": true,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/closest-binary-search-tree-value-ii"
  },
  {
    "id": "273",
    "frontend_id": "273",
    "title": "Integer to English Words",
    "slug": "integer-to-english-words",
    "difficulty": "Hard",
    "acceptance_rate": 34.26,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/integer-to-english-words"
  },
  {
    "id": "274",
    "frontend_id": "274",
    "title": "H-Index",
    "slug": "h-index",
    "difficulty": "Medium",
    "acceptance_rate": 39.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/h-index"
  },
  {
    "id": "275",
    "frontend_id": "275",
    "title": "H-Index II",
    "slug": "h-index-ii",
    "difficulty": "Medium",
    "acceptance_rate": 38.7,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/h-index-ii"
  },
  {
    "id": "276",
    "frontend_id": "276",
    "title": "Paint Fence",
    "slug": "paint-fence",
    "difficulty": "Medium",
    "acceptance_rate": 47.54,
    "premium": true,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/paint-fence"
  },
  {
    "id": "277",
    "frontend_id": "277",
    "title": "Find the Celebrity",
    "slug": "find-the-celebrity",
    "difficulty": "Medium",
    "acceptance_rate": 48.26,
    "premium": true,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/find-the-celebrity"
  },
  {
    "id": "278",
    "frontend_id": "278",
    "title": "First Bad Version",
    "slug": "first-bad-version",
    "difficulty": "Easy",
    "acceptance_rate": 45.64,
    "premium": false,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/first-bad-version"
  },
  {
    "id": "279",
    "frontend_id": "279",
    "title": "Perfect Squares",
    "slug": "perfect-squares",
    "difficulty": "Medium",
    "acceptance_rate": 55.48,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/perfect-squares"
  },
  {
    "id": "280",
    "frontend_id": "280",
    "title": "Wiggle Sort",
    "slug": "wiggle-sort",
    "difficulty": "Medium",
    "acceptance_rate": 68.13,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/wiggle-sort"
  },
  {
    "id": "281",
    "frontend_id": "281",
    "title": "Zigzag Iterator",
    "slug": "zigzag-iterator",
    "difficulty": "Medium",
    "acceptance_rate": 65.33,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/zigzag-iterator"
  },
  {
    "id": "282",
    "frontend_id": "282",
    "title": "Expression Add Operators",
    "slug": "expression-add-operators",
    "difficulty": "Hard",
    "acceptance_rate": 41.22,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/expression-add-operators"
  },
  {
    "id": "283",
    "frontend_id": "283",
    "title": "Move Zeroes",
    "slug": "move-zeroes",
    "difficulty": "Easy",
    "acceptance_rate": 62.6,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/move-zeroes"
  },
  {
    "id": "284",
    "frontend_id": "284",
    "title": "Peeking Iterator",
    "slug": "peeking-iterator",
    "difficulty": "Medium",
    "acceptance_rate": 60.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/peeking-iterator"
  },
  {
    "id": "285",
    "frontend_id": "285",
    "title": "Inorder Successor in BST",
    "slug": "inorder-successor-in-bst",
    "difficulty": "Medium",
    "acceptance_rate": 50.52,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/inorder-successor-in-bst"
  },
  {
    "id": "286",
    "frontend_id": "286",
    "title": "Walls and Gates",
    "slug": "walls-and-gates",
    "difficulty": "Medium",
    "acceptance_rate": 62.65,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/walls-and-gates"
  },
  {
    "id": "287",
    "frontend_id": "287",
    "title": "Find the Duplicate Number",
    "slug": "find-the-duplicate-number",
    "difficulty": "Medium",
    "acceptance_rate": 62.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-duplicate-number"
  },
  {
    "id": "288",
    "frontend_id": "288",
    "title": "Unique Word Abbreviation",
    "slug": "unique-word-abbreviation",
    "difficulty": "Medium",
    "acceptance_rate": 26.92,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-word-abbreviation"
  },
  {
    "id": "289",
    "frontend_id": "289",
    "title": "Game of Life",
    "slug": "game-of-life",
    "difficulty": "Medium",
    "acceptance_rate": 71.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/game-of-life"
  },
  {
    "id": "290",
    "frontend_id": "290",
    "title": "Word Pattern",
    "slug": "word-pattern",
    "difficulty": "Easy",
    "acceptance_rate": 42.86,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-pattern"
  },
  {
    "id": "291",
    "frontend_id": "291",
    "title": "Word Pattern II",
    "slug": "word-pattern-ii",
    "difficulty": "Medium",
    "acceptance_rate": 48.56,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-pattern-ii"
  },
  {
    "id": "292",
    "frontend_id": "292",
    "title": "Nim Game",
    "slug": "nim-game",
    "difficulty": "Easy",
    "acceptance_rate": 57.88,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/nim-game"
  },
  {
    "id": "293",
    "frontend_id": "293",
    "title": "Flip Game",
    "slug": "flip-game",
    "difficulty": "Easy",
    "acceptance_rate": 64.86,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flip-game"
  },
  {
    "id": "294",
    "frontend_id": "294",
    "title": "Flip Game II",
    "slug": "flip-game-ii",
    "difficulty": "Medium",
    "acceptance_rate": 52.21,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flip-game-ii"
  },
  {
    "id": "295",
    "frontend_id": "295",
    "title": "Find Median from Data Stream",
    "slug": "find-median-from-data-stream",
    "difficulty": "Hard",
    "acceptance_rate": 53.06,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-median-from-data-stream"
  },
  {
    "id": "296",
    "frontend_id": "296",
    "title": "Best Meeting Point",
    "slug": "best-meeting-point",
    "difficulty": "Hard",
    "acceptance_rate": 61.21,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/best-meeting-point"
  },
  {
    "id": "297",
    "frontend_id": "297",
    "title": "Serialize and Deserialize Binary Tree",
    "slug": "serialize-and-deserialize-binary-tree",
    "difficulty": "Hard",
    "acceptance_rate": 58.47,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree"
  },
  {
    "id": "298",
    "frontend_id": "298",
    "title": "Binary Tree Longest Consecutive Sequence",
    "slug": "binary-tree-longest-consecutive-sequence",
    "difficulty": "Medium",
    "acceptance_rate": 54.02,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence"
  },
  {
    "id": "299",
    "frontend_id": "299",
    "title": "Bulls and Cows",
    "slug": "bulls-and-cows",
    "difficulty": "Medium",
    "acceptance_rate": 51.14,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bulls-and-cows"
  },
  {
    "id": "300",
    "frontend_id": "300",
    "title": "Longest Increasing Subsequence",
    "slug": "longest-increasing-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 57.29,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-increasing-subsequence"
  },
  {
    "id": "301",
    "frontend_id": "301",
    "title": "Remove Invalid Parentheses",
    "slug": "remove-invalid-parentheses",
    "difficulty": "Hard",
    "acceptance_rate": 48.97,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-invalid-parentheses"
  },
  {
    "id": "302",
    "frontend_id": "302",
    "title": "Smallest Rectangle Enclosing Black Pixels",
    "slug": "smallest-rectangle-enclosing-black-pixels",
    "difficulty": "Hard",
    "acceptance_rate": 59.46,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels"
  },
  {
    "id": "303",
    "frontend_id": "303",
    "title": "Range Sum Query - Immutable",
    "slug": "range-sum-query-immutable",
    "difficulty": "Easy",
    "acceptance_rate": 67.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/range-sum-query-immutable"
  },
  {
    "id": "304",
    "frontend_id": "304",
    "title": "Range Sum Query 2D - Immutable",
    "slug": "range-sum-query-2d-immutable",
    "difficulty": "Medium",
    "acceptance_rate": 56.14,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/range-sum-query-2d-immutable"
  },
  {
    "id": "305",
    "frontend_id": "305",
    "title": "Number of Islands II",
    "slug": "number-of-islands-ii",
    "difficulty": "Hard",
    "acceptance_rate": 40.01,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-islands-ii"
  },
  {
    "id": "306",
    "frontend_id": "306",
    "title": "Additive Number",
    "slug": "additive-number",
    "difficulty": "Medium",
    "acceptance_rate": 32.33,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/additive-number"
  },
  {
    "id": "307",
    "frontend_id": "307",
    "title": "Range Sum Query - Mutable",
    "slug": "range-sum-query-mutable",
    "difficulty": "Medium",
    "acceptance_rate": 41.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/range-sum-query-mutable"
  },
  {
    "id": "308",
    "frontend_id": "308",
    "title": "Range Sum Query 2D - Mutable",
    "slug": "range-sum-query-2d-mutable",
    "difficulty": "Medium",
    "acceptance_rate": 44.73,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/range-sum-query-2d-mutable"
  },
  {
    "id": "309",
    "frontend_id": "309",
    "title": "Best Time to Buy and Sell Stock with Cooldown",
    "slug": "best-time-to-buy-and-sell-stock-with-cooldown",
    "difficulty": "Medium",
    "acceptance_rate": 59.91,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"
  },
  {
    "id": "310",
    "frontend_id": "310",
    "title": "Minimum Height Trees",
    "slug": "minimum-height-trees",
    "difficulty": "Medium",
    "acceptance_rate": 41.95,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-height-trees"
  },
  {
    "id": "311",
    "frontend_id": "311",
    "title": "Sparse Matrix Multiplication",
    "slug": "sparse-matrix-multiplication",
    "difficulty": "Medium",
    "acceptance_rate": 68.61,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sparse-matrix-multiplication"
  },
  {
    "id": "312",
    "frontend_id": "312",
    "title": "Burst Balloons",
    "slug": "burst-balloons",
    "difficulty": "Hard",
    "acceptance_rate": 60.75,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/burst-balloons"
  },
  {
    "id": "313",
    "frontend_id": "313",
    "title": "Super Ugly Number",
    "slug": "super-ugly-number",
    "difficulty": "Medium",
    "acceptance_rate": 45.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/super-ugly-number"
  },
  {
    "id": "314",
    "frontend_id": "314",
    "title": "Binary Tree Vertical Order Traversal",
    "slug": "binary-tree-vertical-order-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 56.73,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-vertical-order-traversal"
  },
  {
    "id": "315",
    "frontend_id": "315",
    "title": "Count of Smaller Numbers After Self",
    "slug": "count-of-smaller-numbers-after-self",
    "difficulty": "Hard",
    "acceptance_rate": 42.72,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-of-smaller-numbers-after-self"
  },
  {
    "id": "316",
    "frontend_id": "316",
    "title": "Remove Duplicate Letters",
    "slug": "remove-duplicate-letters",
    "difficulty": "Medium",
    "acceptance_rate": 50.91,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-duplicate-letters"
  },
  {
    "id": "317",
    "frontend_id": "317",
    "title": "Shortest Distance from All Buildings",
    "slug": "shortest-distance-from-all-buildings",
    "difficulty": "Hard",
    "acceptance_rate": 43.92,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-distance-from-all-buildings"
  },
  {
    "id": "318",
    "frontend_id": "318",
    "title": "Maximum Product of Word Lengths",
    "slug": "maximum-product-of-word-lengths",
    "difficulty": "Medium",
    "acceptance_rate": 60.42,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-product-of-word-lengths"
  },
  {
    "id": "319",
    "frontend_id": "319",
    "title": "Bulb Switcher",
    "slug": "bulb-switcher",
    "difficulty": "Medium",
    "acceptance_rate": 53.79,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bulb-switcher"
  },
  {
    "id": "320",
    "frontend_id": "320",
    "title": "Generalized Abbreviation",
    "slug": "generalized-abbreviation",
    "difficulty": "Medium",
    "acceptance_rate": 59.95,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/generalized-abbreviation"
  },
  {
    "id": "321",
    "frontend_id": "321",
    "title": "Create Maximum Number",
    "slug": "create-maximum-number",
    "difficulty": "Hard",
    "acceptance_rate": 31.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/create-maximum-number"
  },
  {
    "id": "322",
    "frontend_id": "322",
    "title": "Coin Change",
    "slug": "coin-change",
    "difficulty": "Medium",
    "acceptance_rate": 45.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/coin-change"
  },
  {
    "id": "323",
    "frontend_id": "323",
    "title": "Number of Connected Components in an Undirected Graph",
    "slug": "number-of-connected-components-in-an-undirected-graph",
    "difficulty": "Medium",
    "acceptance_rate": 63.85,
    "premium": true,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph"
  },
  {
    "id": "324",
    "frontend_id": "324",
    "title": "Wiggle Sort II",
    "slug": "wiggle-sort-ii",
    "difficulty": "Medium",
    "acceptance_rate": 35.39,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/wiggle-sort-ii"
  },
  {
    "id": "325",
    "frontend_id": "325",
    "title": "Maximum Size Subarray Sum Equals k",
    "slug": "maximum-size-subarray-sum-equals-k",
    "difficulty": "Medium",
    "acceptance_rate": 50.26,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-size-subarray-sum-equals-k"
  },
  {
    "id": "326",
    "frontend_id": "326",
    "title": "Power of Three",
    "slug": "power-of-three",
    "difficulty": "Easy",
    "acceptance_rate": 47.72,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/power-of-three"
  },
  {
    "id": "327",
    "frontend_id": "327",
    "title": "Count of Range Sum",
    "slug": "count-of-range-sum",
    "difficulty": "Hard",
    "acceptance_rate": 36.68,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-of-range-sum"
  },
  {
    "id": "328",
    "frontend_id": "328",
    "title": "Odd Even Linked List",
    "slug": "odd-even-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 61.86,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/odd-even-linked-list"
  },
  {
    "id": "329",
    "frontend_id": "329",
    "title": "Longest Increasing Path in a Matrix",
    "slug": "longest-increasing-path-in-a-matrix",
    "difficulty": "Hard",
    "acceptance_rate": 54.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix"
  },
  {
    "id": "330",
    "frontend_id": "330",
    "title": "Patching Array",
    "slug": "patching-array",
    "difficulty": "Hard",
    "acceptance_rate": 53.37,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/patching-array"
  },
  {
    "id": "331",
    "frontend_id": "331",
    "title": "Verify Preorder Serialization of a Binary Tree",
    "slug": "verify-preorder-serialization-of-a-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 45.94,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree"
  },
  {
    "id": "332",
    "frontend_id": "332",
    "title": "Reconstruct Itinerary",
    "slug": "reconstruct-itinerary",
    "difficulty": "Hard",
    "acceptance_rate": 43.45,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Eulerian Circuit",
        "slug": "eulerian-circuit"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reconstruct-itinerary"
  },
  {
    "id": "333",
    "frontend_id": "333",
    "title": "Largest BST Subtree",
    "slug": "largest-bst-subtree",
    "difficulty": "Medium",
    "acceptance_rate": 45.18,
    "premium": true,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-bst-subtree"
  },
  {
    "id": "334",
    "frontend_id": "334",
    "title": "Increasing Triplet Subsequence",
    "slug": "increasing-triplet-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 39.15,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/increasing-triplet-subsequence"
  },
  {
    "id": "335",
    "frontend_id": "335",
    "title": "Self Crossing",
    "slug": "self-crossing",
    "difficulty": "Hard",
    "acceptance_rate": 31.73,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/self-crossing"
  },
  {
    "id": "336",
    "frontend_id": "336",
    "title": "Palindrome Pairs",
    "slug": "palindrome-pairs",
    "difficulty": "Hard",
    "acceptance_rate": 36.06,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindrome-pairs"
  },
  {
    "id": "337",
    "frontend_id": "337",
    "title": "House Robber III",
    "slug": "house-robber-iii",
    "difficulty": "Medium",
    "acceptance_rate": 54.75,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/house-robber-iii"
  },
  {
    "id": "338",
    "frontend_id": "338",
    "title": "Counting Bits",
    "slug": "counting-bits",
    "difficulty": "Easy",
    "acceptance_rate": 79.45,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/counting-bits"
  },
  {
    "id": "339",
    "frontend_id": "339",
    "title": "Nested List Weight Sum",
    "slug": "nested-list-weight-sum",
    "difficulty": "Medium",
    "acceptance_rate": 85.28,
    "premium": true,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/nested-list-weight-sum"
  },
  {
    "id": "340",
    "frontend_id": "340",
    "title": "Longest Substring with At Most K Distinct Characters",
    "slug": "longest-substring-with-at-most-k-distinct-characters",
    "difficulty": "Medium",
    "acceptance_rate": 49.37,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters"
  },
  {
    "id": "341",
    "frontend_id": "341",
    "title": "Flatten Nested List Iterator",
    "slug": "flatten-nested-list-iterator",
    "difficulty": "Medium",
    "acceptance_rate": 65.21,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flatten-nested-list-iterator"
  },
  {
    "id": "342",
    "frontend_id": "342",
    "title": "Power of Four",
    "slug": "power-of-four",
    "difficulty": "Easy",
    "acceptance_rate": 49.15,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/power-of-four"
  },
  {
    "id": "343",
    "frontend_id": "343",
    "title": "Integer Break",
    "slug": "integer-break",
    "difficulty": "Medium",
    "acceptance_rate": 60.96,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/integer-break"
  },
  {
    "id": "344",
    "frontend_id": "344",
    "title": "Reverse String",
    "slug": "reverse-string",
    "difficulty": "Easy",
    "acceptance_rate": 79.54,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-string"
  },
  {
    "id": "345",
    "frontend_id": "345",
    "title": "Reverse Vowels of a String",
    "slug": "reverse-vowels-of-a-string",
    "difficulty": "Easy",
    "acceptance_rate": 57.26,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/reverse-vowels-of-a-string"
  },
  {
    "id": "346",
    "frontend_id": "346",
    "title": "Moving Average from Data Stream",
    "slug": "moving-average-from-data-stream",
    "difficulty": "Easy",
    "acceptance_rate": 79.7,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/moving-average-from-data-stream"
  },
  {
    "id": "347",
    "frontend_id": "347",
    "title": "Top K Frequent Elements",
    "slug": "top-k-frequent-elements",
    "difficulty": "Medium",
    "acceptance_rate": 64.18,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/top-k-frequent-elements"
  },
  {
    "id": "348",
    "frontend_id": "348",
    "title": "Design Tic-Tac-Toe",
    "slug": "design-tic-tac-toe",
    "difficulty": "Medium",
    "acceptance_rate": 58.47,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-tic-tac-toe"
  },
  {
    "id": "349",
    "frontend_id": "349",
    "title": "Intersection of Two Arrays",
    "slug": "intersection-of-two-arrays",
    "difficulty": "Easy",
    "acceptance_rate": 76.1,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/intersection-of-two-arrays"
  },
  {
    "id": "350",
    "frontend_id": "350",
    "title": "Intersection of Two Arrays II",
    "slug": "intersection-of-two-arrays-ii",
    "difficulty": "Easy",
    "acceptance_rate": 58.92,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/intersection-of-two-arrays-ii"
  },
  {
    "id": "351",
    "frontend_id": "351",
    "title": "Android Unlock Patterns",
    "slug": "android-unlock-patterns",
    "difficulty": "Medium",
    "acceptance_rate": 53.23,
    "premium": true,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/android-unlock-patterns"
  },
  {
    "id": "352",
    "frontend_id": "352",
    "title": "Data Stream as Disjoint Intervals",
    "slug": "data-stream-as-disjoint-intervals",
    "difficulty": "Hard",
    "acceptance_rate": 60.34,
    "premium": false,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/data-stream-as-disjoint-intervals"
  },
  {
    "id": "353",
    "frontend_id": "353",
    "title": "Design Snake Game",
    "slug": "design-snake-game",
    "difficulty": "Medium",
    "acceptance_rate": 39.04,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-snake-game"
  },
  {
    "id": "354",
    "frontend_id": "354",
    "title": "Russian Doll Envelopes",
    "slug": "russian-doll-envelopes",
    "difficulty": "Hard",
    "acceptance_rate": 37.19,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/russian-doll-envelopes"
  },
  {
    "id": "355",
    "frontend_id": "355",
    "title": "Design Twitter",
    "slug": "design-twitter",
    "difficulty": "Medium",
    "acceptance_rate": 41.7,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-twitter"
  },
  {
    "id": "356",
    "frontend_id": "356",
    "title": "Line Reflection",
    "slug": "line-reflection",
    "difficulty": "Medium",
    "acceptance_rate": 35.9,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/line-reflection"
  },
  {
    "id": "357",
    "frontend_id": "357",
    "title": "Count Numbers with Unique Digits",
    "slug": "count-numbers-with-unique-digits",
    "difficulty": "Medium",
    "acceptance_rate": 54.04,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-numbers-with-unique-digits"
  },
  {
    "id": "358",
    "frontend_id": "358",
    "title": "Rearrange String k Distance Apart",
    "slug": "rearrange-string-k-distance-apart",
    "difficulty": "Hard",
    "acceptance_rate": 39.29,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rearrange-string-k-distance-apart"
  },
  {
    "id": "359",
    "frontend_id": "359",
    "title": "Logger Rate Limiter",
    "slug": "logger-rate-limiter",
    "difficulty": "Easy",
    "acceptance_rate": 76.38,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/logger-rate-limiter"
  },
  {
    "id": "360",
    "frontend_id": "360",
    "title": "Sort Transformed Array",
    "slug": "sort-transformed-array",
    "difficulty": "Medium",
    "acceptance_rate": 56.82,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-transformed-array"
  },
  {
    "id": "361",
    "frontend_id": "361",
    "title": "Bomb Enemy",
    "slug": "bomb-enemy",
    "difficulty": "Medium",
    "acceptance_rate": 52.04,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bomb-enemy"
  },
  {
    "id": "362",
    "frontend_id": "362",
    "title": "Design Hit Counter",
    "slug": "design-hit-counter",
    "difficulty": "Medium",
    "acceptance_rate": 69.05,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-hit-counter"
  },
  {
    "id": "363",
    "frontend_id": "363",
    "title": "Max Sum of Rectangle No Larger Than K",
    "slug": "max-sum-of-rectangle-no-larger-than-k",
    "difficulty": "Hard",
    "acceptance_rate": 44.52,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k"
  },
  {
    "id": "364",
    "frontend_id": "364",
    "title": "Nested List Weight Sum II",
    "slug": "nested-list-weight-sum-ii",
    "difficulty": "Medium",
    "acceptance_rate": 65.12,
    "premium": true,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/nested-list-weight-sum-ii"
  },
  {
    "id": "365",
    "frontend_id": "365",
    "title": "Water and Jug Problem",
    "slug": "water-and-jug-problem",
    "difficulty": "Medium",
    "acceptance_rate": 42.61,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/water-and-jug-problem"
  },
  {
    "id": "366",
    "frontend_id": "366",
    "title": "Find Leaves of Binary Tree",
    "slug": "find-leaves-of-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 80.99,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/find-leaves-of-binary-tree"
  },
  {
    "id": "367",
    "frontend_id": "367",
    "title": "Valid Perfect Square",
    "slug": "valid-perfect-square",
    "difficulty": "Easy",
    "acceptance_rate": 44.08,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-perfect-square"
  },
  {
    "id": "368",
    "frontend_id": "368",
    "title": "Largest Divisible Subset",
    "slug": "largest-divisible-subset",
    "difficulty": "Medium",
    "acceptance_rate": 45.94,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-divisible-subset"
  },
  {
    "id": "369",
    "frontend_id": "369",
    "title": "Plus One Linked List",
    "slug": "plus-one-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 61.14,
    "premium": true,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/plus-one-linked-list"
  },
  {
    "id": "370",
    "frontend_id": "370",
    "title": "Range Addition",
    "slug": "range-addition",
    "difficulty": "Medium",
    "acceptance_rate": 72.17,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/range-addition"
  },
  {
    "id": "371",
    "frontend_id": "371",
    "title": "Sum of Two Integers",
    "slug": "sum-of-two-integers",
    "difficulty": "Medium",
    "acceptance_rate": 53.3,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-two-integers"
  },
  {
    "id": "372",
    "frontend_id": "372",
    "title": "Super Pow",
    "slug": "super-pow",
    "difficulty": "Medium",
    "acceptance_rate": 35.33,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/super-pow"
  },
  {
    "id": "373",
    "frontend_id": "373",
    "title": "Find K Pairs with Smallest Sums",
    "slug": "find-k-pairs-with-smallest-sums",
    "difficulty": "Medium",
    "acceptance_rate": 40.48,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums"
  },
  {
    "id": "374",
    "frontend_id": "374",
    "title": "Guess Number Higher or Lower",
    "slug": "guess-number-higher-or-lower",
    "difficulty": "Easy",
    "acceptance_rate": 55.33,
    "premium": false,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/guess-number-higher-or-lower"
  },
  {
    "id": "375",
    "frontend_id": "375",
    "title": "Guess Number Higher or Lower II",
    "slug": "guess-number-higher-or-lower-ii",
    "difficulty": "Medium",
    "acceptance_rate": 50.75,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/guess-number-higher-or-lower-ii"
  },
  {
    "id": "376",
    "frontend_id": "376",
    "title": "Wiggle Subsequence",
    "slug": "wiggle-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 48.77,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/wiggle-subsequence"
  },
  {
    "id": "377",
    "frontend_id": "377",
    "title": "Combination Sum IV",
    "slug": "combination-sum-iv",
    "difficulty": "Medium",
    "acceptance_rate": 54.56,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/combination-sum-iv"
  },
  {
    "id": "378",
    "frontend_id": "378",
    "title": "Kth Smallest Element in a Sorted Matrix",
    "slug": "kth-smallest-element-in-a-sorted-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 63.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix"
  },
  {
    "id": "379",
    "frontend_id": "379",
    "title": "Design Phone Directory",
    "slug": "design-phone-directory",
    "difficulty": "Medium",
    "acceptance_rate": 52.23,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-phone-directory"
  },
  {
    "id": "380",
    "frontend_id": "380",
    "title": "Insert Delete GetRandom O(1)",
    "slug": "insert-delete-getrandom-o1",
    "difficulty": "Medium",
    "acceptance_rate": 54.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/insert-delete-getrandom-o1"
  },
  {
    "id": "381",
    "frontend_id": "381",
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "slug": "insert-delete-getrandom-o1-duplicates-allowed",
    "difficulty": "Hard",
    "acceptance_rate": 35.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed"
  },
  {
    "id": "382",
    "frontend_id": "382",
    "title": "Linked List Random Node",
    "slug": "linked-list-random-node",
    "difficulty": "Medium",
    "acceptance_rate": 63.81,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/linked-list-random-node"
  },
  {
    "id": "383",
    "frontend_id": "383",
    "title": "Ransom Note",
    "slug": "ransom-note",
    "difficulty": "Easy",
    "acceptance_rate": 64.05,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/ransom-note"
  },
  {
    "id": "384",
    "frontend_id": "384",
    "title": "Shuffle an Array",
    "slug": "shuffle-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 58.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shuffle-an-array"
  },
  {
    "id": "385",
    "frontend_id": "385",
    "title": "Mini Parser",
    "slug": "mini-parser",
    "difficulty": "Medium",
    "acceptance_rate": 39.73,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/mini-parser"
  },
  {
    "id": "386",
    "frontend_id": "386",
    "title": "Lexicographical Numbers",
    "slug": "lexicographical-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 73.02,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lexicographical-numbers"
  },
  {
    "id": "387",
    "frontend_id": "387",
    "title": "First Unique Character in a String",
    "slug": "first-unique-character-in-a-string",
    "difficulty": "Easy",
    "acceptance_rate": 63.32,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/first-unique-character-in-a-string"
  },
  {
    "id": "388",
    "frontend_id": "388",
    "title": "Longest Absolute File Path",
    "slug": "longest-absolute-file-path",
    "difficulty": "Medium",
    "acceptance_rate": 48.19,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-absolute-file-path"
  },
  {
    "id": "389",
    "frontend_id": "389",
    "title": "Find the Difference",
    "slug": "find-the-difference",
    "difficulty": "Easy",
    "acceptance_rate": 59.62,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-difference"
  },
  {
    "id": "390",
    "frontend_id": "390",
    "title": "Elimination Game",
    "slug": "elimination-game",
    "difficulty": "Medium",
    "acceptance_rate": 44.92,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/elimination-game"
  },
  {
    "id": "391",
    "frontend_id": "391",
    "title": "Perfect Rectangle",
    "slug": "perfect-rectangle",
    "difficulty": "Hard",
    "acceptance_rate": 34.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/perfect-rectangle"
  },
  {
    "id": "392",
    "frontend_id": "392",
    "title": "Is Subsequence",
    "slug": "is-subsequence",
    "difficulty": "Easy",
    "acceptance_rate": 48.26,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/is-subsequence"
  },
  {
    "id": "393",
    "frontend_id": "393",
    "title": "UTF-8 Validation",
    "slug": "utf-8-validation",
    "difficulty": "Medium",
    "acceptance_rate": 45.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/utf-8-validation"
  },
  {
    "id": "394",
    "frontend_id": "394",
    "title": "Decode String",
    "slug": "decode-string",
    "difficulty": "Medium",
    "acceptance_rate": 60.78,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/decode-string"
  },
  {
    "id": "395",
    "frontend_id": "395",
    "title": "Longest Substring with At Least K Repeating Characters",
    "slug": "longest-substring-with-at-least-k-repeating-characters",
    "difficulty": "Medium",
    "acceptance_rate": 45.34,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters"
  },
  {
    "id": "396",
    "frontend_id": "396",
    "title": "Rotate Function",
    "slug": "rotate-function",
    "difficulty": "Medium",
    "acceptance_rate": 43.68,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotate-function"
  },
  {
    "id": "397",
    "frontend_id": "397",
    "title": "Integer Replacement",
    "slug": "integer-replacement",
    "difficulty": "Medium",
    "acceptance_rate": 36.35,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/integer-replacement"
  },
  {
    "id": "398",
    "frontend_id": "398",
    "title": "Random Pick Index",
    "slug": "random-pick-index",
    "difficulty": "Medium",
    "acceptance_rate": 64.35,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/random-pick-index"
  },
  {
    "id": "399",
    "frontend_id": "399",
    "title": "Evaluate Division",
    "slug": "evaluate-division",
    "difficulty": "Medium",
    "acceptance_rate": 62.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/evaluate-division"
  },
  {
    "id": "400",
    "frontend_id": "400",
    "title": "Nth Digit",
    "slug": "nth-digit",
    "difficulty": "Medium",
    "acceptance_rate": 35.42,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/nth-digit"
  },
  {
    "id": "401",
    "frontend_id": "401",
    "title": "Binary Watch",
    "slug": "binary-watch",
    "difficulty": "Easy",
    "acceptance_rate": 56.12,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-watch"
  },
  {
    "id": "402",
    "frontend_id": "402",
    "title": "Remove K Digits",
    "slug": "remove-k-digits",
    "difficulty": "Medium",
    "acceptance_rate": 34.52,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-k-digits"
  },
  {
    "id": "403",
    "frontend_id": "403",
    "title": "Frog Jump",
    "slug": "frog-jump",
    "difficulty": "Hard",
    "acceptance_rate": 46.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/frog-jump"
  },
  {
    "id": "404",
    "frontend_id": "404",
    "title": "Sum of Left Leaves",
    "slug": "sum-of-left-leaves",
    "difficulty": "Easy",
    "acceptance_rate": 61.42,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-left-leaves"
  },
  {
    "id": "405",
    "frontend_id": "405",
    "title": "Convert a Number to Hexadecimal",
    "slug": "convert-a-number-to-hexadecimal",
    "difficulty": "Easy",
    "acceptance_rate": 50.41,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/convert-a-number-to-hexadecimal"
  },
  {
    "id": "406",
    "frontend_id": "406",
    "title": "Queue Reconstruction by Height",
    "slug": "queue-reconstruction-by-height",
    "difficulty": "Medium",
    "acceptance_rate": 74.03,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/queue-reconstruction-by-height"
  },
  {
    "id": "407",
    "frontend_id": "407",
    "title": "Trapping Rain Water II",
    "slug": "trapping-rain-water-ii",
    "difficulty": "Hard",
    "acceptance_rate": 58.73,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/trapping-rain-water-ii"
  },
  {
    "id": "408",
    "frontend_id": "408",
    "title": "Valid Word Abbreviation",
    "slug": "valid-word-abbreviation",
    "difficulty": "Easy",
    "acceptance_rate": 36.69,
    "premium": true,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-word-abbreviation"
  },
  {
    "id": "409",
    "frontend_id": "409",
    "title": "Longest Palindrome",
    "slug": "longest-palindrome",
    "difficulty": "Easy",
    "acceptance_rate": 55.47,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-palindrome"
  },
  {
    "id": "410",
    "frontend_id": "410",
    "title": "Split Array Largest Sum",
    "slug": "split-array-largest-sum",
    "difficulty": "Hard",
    "acceptance_rate": 57.52,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-array-largest-sum"
  },
  {
    "id": "411",
    "frontend_id": "411",
    "title": "Minimum Unique Word Abbreviation",
    "slug": "minimum-unique-word-abbreviation",
    "difficulty": "Hard",
    "acceptance_rate": 40.08,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-unique-word-abbreviation"
  },
  {
    "id": "412",
    "frontend_id": "412",
    "title": "Fizz Buzz",
    "slug": "fizz-buzz",
    "difficulty": "Easy",
    "acceptance_rate": 74.02,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/fizz-buzz"
  },
  {
    "id": "413",
    "frontend_id": "413",
    "title": "Arithmetic Slices",
    "slug": "arithmetic-slices",
    "difficulty": "Medium",
    "acceptance_rate": 64.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/arithmetic-slices"
  },
  {
    "id": "414",
    "frontend_id": "414",
    "title": "Third Maximum Number",
    "slug": "third-maximum-number",
    "difficulty": "Easy",
    "acceptance_rate": 36.76,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/third-maximum-number"
  },
  {
    "id": "415",
    "frontend_id": "415",
    "title": "Add Strings",
    "slug": "add-strings",
    "difficulty": "Easy",
    "acceptance_rate": 51.77,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-strings"
  },
  {
    "id": "416",
    "frontend_id": "416",
    "title": "Partition Equal Subset Sum",
    "slug": "partition-equal-subset-sum",
    "difficulty": "Medium",
    "acceptance_rate": 47.28,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/partition-equal-subset-sum"
  },
  {
    "id": "417",
    "frontend_id": "417",
    "title": "Pacific Atlantic Water Flow",
    "slug": "pacific-atlantic-water-flow",
    "difficulty": "Medium",
    "acceptance_rate": 57.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/pacific-atlantic-water-flow"
  },
  {
    "id": "418",
    "frontend_id": "418",
    "title": "Sentence Screen Fitting",
    "slug": "sentence-screen-fitting",
    "difficulty": "Medium",
    "acceptance_rate": 36.31,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sentence-screen-fitting"
  },
  {
    "id": "419",
    "frontend_id": "419",
    "title": "Battleships in a Board",
    "slug": "battleships-in-a-board",
    "difficulty": "Medium",
    "acceptance_rate": 76.29,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/battleships-in-a-board"
  },
  {
    "id": "420",
    "frontend_id": "420",
    "title": "Strong Password Checker",
    "slug": "strong-password-checker",
    "difficulty": "Hard",
    "acceptance_rate": 14.44,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/strong-password-checker"
  },
  {
    "id": "421",
    "frontend_id": "421",
    "title": "Maximum XOR of Two Numbers in an Array",
    "slug": "maximum-xor-of-two-numbers-in-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 53.19,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array"
  },
  {
    "id": "422",
    "frontend_id": "422",
    "title": "Valid Word Square",
    "slug": "valid-word-square",
    "difficulty": "Easy",
    "acceptance_rate": 41.91,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-word-square"
  },
  {
    "id": "423",
    "frontend_id": "423",
    "title": "Reconstruct Original Digits from English",
    "slug": "reconstruct-original-digits-from-english",
    "difficulty": "Medium",
    "acceptance_rate": 51.49,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reconstruct-original-digits-from-english"
  },
  {
    "id": "424",
    "frontend_id": "424",
    "title": "Longest Repeating Character Replacement",
    "slug": "longest-repeating-character-replacement",
    "difficulty": "Medium",
    "acceptance_rate": 56.58,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-repeating-character-replacement"
  },
  {
    "id": "425",
    "frontend_id": "425",
    "title": "Word Squares",
    "slug": "word-squares",
    "difficulty": "Hard",
    "acceptance_rate": 53.82,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-squares"
  },
  {
    "id": "758",
    "frontend_id": "426",
    "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
    "slug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 65.39,
    "premium": true,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list"
  },
  {
    "id": "772",
    "frontend_id": "427",
    "title": "Construct Quad Tree",
    "slug": "construct-quad-tree",
    "difficulty": "Medium",
    "acceptance_rate": 76.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-quad-tree"
  },
  {
    "id": "765",
    "frontend_id": "428",
    "title": "Serialize and Deserialize N-ary Tree",
    "slug": "serialize-and-deserialize-n-ary-tree",
    "difficulty": "Hard",
    "acceptance_rate": 68.11,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree"
  },
  {
    "id": "764",
    "frontend_id": "429",
    "title": "N-ary Tree Level Order Traversal",
    "slug": "n-ary-tree-level-order-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 71.17,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-ary-tree-level-order-traversal"
  },
  {
    "id": "766",
    "frontend_id": "430",
    "title": "Flatten a Multilevel Doubly Linked List",
    "slug": "flatten-a-multilevel-doubly-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 61.02,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list"
  },
  {
    "id": "771",
    "frontend_id": "431",
    "title": "Encode N-ary Tree to Binary Tree",
    "slug": "encode-n-ary-tree-to-binary-tree",
    "difficulty": "Hard",
    "acceptance_rate": 80.07,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree"
  },
  {
    "id": "432",
    "frontend_id": "432",
    "title": "All O`one Data Structure",
    "slug": "all-oone-data-structure",
    "difficulty": "Hard",
    "acceptance_rate": 44.78,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/all-oone-data-structure"
  },
  {
    "id": "433",
    "frontend_id": "433",
    "title": "Minimum Genetic Mutation",
    "slug": "minimum-genetic-mutation",
    "difficulty": "Medium",
    "acceptance_rate": 55.12,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-genetic-mutation"
  },
  {
    "id": "434",
    "frontend_id": "434",
    "title": "Number of Segments in a String",
    "slug": "number-of-segments-in-a-string",
    "difficulty": "Easy",
    "acceptance_rate": 36.29,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-segments-in-a-string"
  },
  {
    "id": "435",
    "frontend_id": "435",
    "title": "Non-overlapping Intervals",
    "slug": "non-overlapping-intervals",
    "difficulty": "Medium",
    "acceptance_rate": 55.06,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/non-overlapping-intervals"
  },
  {
    "id": "436",
    "frontend_id": "436",
    "title": "Find Right Interval",
    "slug": "find-right-interval",
    "difficulty": "Medium",
    "acceptance_rate": 53.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-right-interval"
  },
  {
    "id": "437",
    "frontend_id": "437",
    "title": "Path Sum III",
    "slug": "path-sum-iii",
    "difficulty": "Medium",
    "acceptance_rate": 46.04,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/path-sum-iii"
  },
  {
    "id": "438",
    "frontend_id": "438",
    "title": "Find All Anagrams in a String",
    "slug": "find-all-anagrams-in-a-string",
    "difficulty": "Medium",
    "acceptance_rate": 51.9,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string"
  },
  {
    "id": "439",
    "frontend_id": "439",
    "title": "Ternary Expression Parser",
    "slug": "ternary-expression-parser",
    "difficulty": "Medium",
    "acceptance_rate": 61.84,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ternary-expression-parser"
  },
  {
    "id": "440",
    "frontend_id": "440",
    "title": "K-th Smallest in Lexicographical Order",
    "slug": "k-th-smallest-in-lexicographical-order",
    "difficulty": "Hard",
    "acceptance_rate": 41.96,
    "premium": false,
    "topics": [
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order"
  },
  {
    "id": "441",
    "frontend_id": "441",
    "title": "Arranging Coins",
    "slug": "arranging-coins",
    "difficulty": "Easy",
    "acceptance_rate": 47.23,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/arranging-coins"
  },
  {
    "id": "442",
    "frontend_id": "442",
    "title": "Find All Duplicates in an Array",
    "slug": "find-all-duplicates-in-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 76.27,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-all-duplicates-in-an-array"
  },
  {
    "id": "443",
    "frontend_id": "443",
    "title": "String Compression",
    "slug": "string-compression",
    "difficulty": "Medium",
    "acceptance_rate": 57.44,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/string-compression"
  },
  {
    "id": "444",
    "frontend_id": "444",
    "title": "Sequence Reconstruction",
    "slug": "sequence-reconstruction",
    "difficulty": "Medium",
    "acceptance_rate": 29.23,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sequence-reconstruction"
  },
  {
    "id": "445",
    "frontend_id": "445",
    "title": "Add Two Numbers II",
    "slug": "add-two-numbers-ii",
    "difficulty": "Medium",
    "acceptance_rate": 61.6,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-two-numbers-ii"
  },
  {
    "id": "446",
    "frontend_id": "446",
    "title": "Arithmetic Slices II - Subsequence",
    "slug": "arithmetic-slices-ii-subsequence",
    "difficulty": "Hard",
    "acceptance_rate": 54.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence"
  },
  {
    "id": "447",
    "frontend_id": "447",
    "title": "Number of Boomerangs",
    "slug": "number-of-boomerangs",
    "difficulty": "Medium",
    "acceptance_rate": 56.2,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-boomerangs"
  },
  {
    "id": "448",
    "frontend_id": "448",
    "title": "Find All Numbers Disappeared in an Array",
    "slug": "find-all-numbers-disappeared-in-an-array",
    "difficulty": "Easy",
    "acceptance_rate": 62.08,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array"
  },
  {
    "id": "449",
    "frontend_id": "449",
    "title": "Serialize and Deserialize BST",
    "slug": "serialize-and-deserialize-bst",
    "difficulty": "Medium",
    "acceptance_rate": 58.39,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/serialize-and-deserialize-bst"
  },
  {
    "id": "450",
    "frontend_id": "450",
    "title": "Delete Node in a BST",
    "slug": "delete-node-in-a-bst",
    "difficulty": "Medium",
    "acceptance_rate": 52.62,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-node-in-a-bst"
  },
  {
    "id": "451",
    "frontend_id": "451",
    "title": "Sort Characters By Frequency",
    "slug": "sort-characters-by-frequency",
    "difficulty": "Medium",
    "acceptance_rate": 73.74,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-characters-by-frequency"
  },
  {
    "id": "452",
    "frontend_id": "452",
    "title": "Minimum Number of Arrows to Burst Balloons",
    "slug": "minimum-number-of-arrows-to-burst-balloons",
    "difficulty": "Medium",
    "acceptance_rate": 60.1,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons"
  },
  {
    "id": "453",
    "frontend_id": "453",
    "title": "Minimum Moves to Equal Array Elements",
    "slug": "minimum-moves-to-equal-array-elements",
    "difficulty": "Medium",
    "acceptance_rate": 57.56,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements"
  },
  {
    "id": "454",
    "frontend_id": "454",
    "title": "4Sum II",
    "slug": "4sum-ii",
    "difficulty": "Medium",
    "acceptance_rate": 57.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/4sum-ii"
  },
  {
    "id": "455",
    "frontend_id": "455",
    "title": "Assign Cookies",
    "slug": "assign-cookies",
    "difficulty": "Easy",
    "acceptance_rate": 53.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/assign-cookies"
  },
  {
    "id": "456",
    "frontend_id": "456",
    "title": "132 Pattern",
    "slug": "132-pattern",
    "difficulty": "Medium",
    "acceptance_rate": 33.86,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/132-pattern"
  },
  {
    "id": "457",
    "frontend_id": "457",
    "title": "Circular Array Loop",
    "slug": "circular-array-loop",
    "difficulty": "Medium",
    "acceptance_rate": 35.28,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/circular-array-loop"
  },
  {
    "id": "458",
    "frontend_id": "458",
    "title": "Poor Pigs",
    "slug": "poor-pigs",
    "difficulty": "Hard",
    "acceptance_rate": 59.3,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/poor-pigs"
  },
  {
    "id": "459",
    "frontend_id": "459",
    "title": "Repeated Substring Pattern",
    "slug": "repeated-substring-pattern",
    "difficulty": "Easy",
    "acceptance_rate": 46.66,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/repeated-substring-pattern"
  },
  {
    "id": "460",
    "frontend_id": "460",
    "title": "LFU Cache",
    "slug": "lfu-cache",
    "difficulty": "Hard",
    "acceptance_rate": 45.99,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lfu-cache"
  },
  {
    "id": "461",
    "frontend_id": "461",
    "title": "Hamming Distance",
    "slug": "hamming-distance",
    "difficulty": "Easy",
    "acceptance_rate": 75.91,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/hamming-distance"
  },
  {
    "id": "462",
    "frontend_id": "462",
    "title": "Minimum Moves to Equal Array Elements II",
    "slug": "minimum-moves-to-equal-array-elements-ii",
    "difficulty": "Medium",
    "acceptance_rate": 60.8,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii"
  },
  {
    "id": "463",
    "frontend_id": "463",
    "title": "Island Perimeter",
    "slug": "island-perimeter",
    "difficulty": "Easy",
    "acceptance_rate": 73.34,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/island-perimeter"
  },
  {
    "id": "464",
    "frontend_id": "464",
    "title": "Can I Win",
    "slug": "can-i-win",
    "difficulty": "Medium",
    "acceptance_rate": 30.14,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/can-i-win"
  },
  {
    "id": "465",
    "frontend_id": "465",
    "title": "Optimal Account Balancing",
    "slug": "optimal-account-balancing",
    "difficulty": "Hard",
    "acceptance_rate": 49.72,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/optimal-account-balancing"
  },
  {
    "id": "466",
    "frontend_id": "466",
    "title": "Count The Repetitions",
    "slug": "count-the-repetitions",
    "difficulty": "Hard",
    "acceptance_rate": 31.46,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-the-repetitions"
  },
  {
    "id": "467",
    "frontend_id": "467",
    "title": "Unique Substrings in Wraparound String",
    "slug": "unique-substrings-in-wraparound-string",
    "difficulty": "Medium",
    "acceptance_rate": 40.89,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-substrings-in-wraparound-string"
  },
  {
    "id": "468",
    "frontend_id": "468",
    "title": "Validate IP Address",
    "slug": "validate-ip-address",
    "difficulty": "Medium",
    "acceptance_rate": 27.71,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/validate-ip-address"
  },
  {
    "id": "469",
    "frontend_id": "469",
    "title": "Convex Polygon",
    "slug": "convex-polygon",
    "difficulty": "Medium",
    "acceptance_rate": 39.79,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/convex-polygon"
  },
  {
    "id": "903",
    "frontend_id": "470",
    "title": "Implement Rand10() Using Rand7()",
    "slug": "implement-rand10-using-rand7",
    "difficulty": "Medium",
    "acceptance_rate": 45.87,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Rejection Sampling",
        "slug": "rejection-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/implement-rand10-using-rand7"
  },
  {
    "id": "471",
    "frontend_id": "471",
    "title": "Encode String with Shortest Length",
    "slug": "encode-string-with-shortest-length",
    "difficulty": "Hard",
    "acceptance_rate": 50.46,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/encode-string-with-shortest-length"
  },
  {
    "id": "472",
    "frontend_id": "472",
    "title": "Concatenated Words",
    "slug": "concatenated-words",
    "difficulty": "Hard",
    "acceptance_rate": 49.37,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/concatenated-words"
  },
  {
    "id": "473",
    "frontend_id": "473",
    "title": "Matchsticks to Square",
    "slug": "matchsticks-to-square",
    "difficulty": "Medium",
    "acceptance_rate": 40.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/matchsticks-to-square"
  },
  {
    "id": "474",
    "frontend_id": "474",
    "title": "Ones and Zeroes",
    "slug": "ones-and-zeroes",
    "difficulty": "Medium",
    "acceptance_rate": 48.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ones-and-zeroes"
  },
  {
    "id": "475",
    "frontend_id": "475",
    "title": "Heaters",
    "slug": "heaters",
    "difficulty": "Medium",
    "acceptance_rate": 39.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/heaters"
  },
  {
    "id": "476",
    "frontend_id": "476",
    "title": "Number Complement",
    "slug": "number-complement",
    "difficulty": "Easy",
    "acceptance_rate": 70.3,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-complement"
  },
  {
    "id": "477",
    "frontend_id": "477",
    "title": "Total Hamming Distance",
    "slug": "total-hamming-distance",
    "difficulty": "Medium",
    "acceptance_rate": 53.53,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/total-hamming-distance"
  },
  {
    "id": "915",
    "frontend_id": "478",
    "title": "Generate Random Point in a Circle",
    "slug": "generate-random-point-in-a-circle",
    "difficulty": "Medium",
    "acceptance_rate": 40.64,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Rejection Sampling",
        "slug": "rejection-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/generate-random-point-in-a-circle"
  },
  {
    "id": "479",
    "frontend_id": "479",
    "title": "Largest Palindrome Product",
    "slug": "largest-palindrome-product",
    "difficulty": "Hard",
    "acceptance_rate": 34.68,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-palindrome-product"
  },
  {
    "id": "480",
    "frontend_id": "480",
    "title": "Sliding Window Median",
    "slug": "sliding-window-median",
    "difficulty": "Hard",
    "acceptance_rate": 38.64,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sliding-window-median"
  },
  {
    "id": "481",
    "frontend_id": "481",
    "title": "Magical String",
    "slug": "magical-string",
    "difficulty": "Medium",
    "acceptance_rate": 52.13,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/magical-string"
  },
  {
    "id": "482",
    "frontend_id": "482",
    "title": "License Key Formatting",
    "slug": "license-key-formatting",
    "difficulty": "Easy",
    "acceptance_rate": 44.5,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/license-key-formatting"
  },
  {
    "id": "483",
    "frontend_id": "483",
    "title": "Smallest Good Base",
    "slug": "smallest-good-base",
    "difficulty": "Hard",
    "acceptance_rate": 42.83,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-good-base"
  },
  {
    "id": "484",
    "frontend_id": "484",
    "title": "Find Permutation",
    "slug": "find-permutation",
    "difficulty": "Medium",
    "acceptance_rate": 66.96,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-permutation"
  },
  {
    "id": "485",
    "frontend_id": "485",
    "title": "Max Consecutive Ones",
    "slug": "max-consecutive-ones",
    "difficulty": "Easy",
    "acceptance_rate": 61.91,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-consecutive-ones"
  },
  {
    "id": "486",
    "frontend_id": "486",
    "title": "Predict the Winner",
    "slug": "predict-the-winner",
    "difficulty": "Medium",
    "acceptance_rate": 55.56,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/predict-the-winner"
  },
  {
    "id": "487",
    "frontend_id": "487",
    "title": "Max Consecutive Ones II",
    "slug": "max-consecutive-ones-ii",
    "difficulty": "Medium",
    "acceptance_rate": 51.37,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-consecutive-ones-ii"
  },
  {
    "id": "488",
    "frontend_id": "488",
    "title": "Zuma Game",
    "slug": "zuma-game",
    "difficulty": "Hard",
    "acceptance_rate": 31.8,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/zuma-game"
  },
  {
    "id": "865",
    "frontend_id": "489",
    "title": "Robot Room Cleaner",
    "slug": "robot-room-cleaner",
    "difficulty": "Hard",
    "acceptance_rate": 77.25,
    "premium": true,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/robot-room-cleaner"
  },
  {
    "id": "490",
    "frontend_id": "490",
    "title": "The Maze",
    "slug": "the-maze",
    "difficulty": "Medium",
    "acceptance_rate": 59.17,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/the-maze"
  },
  {
    "id": "491",
    "frontend_id": "491",
    "title": "Non-decreasing Subsequences",
    "slug": "non-decreasing-subsequences",
    "difficulty": "Medium",
    "acceptance_rate": 61.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/non-decreasing-subsequences"
  },
  {
    "id": "492",
    "frontend_id": "492",
    "title": "Construct the Rectangle",
    "slug": "construct-the-rectangle",
    "difficulty": "Easy",
    "acceptance_rate": 60.09,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-the-rectangle"
  },
  {
    "id": "493",
    "frontend_id": "493",
    "title": "Reverse Pairs",
    "slug": "reverse-pairs",
    "difficulty": "Hard",
    "acceptance_rate": 31.79,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-pairs"
  },
  {
    "id": "494",
    "frontend_id": "494",
    "title": "Target Sum",
    "slug": "target-sum",
    "difficulty": "Medium",
    "acceptance_rate": 50.38,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/target-sum"
  },
  {
    "id": "495",
    "frontend_id": "495",
    "title": "Teemo Attacking",
    "slug": "teemo-attacking",
    "difficulty": "Easy",
    "acceptance_rate": 56.86,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/teemo-attacking"
  },
  {
    "id": "496",
    "frontend_id": "496",
    "title": "Next Greater Element I",
    "slug": "next-greater-element-i",
    "difficulty": "Easy",
    "acceptance_rate": 74.04,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/next-greater-element-i"
  },
  {
    "id": "914",
    "frontend_id": "497",
    "title": "Random Point in Non-overlapping Rectangles",
    "slug": "random-point-in-non-overlapping-rectangles",
    "difficulty": "Medium",
    "acceptance_rate": 40.85,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles"
  },
  {
    "id": "498",
    "frontend_id": "498",
    "title": "Diagonal Traverse",
    "slug": "diagonal-traverse",
    "difficulty": "Medium",
    "acceptance_rate": 62.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/diagonal-traverse"
  },
  {
    "id": "499",
    "frontend_id": "499",
    "title": "The Maze III",
    "slug": "the-maze-iii",
    "difficulty": "Hard",
    "acceptance_rate": 50.3,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/the-maze-iii"
  },
  {
    "id": "500",
    "frontend_id": "500",
    "title": "Keyboard Row",
    "slug": "keyboard-row",
    "difficulty": "Easy",
    "acceptance_rate": 72.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/keyboard-row"
  },
  {
    "id": "501",
    "frontend_id": "501",
    "title": "Find Mode in Binary Search Tree",
    "slug": "find-mode-in-binary-search-tree",
    "difficulty": "Easy",
    "acceptance_rate": 57.24,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-mode-in-binary-search-tree"
  },
  {
    "id": "502",
    "frontend_id": "502",
    "title": "IPO",
    "slug": "ipo",
    "difficulty": "Hard",
    "acceptance_rate": 53.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ipo"
  },
  {
    "id": "503",
    "frontend_id": "503",
    "title": "Next Greater Element II",
    "slug": "next-greater-element-ii",
    "difficulty": "Medium",
    "acceptance_rate": 65.68,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/next-greater-element-ii"
  },
  {
    "id": "504",
    "frontend_id": "504",
    "title": "Base 7",
    "slug": "base-7",
    "difficulty": "Easy",
    "acceptance_rate": 51.59,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/base-7"
  },
  {
    "id": "505",
    "frontend_id": "505",
    "title": "The Maze II",
    "slug": "the-maze-ii",
    "difficulty": "Medium",
    "acceptance_rate": 54.01,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/the-maze-ii"
  },
  {
    "id": "506",
    "frontend_id": "506",
    "title": "Relative Ranks",
    "slug": "relative-ranks",
    "difficulty": "Easy",
    "acceptance_rate": 72.98,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/relative-ranks"
  },
  {
    "id": "507",
    "frontend_id": "507",
    "title": "Perfect Number",
    "slug": "perfect-number",
    "difficulty": "Easy",
    "acceptance_rate": 44.15,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/perfect-number"
  },
  {
    "id": "508",
    "frontend_id": "508",
    "title": "Most Frequent Subtree Sum",
    "slug": "most-frequent-subtree-sum",
    "difficulty": "Medium",
    "acceptance_rate": 67.56,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/most-frequent-subtree-sum"
  },
  {
    "id": "1013",
    "frontend_id": "509",
    "title": "Fibonacci Number",
    "slug": "fibonacci-number",
    "difficulty": "Easy",
    "acceptance_rate": 72.63,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/fibonacci-number"
  },
  {
    "id": "509",
    "frontend_id": "510",
    "title": "Inorder Successor in BST II",
    "slug": "inorder-successor-in-bst-ii",
    "difficulty": "Medium",
    "acceptance_rate": 60.94,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/inorder-successor-in-bst-ii"
  },
  {
    "id": "1179",
    "frontend_id": "511",
    "title": "Game Play Analysis I",
    "slug": "game-play-analysis-i",
    "difficulty": "Easy",
    "acceptance_rate": 75.52,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/game-play-analysis-i"
  },
  {
    "id": "1180",
    "frontend_id": "512",
    "title": "Game Play Analysis II",
    "slug": "game-play-analysis-ii",
    "difficulty": "Easy",
    "acceptance_rate": 53.74,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/game-play-analysis-ii"
  },
  {
    "id": "513",
    "frontend_id": "513",
    "title": "Find Bottom Left Tree Value",
    "slug": "find-bottom-left-tree-value",
    "difficulty": "Medium",
    "acceptance_rate": 71.62,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-bottom-left-tree-value"
  },
  {
    "id": "514",
    "frontend_id": "514",
    "title": "Freedom Trail",
    "slug": "freedom-trail",
    "difficulty": "Hard",
    "acceptance_rate": 58.83,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/freedom-trail"
  },
  {
    "id": "515",
    "frontend_id": "515",
    "title": "Find Largest Value in Each Tree Row",
    "slug": "find-largest-value-in-each-tree-row",
    "difficulty": "Medium",
    "acceptance_rate": 66.39,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-largest-value-in-each-tree-row"
  },
  {
    "id": "516",
    "frontend_id": "516",
    "title": "Longest Palindromic Subsequence",
    "slug": "longest-palindromic-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 63.73,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-palindromic-subsequence"
  },
  {
    "id": "517",
    "frontend_id": "517",
    "title": "Super Washing Machines",
    "slug": "super-washing-machines",
    "difficulty": "Hard",
    "acceptance_rate": 42.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/super-washing-machines"
  },
  {
    "id": "518",
    "frontend_id": "518",
    "title": "Coin Change II",
    "slug": "coin-change-ii",
    "difficulty": "Medium",
    "acceptance_rate": 63.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/coin-change-ii"
  },
  {
    "id": "913",
    "frontend_id": "519",
    "title": "Random Flip Matrix",
    "slug": "random-flip-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 43.27,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/random-flip-matrix"
  },
  {
    "id": "520",
    "frontend_id": "520",
    "title": "Detect Capital",
    "slug": "detect-capital",
    "difficulty": "Easy",
    "acceptance_rate": 56.13,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/detect-capital"
  },
  {
    "id": "521",
    "frontend_id": "521",
    "title": "Longest Uncommon Subsequence I",
    "slug": "longest-uncommon-subsequence-i",
    "difficulty": "Easy",
    "acceptance_rate": 61.18,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-uncommon-subsequence-i"
  },
  {
    "id": "522",
    "frontend_id": "522",
    "title": "Longest Uncommon Subsequence II",
    "slug": "longest-uncommon-subsequence-ii",
    "difficulty": "Medium",
    "acceptance_rate": 42.71,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-uncommon-subsequence-ii"
  },
  {
    "id": "523",
    "frontend_id": "523",
    "title": "Continuous Subarray Sum",
    "slug": "continuous-subarray-sum",
    "difficulty": "Medium",
    "acceptance_rate": 30.75,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/continuous-subarray-sum"
  },
  {
    "id": "524",
    "frontend_id": "524",
    "title": "Longest Word in Dictionary through Deleting",
    "slug": "longest-word-in-dictionary-through-deleting",
    "difficulty": "Medium",
    "acceptance_rate": 51.63,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting"
  },
  {
    "id": "525",
    "frontend_id": "525",
    "title": "Contiguous Array",
    "slug": "contiguous-array",
    "difficulty": "Medium",
    "acceptance_rate": 49.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/contiguous-array"
  },
  {
    "id": "526",
    "frontend_id": "526",
    "title": "Beautiful Arrangement",
    "slug": "beautiful-arrangement",
    "difficulty": "Medium",
    "acceptance_rate": 64.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/beautiful-arrangement"
  },
  {
    "id": "527",
    "frontend_id": "527",
    "title": "Word Abbreviation",
    "slug": "word-abbreviation",
    "difficulty": "Hard",
    "acceptance_rate": 61.72,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-abbreviation"
  },
  {
    "id": "912",
    "frontend_id": "528",
    "title": "Random Pick with Weight",
    "slug": "random-pick-with-weight",
    "difficulty": "Medium",
    "acceptance_rate": 48.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/random-pick-with-weight"
  },
  {
    "id": "529",
    "frontend_id": "529",
    "title": "Minesweeper",
    "slug": "minesweeper",
    "difficulty": "Medium",
    "acceptance_rate": 67.81,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minesweeper"
  },
  {
    "id": "530",
    "frontend_id": "530",
    "title": "Minimum Absolute Difference in BST",
    "slug": "minimum-absolute-difference-in-bst",
    "difficulty": "Easy",
    "acceptance_rate": 58.69,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-absolute-difference-in-bst"
  },
  {
    "id": "531",
    "frontend_id": "531",
    "title": "Lonely Pixel I",
    "slug": "lonely-pixel-i",
    "difficulty": "Medium",
    "acceptance_rate": 62.5,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/lonely-pixel-i"
  },
  {
    "id": "532",
    "frontend_id": "532",
    "title": "K-diff Pairs in an Array",
    "slug": "k-diff-pairs-in-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 44.34,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-diff-pairs-in-an-array"
  },
  {
    "id": "533",
    "frontend_id": "533",
    "title": "Lonely Pixel II",
    "slug": "lonely-pixel-ii",
    "difficulty": "Medium",
    "acceptance_rate": 48.62,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lonely-pixel-ii"
  },
  {
    "id": "1181",
    "frontend_id": "534",
    "title": "Game Play Analysis III",
    "slug": "game-play-analysis-iii",
    "difficulty": "Medium",
    "acceptance_rate": 81.17,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/game-play-analysis-iii"
  },
  {
    "id": "535",
    "frontend_id": "535",
    "title": "Encode and Decode TinyURL",
    "slug": "encode-and-decode-tinyurl",
    "difficulty": "Medium",
    "acceptance_rate": 86.62,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/encode-and-decode-tinyurl"
  },
  {
    "id": "536",
    "frontend_id": "536",
    "title": "Construct Binary Tree from String",
    "slug": "construct-binary-tree-from-string",
    "difficulty": "Medium",
    "acceptance_rate": 58.09,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-binary-tree-from-string"
  },
  {
    "id": "537",
    "frontend_id": "537",
    "title": "Complex Number Multiplication",
    "slug": "complex-number-multiplication",
    "difficulty": "Medium",
    "acceptance_rate": 72.25,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/complex-number-multiplication"
  },
  {
    "id": "538",
    "frontend_id": "538",
    "title": "Convert BST to Greater Tree",
    "slug": "convert-bst-to-greater-tree",
    "difficulty": "Medium",
    "acceptance_rate": 70.25,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/convert-bst-to-greater-tree"
  },
  {
    "id": "539",
    "frontend_id": "539",
    "title": "Minimum Time Difference",
    "slug": "minimum-time-difference",
    "difficulty": "Medium",
    "acceptance_rate": 62.28,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-time-difference"
  },
  {
    "id": "540",
    "frontend_id": "540",
    "title": "Single Element in a Sorted Array",
    "slug": "single-element-in-a-sorted-array",
    "difficulty": "Medium",
    "acceptance_rate": 59.15,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/single-element-in-a-sorted-array"
  },
  {
    "id": "541",
    "frontend_id": "541",
    "title": "Reverse String II",
    "slug": "reverse-string-ii",
    "difficulty": "Easy",
    "acceptance_rate": 51.85,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-string-ii"
  },
  {
    "id": "542",
    "frontend_id": "542",
    "title": "01 Matrix",
    "slug": "01-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 50.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/01-matrix"
  },
  {
    "id": "543",
    "frontend_id": "543",
    "title": "Diameter of Binary Tree",
    "slug": "diameter-of-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 62.93,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/diameter-of-binary-tree"
  },
  {
    "id": "544",
    "frontend_id": "544",
    "title": "Output Contest Matches",
    "slug": "output-contest-matches",
    "difficulty": "Medium",
    "acceptance_rate": 77.36,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/output-contest-matches"
  },
  {
    "id": "545",
    "frontend_id": "545",
    "title": "Boundary of Binary Tree",
    "slug": "boundary-of-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 46.88,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/boundary-of-binary-tree"
  },
  {
    "id": "546",
    "frontend_id": "546",
    "title": "Remove Boxes",
    "slug": "remove-boxes",
    "difficulty": "Hard",
    "acceptance_rate": 48.19,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-boxes"
  },
  {
    "id": "547",
    "frontend_id": "547",
    "title": "Number of Provinces",
    "slug": "number-of-provinces",
    "difficulty": "Medium",
    "acceptance_rate": 68.12,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-provinces"
  },
  {
    "id": "548",
    "frontend_id": "548",
    "title": "Split Array with Equal Sum",
    "slug": "split-array-with-equal-sum",
    "difficulty": "Hard",
    "acceptance_rate": 50.16,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-array-with-equal-sum"
  },
  {
    "id": "549",
    "frontend_id": "549",
    "title": "Binary Tree Longest Consecutive Sequence II",
    "slug": "binary-tree-longest-consecutive-sequence-ii",
    "difficulty": "Medium",
    "acceptance_rate": 49.56,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii"
  },
  {
    "id": "1182",
    "frontend_id": "550",
    "title": "Game Play Analysis IV",
    "slug": "game-play-analysis-iv",
    "difficulty": "Medium",
    "acceptance_rate": 39.05,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/game-play-analysis-iv"
  },
  {
    "id": "551",
    "frontend_id": "551",
    "title": "Student Attendance Record I",
    "slug": "student-attendance-record-i",
    "difficulty": "Easy",
    "acceptance_rate": 49.49,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/student-attendance-record-i"
  },
  {
    "id": "552",
    "frontend_id": "552",
    "title": "Student Attendance Record II",
    "slug": "student-attendance-record-ii",
    "difficulty": "Hard",
    "acceptance_rate": 55.65,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/student-attendance-record-ii"
  },
  {
    "id": "553",
    "frontend_id": "553",
    "title": "Optimal Division",
    "slug": "optimal-division",
    "difficulty": "Medium",
    "acceptance_rate": 61.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/optimal-division"
  },
  {
    "id": "554",
    "frontend_id": "554",
    "title": "Brick Wall",
    "slug": "brick-wall",
    "difficulty": "Medium",
    "acceptance_rate": 55.78,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/brick-wall"
  },
  {
    "id": "555",
    "frontend_id": "555",
    "title": "Split Concatenated Strings",
    "slug": "split-concatenated-strings",
    "difficulty": "Medium",
    "acceptance_rate": 43.3,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-concatenated-strings"
  },
  {
    "id": "556",
    "frontend_id": "556",
    "title": "Next Greater Element III",
    "slug": "next-greater-element-iii",
    "difficulty": "Medium",
    "acceptance_rate": 34.43,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/next-greater-element-iii"
  },
  {
    "id": "557",
    "frontend_id": "557",
    "title": "Reverse Words in a String III",
    "slug": "reverse-words-in-a-string-iii",
    "difficulty": "Easy",
    "acceptance_rate": 83.54,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-words-in-a-string-iii"
  },
  {
    "id": "773",
    "frontend_id": "558",
    "title": "Logical OR of Two Binary Grids Represented as Quad-Trees",
    "slug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
    "difficulty": "Medium",
    "acceptance_rate": 50.07,
    "premium": false,
    "topics": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees"
  },
  {
    "id": "774",
    "frontend_id": "559",
    "title": "Maximum Depth of N-ary Tree",
    "slug": "maximum-depth-of-n-ary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 72.79,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree"
  },
  {
    "id": "560",
    "frontend_id": "560",
    "title": "Subarray Sum Equals K",
    "slug": "subarray-sum-equals-k",
    "difficulty": "Medium",
    "acceptance_rate": 45.04,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/subarray-sum-equals-k"
  },
  {
    "id": "561",
    "frontend_id": "561",
    "title": "Array Partition",
    "slug": "array-partition",
    "difficulty": "Easy",
    "acceptance_rate": 80.11,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/array-partition"
  },
  {
    "id": "562",
    "frontend_id": "562",
    "title": "Longest Line of Consecutive One in Matrix",
    "slug": "longest-line-of-consecutive-one-in-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 50.49,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix"
  },
  {
    "id": "563",
    "frontend_id": "563",
    "title": "Binary Tree Tilt",
    "slug": "binary-tree-tilt",
    "difficulty": "Easy",
    "acceptance_rate": 63.6,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-tilt"
  },
  {
    "id": "564",
    "frontend_id": "564",
    "title": "Find the Closest Palindrome",
    "slug": "find-the-closest-palindrome",
    "difficulty": "Hard",
    "acceptance_rate": 31.58,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-closest-palindrome"
  },
  {
    "id": "565",
    "frontend_id": "565",
    "title": "Array Nesting",
    "slug": "array-nesting",
    "difficulty": "Medium",
    "acceptance_rate": 55.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/array-nesting"
  },
  {
    "id": "566",
    "frontend_id": "566",
    "title": "Reshape the Matrix",
    "slug": "reshape-the-matrix",
    "difficulty": "Easy",
    "acceptance_rate": 63.73,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reshape-the-matrix"
  },
  {
    "id": "567",
    "frontend_id": "567",
    "title": "Permutation in String",
    "slug": "permutation-in-string",
    "difficulty": "Medium",
    "acceptance_rate": 46.91,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/permutation-in-string"
  },
  {
    "id": "568",
    "frontend_id": "568",
    "title": "Maximum Vacation Days",
    "slug": "maximum-vacation-days",
    "difficulty": "Hard",
    "acceptance_rate": 46.23,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-vacation-days"
  },
  {
    "id": "569",
    "frontend_id": "569",
    "title": "Median Employee Salary",
    "slug": "median-employee-salary",
    "difficulty": "Hard",
    "acceptance_rate": 66.2,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/median-employee-salary"
  },
  {
    "id": "570",
    "frontend_id": "570",
    "title": "Managers with at Least 5 Direct Reports",
    "slug": "managers-with-at-least-5-direct-reports",
    "difficulty": "Medium",
    "acceptance_rate": 49.06,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/managers-with-at-least-5-direct-reports"
  },
  {
    "id": "571",
    "frontend_id": "571",
    "title": "Find Median Given Frequency of Numbers",
    "slug": "find-median-given-frequency-of-numbers",
    "difficulty": "Hard",
    "acceptance_rate": 42.53,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-median-given-frequency-of-numbers"
  },
  {
    "id": "572",
    "frontend_id": "572",
    "title": "Subtree of Another Tree",
    "slug": "subtree-of-another-tree",
    "difficulty": "Easy",
    "acceptance_rate": 49.57,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subtree-of-another-tree"
  },
  {
    "id": "573",
    "frontend_id": "573",
    "title": "Squirrel Simulation",
    "slug": "squirrel-simulation",
    "difficulty": "Medium",
    "acceptance_rate": 57.24,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/squirrel-simulation"
  },
  {
    "id": "574",
    "frontend_id": "574",
    "title": "Winning Candidate",
    "slug": "winning-candidate",
    "difficulty": "Medium",
    "acceptance_rate": 61.75,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/winning-candidate"
  },
  {
    "id": "575",
    "frontend_id": "575",
    "title": "Distribute Candies",
    "slug": "distribute-candies",
    "difficulty": "Easy",
    "acceptance_rate": 69.17,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/distribute-candies"
  },
  {
    "id": "576",
    "frontend_id": "576",
    "title": "Out of Boundary Paths",
    "slug": "out-of-boundary-paths",
    "difficulty": "Medium",
    "acceptance_rate": 48.11,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/out-of-boundary-paths"
  },
  {
    "id": "577",
    "frontend_id": "577",
    "title": "Employee Bonus",
    "slug": "employee-bonus",
    "difficulty": "Easy",
    "acceptance_rate": 77.03,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/employee-bonus"
  },
  {
    "id": "578",
    "frontend_id": "578",
    "title": "Get Highest Answer Rate Question",
    "slug": "get-highest-answer-rate-question",
    "difficulty": "Medium",
    "acceptance_rate": 40.24,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/get-highest-answer-rate-question"
  },
  {
    "id": "579",
    "frontend_id": "579",
    "title": "Find Cumulative Salary of an Employee",
    "slug": "find-cumulative-salary-of-an-employee",
    "difficulty": "Hard",
    "acceptance_rate": 48.46,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-cumulative-salary-of-an-employee"
  },
  {
    "id": "580",
    "frontend_id": "580",
    "title": "Count Student Number in Departments",
    "slug": "count-student-number-in-departments",
    "difficulty": "Medium",
    "acceptance_rate": 59.64,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-student-number-in-departments"
  },
  {
    "id": "581",
    "frontend_id": "581",
    "title": "Shortest Unsorted Continuous Subarray",
    "slug": "shortest-unsorted-continuous-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 37.27,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray"
  },
  {
    "id": "582",
    "frontend_id": "582",
    "title": "Kill Process",
    "slug": "kill-process",
    "difficulty": "Medium",
    "acceptance_rate": 69.98,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/kill-process"
  },
  {
    "id": "583",
    "frontend_id": "583",
    "title": "Delete Operation for Two Strings",
    "slug": "delete-operation-for-two-strings",
    "difficulty": "Medium",
    "acceptance_rate": 63.19,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-operation-for-two-strings"
  },
  {
    "id": "584",
    "frontend_id": "584",
    "title": "Find Customer Referee",
    "slug": "find-customer-referee",
    "difficulty": "Easy",
    "acceptance_rate": 71.63,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-customer-referee"
  },
  {
    "id": "585",
    "frontend_id": "585",
    "title": "Investments in 2016",
    "slug": "investments-in-2016",
    "difficulty": "Medium",
    "acceptance_rate": 49.79,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/investments-in-2016"
  },
  {
    "id": "586",
    "frontend_id": "586",
    "title": "Customer Placing the Largest Number of Orders",
    "slug": "customer-placing-the-largest-number-of-orders",
    "difficulty": "Easy",
    "acceptance_rate": 64.51,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/customer-placing-the-largest-number-of-orders"
  },
  {
    "id": "587",
    "frontend_id": "587",
    "title": "Erect the Fence",
    "slug": "erect-the-fence",
    "difficulty": "Hard",
    "acceptance_rate": 52.07,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/erect-the-fence"
  },
  {
    "id": "588",
    "frontend_id": "588",
    "title": "Design In-Memory File System",
    "slug": "design-in-memory-file-system",
    "difficulty": "Hard",
    "acceptance_rate": 48.09,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-in-memory-file-system"
  },
  {
    "id": "775",
    "frontend_id": "589",
    "title": "N-ary Tree Preorder Traversal",
    "slug": "n-ary-tree-preorder-traversal",
    "difficulty": "Easy",
    "acceptance_rate": 76.07,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-ary-tree-preorder-traversal"
  },
  {
    "id": "776",
    "frontend_id": "590",
    "title": "N-ary Tree Postorder Traversal",
    "slug": "n-ary-tree-postorder-traversal",
    "difficulty": "Easy",
    "acceptance_rate": 80.57,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-ary-tree-postorder-traversal"
  },
  {
    "id": "591",
    "frontend_id": "591",
    "title": "Tag Validator",
    "slug": "tag-validator",
    "difficulty": "Hard",
    "acceptance_rate": 38.79,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/tag-validator"
  },
  {
    "id": "592",
    "frontend_id": "592",
    "title": "Fraction Addition and Subtraction",
    "slug": "fraction-addition-and-subtraction",
    "difficulty": "Medium",
    "acceptance_rate": 66.12,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/fraction-addition-and-subtraction"
  },
  {
    "id": "593",
    "frontend_id": "593",
    "title": "Valid Square",
    "slug": "valid-square",
    "difficulty": "Medium",
    "acceptance_rate": 44.18,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-square"
  },
  {
    "id": "594",
    "frontend_id": "594",
    "title": "Longest Harmonious Subsequence",
    "slug": "longest-harmonious-subsequence",
    "difficulty": "Easy",
    "acceptance_rate": 56.62,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-harmonious-subsequence"
  },
  {
    "id": "595",
    "frontend_id": "595",
    "title": "Big Countries",
    "slug": "big-countries",
    "difficulty": "Easy",
    "acceptance_rate": 68.2,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/big-countries"
  },
  {
    "id": "596",
    "frontend_id": "596",
    "title": "Classes More Than 5 Students",
    "slug": "classes-more-than-5-students",
    "difficulty": "Easy",
    "acceptance_rate": 59.86,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/classes-more-than-5-students"
  },
  {
    "id": "597",
    "frontend_id": "597",
    "title": "Friend Requests I: Overall Acceptance Rate",
    "slug": "friend-requests-i-overall-acceptance-rate",
    "difficulty": "Easy",
    "acceptance_rate": 41.49,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/friend-requests-i-overall-acceptance-rate"
  },
  {
    "id": "598",
    "frontend_id": "598",
    "title": "Range Addition II",
    "slug": "range-addition-ii",
    "difficulty": "Easy",
    "acceptance_rate": 57.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/range-addition-ii"
  },
  {
    "id": "599",
    "frontend_id": "599",
    "title": "Minimum Index Sum of Two Lists",
    "slug": "minimum-index-sum-of-two-lists",
    "difficulty": "Easy",
    "acceptance_rate": 57.51,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-index-sum-of-two-lists"
  },
  {
    "id": "600",
    "frontend_id": "600",
    "title": "Non-negative Integers without Consecutive Ones",
    "slug": "non-negative-integers-without-consecutive-ones",
    "difficulty": "Hard",
    "acceptance_rate": 40.03,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones"
  },
  {
    "id": "601",
    "frontend_id": "601",
    "title": "Human Traffic of Stadium",
    "slug": "human-traffic-of-stadium",
    "difficulty": "Hard",
    "acceptance_rate": 49.55,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/human-traffic-of-stadium"
  },
  {
    "id": "602",
    "frontend_id": "602",
    "title": "Friend Requests II: Who Has the Most Friends",
    "slug": "friend-requests-ii-who-has-the-most-friends",
    "difficulty": "Medium",
    "acceptance_rate": 60.25,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/friend-requests-ii-who-has-the-most-friends"
  },
  {
    "id": "603",
    "frontend_id": "603",
    "title": "Consecutive Available Seats",
    "slug": "consecutive-available-seats",
    "difficulty": "Easy",
    "acceptance_rate": 65.44,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/consecutive-available-seats"
  },
  {
    "id": "604",
    "frontend_id": "604",
    "title": "Design Compressed String Iterator",
    "slug": "design-compressed-string-iterator",
    "difficulty": "Easy",
    "acceptance_rate": 40.1,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-compressed-string-iterator"
  },
  {
    "id": "605",
    "frontend_id": "605",
    "title": "Can Place Flowers",
    "slug": "can-place-flowers",
    "difficulty": "Easy",
    "acceptance_rate": 28.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/can-place-flowers"
  },
  {
    "id": "606",
    "frontend_id": "606",
    "title": "Construct String from Binary Tree",
    "slug": "construct-string-from-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 69.91,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-string-from-binary-tree"
  },
  {
    "id": "607",
    "frontend_id": "607",
    "title": "Sales Person",
    "slug": "sales-person",
    "difficulty": "Easy",
    "acceptance_rate": 65.82,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sales-person"
  },
  {
    "id": "608",
    "frontend_id": "608",
    "title": "Tree Node",
    "slug": "tree-node",
    "difficulty": "Medium",
    "acceptance_rate": 73.6,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/tree-node"
  },
  {
    "id": "609",
    "frontend_id": "609",
    "title": "Find Duplicate File in System",
    "slug": "find-duplicate-file-in-system",
    "difficulty": "Medium",
    "acceptance_rate": 67.55,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-duplicate-file-in-system"
  },
  {
    "id": "610",
    "frontend_id": "610",
    "title": "Triangle Judgement",
    "slug": "triangle-judgement",
    "difficulty": "Easy",
    "acceptance_rate": 73.35,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/triangle-judgement"
  },
  {
    "id": "611",
    "frontend_id": "611",
    "title": "Valid Triangle Number",
    "slug": "valid-triangle-number",
    "difficulty": "Medium",
    "acceptance_rate": 52.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-triangle-number"
  },
  {
    "id": "612",
    "frontend_id": "612",
    "title": "Shortest Distance in a Plane",
    "slug": "shortest-distance-in-a-plane",
    "difficulty": "Medium",
    "acceptance_rate": 61.27,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-distance-in-a-plane"
  },
  {
    "id": "613",
    "frontend_id": "613",
    "title": "Shortest Distance in a Line",
    "slug": "shortest-distance-in-a-line",
    "difficulty": "Easy",
    "acceptance_rate": 79.97,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-distance-in-a-line"
  },
  {
    "id": "614",
    "frontend_id": "614",
    "title": "Second Degree Follower",
    "slug": "second-degree-follower",
    "difficulty": "Medium",
    "acceptance_rate": 39.72,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/second-degree-follower"
  },
  {
    "id": "615",
    "frontend_id": "615",
    "title": "Average Salary: Departments VS Company",
    "slug": "average-salary-departments-vs-company",
    "difficulty": "Hard",
    "acceptance_rate": 56.56,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/average-salary-departments-vs-company"
  },
  {
    "id": "616",
    "frontend_id": "616",
    "title": "Add Bold Tag in String",
    "slug": "add-bold-tag-in-string",
    "difficulty": "Medium",
    "acceptance_rate": 50.78,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-bold-tag-in-string"
  },
  {
    "id": "617",
    "frontend_id": "617",
    "title": "Merge Two Binary Trees",
    "slug": "merge-two-binary-trees",
    "difficulty": "Easy",
    "acceptance_rate": 79.31,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/merge-two-binary-trees"
  },
  {
    "id": "618",
    "frontend_id": "618",
    "title": "Students Report By Geography",
    "slug": "students-report-by-geography",
    "difficulty": "Hard",
    "acceptance_rate": 63.67,
    "premium": true,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/students-report-by-geography"
  },
  {
    "id": "619",
    "frontend_id": "619",
    "title": "Biggest Single Number",
    "slug": "biggest-single-number",
    "difficulty": "Easy",
    "acceptance_rate": 68.82,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/biggest-single-number"
  },
  {
    "id": "620",
    "frontend_id": "620",
    "title": "Not Boring Movies",
    "slug": "not-boring-movies",
    "difficulty": "Easy",
    "acceptance_rate": 74.82,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/not-boring-movies"
  },
  {
    "id": "621",
    "frontend_id": "621",
    "title": "Task Scheduler",
    "slug": "task-scheduler",
    "difficulty": "Medium",
    "acceptance_rate": 61.1,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/task-scheduler"
  },
  {
    "id": "860",
    "frontend_id": "622",
    "title": "Design Circular Queue",
    "slug": "design-circular-queue",
    "difficulty": "Medium",
    "acceptance_rate": 52.42,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-circular-queue"
  },
  {
    "id": "623",
    "frontend_id": "623",
    "title": "Add One Row to Tree",
    "slug": "add-one-row-to-tree",
    "difficulty": "Medium",
    "acceptance_rate": 64.04,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-one-row-to-tree"
  },
  {
    "id": "624",
    "frontend_id": "624",
    "title": "Maximum Distance in Arrays",
    "slug": "maximum-distance-in-arrays",
    "difficulty": "Medium",
    "acceptance_rate": 45.6,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-distance-in-arrays"
  },
  {
    "id": "625",
    "frontend_id": "625",
    "title": "Minimum Factorization",
    "slug": "minimum-factorization",
    "difficulty": "Medium",
    "acceptance_rate": 33.75,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/minimum-factorization"
  },
  {
    "id": "626",
    "frontend_id": "626",
    "title": "Exchange Seats",
    "slug": "exchange-seats",
    "difficulty": "Medium",
    "acceptance_rate": 72.2,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/exchange-seats"
  },
  {
    "id": "627",
    "frontend_id": "627",
    "title": "Swap Salary",
    "slug": "swap-salary",
    "difficulty": "Easy",
    "acceptance_rate": 83.85,
    "premium": false,
    "topics": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/swap-salary"
  },
  {
    "id": "628",
    "frontend_id": "628",
    "title": "Maximum Product of Three Numbers",
    "slug": "maximum-product-of-three-numbers",
    "difficulty": "Easy",
    "acceptance_rate": 45.25,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-product-of-three-numbers"
  },
  {
    "id": "629",
    "frontend_id": "629",
    "title": "K Inverse Pairs Array",
    "slug": "k-inverse-pairs-array",
    "difficulty": "Hard",
    "acceptance_rate": 49.1,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-inverse-pairs-array"
  },
  {
    "id": "630",
    "frontend_id": "630",
    "title": "Course Schedule III",
    "slug": "course-schedule-iii",
    "difficulty": "Hard",
    "acceptance_rate": 40.48,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/course-schedule-iii"
  },
  {
    "id": "631",
    "frontend_id": "631",
    "title": "Design Excel Sum Formula",
    "slug": "design-excel-sum-formula",
    "difficulty": "Hard",
    "acceptance_rate": 44.01,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-excel-sum-formula"
  },
  {
    "id": "632",
    "frontend_id": "632",
    "title": "Smallest Range Covering Elements from K Lists",
    "slug": "smallest-range-covering-elements-from-k-lists",
    "difficulty": "Hard",
    "acceptance_rate": 69.72,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists"
  },
  {
    "id": "633",
    "frontend_id": "633",
    "title": "Sum of Square Numbers",
    "slug": "sum-of-square-numbers",
    "difficulty": "Medium",
    "acceptance_rate": 36.41,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-square-numbers"
  },
  {
    "id": "634",
    "frontend_id": "634",
    "title": "Find the Derangement of An Array",
    "slug": "find-the-derangement-of-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 41.73,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-derangement-of-an-array"
  },
  {
    "id": "635",
    "frontend_id": "635",
    "title": "Design Log Storage System",
    "slug": "design-log-storage-system",
    "difficulty": "Medium",
    "acceptance_rate": 59.25,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-log-storage-system"
  },
  {
    "id": "636",
    "frontend_id": "636",
    "title": "Exclusive Time of Functions",
    "slug": "exclusive-time-of-functions",
    "difficulty": "Medium",
    "acceptance_rate": 64.22,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/exclusive-time-of-functions"
  },
  {
    "id": "637",
    "frontend_id": "637",
    "title": "Average of Levels in Binary Tree",
    "slug": "average-of-levels-in-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 73.84,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/average-of-levels-in-binary-tree"
  },
  {
    "id": "638",
    "frontend_id": "638",
    "title": "Shopping Offers",
    "slug": "shopping-offers",
    "difficulty": "Medium",
    "acceptance_rate": 51.81,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shopping-offers"
  },
  {
    "id": "639",
    "frontend_id": "639",
    "title": "Decode Ways II",
    "slug": "decode-ways-ii",
    "difficulty": "Hard",
    "acceptance_rate": 31.07,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/decode-ways-ii"
  },
  {
    "id": "640",
    "frontend_id": "640",
    "title": "Solve the Equation",
    "slug": "solve-the-equation",
    "difficulty": "Medium",
    "acceptance_rate": 44.43,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/solve-the-equation"
  },
  {
    "id": "859",
    "frontend_id": "641",
    "title": "Design Circular Deque",
    "slug": "design-circular-deque",
    "difficulty": "Medium",
    "acceptance_rate": 64.57,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-circular-deque"
  },
  {
    "id": "642",
    "frontend_id": "642",
    "title": "Design Search Autocomplete System",
    "slug": "design-search-autocomplete-system",
    "difficulty": "Hard",
    "acceptance_rate": 49.3,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-search-autocomplete-system"
  },
  {
    "id": "643",
    "frontend_id": "643",
    "title": "Maximum Average Subarray I",
    "slug": "maximum-average-subarray-i",
    "difficulty": "Easy",
    "acceptance_rate": 44.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-average-subarray-i"
  },
  {
    "id": "644",
    "frontend_id": "644",
    "title": "Maximum Average Subarray II",
    "slug": "maximum-average-subarray-ii",
    "difficulty": "Hard",
    "acceptance_rate": 37.35,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/maximum-average-subarray-ii"
  },
  {
    "id": "645",
    "frontend_id": "645",
    "title": "Set Mismatch",
    "slug": "set-mismatch",
    "difficulty": "Easy",
    "acceptance_rate": 44.82,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/set-mismatch"
  },
  {
    "id": "646",
    "frontend_id": "646",
    "title": "Maximum Length of Pair Chain",
    "slug": "maximum-length-of-pair-chain",
    "difficulty": "Medium",
    "acceptance_rate": 60.64,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-length-of-pair-chain"
  },
  {
    "id": "647",
    "frontend_id": "647",
    "title": "Palindromic Substrings",
    "slug": "palindromic-substrings",
    "difficulty": "Medium",
    "acceptance_rate": 71.36,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/palindromic-substrings"
  },
  {
    "id": "648",
    "frontend_id": "648",
    "title": "Replace Words",
    "slug": "replace-words",
    "difficulty": "Medium",
    "acceptance_rate": 68.21,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/replace-words"
  },
  {
    "id": "649",
    "frontend_id": "649",
    "title": "Dota2 Senate",
    "slug": "dota2-senate",
    "difficulty": "Medium",
    "acceptance_rate": 48.58,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/dota2-senate"
  },
  {
    "id": "650",
    "frontend_id": "650",
    "title": "2 Keys Keyboard",
    "slug": "2-keys-keyboard",
    "difficulty": "Medium",
    "acceptance_rate": 59.6,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/2-keys-keyboard"
  },
  {
    "id": "651",
    "frontend_id": "651",
    "title": "4 Keys Keyboard",
    "slug": "4-keys-keyboard",
    "difficulty": "Medium",
    "acceptance_rate": 55.85,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/4-keys-keyboard"
  },
  {
    "id": "652",
    "frontend_id": "652",
    "title": "Find Duplicate Subtrees",
    "slug": "find-duplicate-subtrees",
    "difficulty": "Medium",
    "acceptance_rate": 59.97,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-duplicate-subtrees"
  },
  {
    "id": "653",
    "frontend_id": "653",
    "title": "Two Sum IV - Input is a BST",
    "slug": "two-sum-iv-input-is-a-bst",
    "difficulty": "Easy",
    "acceptance_rate": 61.95,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst"
  },
  {
    "id": "654",
    "frontend_id": "654",
    "title": "Maximum Binary Tree",
    "slug": "maximum-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 85.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-binary-tree"
  },
  {
    "id": "655",
    "frontend_id": "655",
    "title": "Print Binary Tree",
    "slug": "print-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 65.32,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/print-binary-tree"
  },
  {
    "id": "656",
    "frontend_id": "656",
    "title": "Coin Path",
    "slug": "coin-path",
    "difficulty": "Hard",
    "acceptance_rate": 32.35,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/coin-path"
  },
  {
    "id": "657",
    "frontend_id": "657",
    "title": "Robot Return to Origin",
    "slug": "robot-return-to-origin",
    "difficulty": "Easy",
    "acceptance_rate": 76.06,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/robot-return-to-origin"
  },
  {
    "id": "658",
    "frontend_id": "658",
    "title": "Find K Closest Elements",
    "slug": "find-k-closest-elements",
    "difficulty": "Medium",
    "acceptance_rate": 48.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-k-closest-elements"
  },
  {
    "id": "659",
    "frontend_id": "659",
    "title": "Split Array into Consecutive Subsequences",
    "slug": "split-array-into-consecutive-subsequences",
    "difficulty": "Medium",
    "acceptance_rate": 51.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-array-into-consecutive-subsequences"
  },
  {
    "id": "660",
    "frontend_id": "660",
    "title": "Remove 9",
    "slug": "remove-9",
    "difficulty": "Hard",
    "acceptance_rate": 57.35,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-9"
  },
  {
    "id": "661",
    "frontend_id": "661",
    "title": "Image Smoother",
    "slug": "image-smoother",
    "difficulty": "Easy",
    "acceptance_rate": 68.13,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/image-smoother"
  },
  {
    "id": "662",
    "frontend_id": "662",
    "title": "Maximum Width of Binary Tree",
    "slug": "maximum-width-of-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 43.81,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-width-of-binary-tree"
  },
  {
    "id": "663",
    "frontend_id": "663",
    "title": "Equal Tree Partition",
    "slug": "equal-tree-partition",
    "difficulty": "Medium",
    "acceptance_rate": 41.54,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/equal-tree-partition"
  },
  {
    "id": "664",
    "frontend_id": "664",
    "title": "Strange Printer",
    "slug": "strange-printer",
    "difficulty": "Hard",
    "acceptance_rate": 60.77,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/strange-printer"
  },
  {
    "id": "665",
    "frontend_id": "665",
    "title": "Non-decreasing Array",
    "slug": "non-decreasing-array",
    "difficulty": "Medium",
    "acceptance_rate": 25.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/non-decreasing-array"
  },
  {
    "id": "666",
    "frontend_id": "666",
    "title": "Path Sum IV",
    "slug": "path-sum-iv",
    "difficulty": "Medium",
    "acceptance_rate": 62.62,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/path-sum-iv"
  },
  {
    "id": "667",
    "frontend_id": "667",
    "title": "Beautiful Arrangement II",
    "slug": "beautiful-arrangement-ii",
    "difficulty": "Medium",
    "acceptance_rate": 60.33,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/beautiful-arrangement-ii"
  },
  {
    "id": "668",
    "frontend_id": "668",
    "title": "Kth Smallest Number in Multiplication Table",
    "slug": "kth-smallest-number-in-multiplication-table",
    "difficulty": "Hard",
    "acceptance_rate": 52.58,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table"
  },
  {
    "id": "669",
    "frontend_id": "669",
    "title": "Trim a Binary Search Tree",
    "slug": "trim-a-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 66.33,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/trim-a-binary-search-tree"
  },
  {
    "id": "670",
    "frontend_id": "670",
    "title": "Maximum Swap",
    "slug": "maximum-swap",
    "difficulty": "Medium",
    "acceptance_rate": 51.73,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-swap"
  },
  {
    "id": "671",
    "frontend_id": "671",
    "title": "Second Minimum Node In a Binary Tree",
    "slug": "second-minimum-node-in-a-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 45.16,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree"
  },
  {
    "id": "672",
    "frontend_id": "672",
    "title": "Bulb Switcher II",
    "slug": "bulb-switcher-ii",
    "difficulty": "Medium",
    "acceptance_rate": 49.47,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bulb-switcher-ii"
  },
  {
    "id": "673",
    "frontend_id": "673",
    "title": "Number of Longest Increasing Subsequence",
    "slug": "number-of-longest-increasing-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 49.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-longest-increasing-subsequence"
  },
  {
    "id": "674",
    "frontend_id": "674",
    "title": "Longest Continuous Increasing Subsequence",
    "slug": "longest-continuous-increasing-subsequence",
    "difficulty": "Easy",
    "acceptance_rate": 50.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-continuous-increasing-subsequence"
  },
  {
    "id": "675",
    "frontend_id": "675",
    "title": "Cut Off Trees for Golf Event",
    "slug": "cut-off-trees-for-golf-event",
    "difficulty": "Hard",
    "acceptance_rate": 35.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cut-off-trees-for-golf-event"
  },
  {
    "id": "676",
    "frontend_id": "676",
    "title": "Implement Magic Dictionary",
    "slug": "implement-magic-dictionary",
    "difficulty": "Medium",
    "acceptance_rate": 58.0,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/implement-magic-dictionary"
  },
  {
    "id": "677",
    "frontend_id": "677",
    "title": "Map Sum Pairs",
    "slug": "map-sum-pairs",
    "difficulty": "Medium",
    "acceptance_rate": 56.94,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/map-sum-pairs"
  },
  {
    "id": "678",
    "frontend_id": "678",
    "title": "Valid Parenthesis String",
    "slug": "valid-parenthesis-string",
    "difficulty": "Medium",
    "acceptance_rate": 38.66,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-parenthesis-string"
  },
  {
    "id": "679",
    "frontend_id": "679",
    "title": "24 Game",
    "slug": "24-game",
    "difficulty": "Hard",
    "acceptance_rate": 49.82,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/24-game"
  },
  {
    "id": "680",
    "frontend_id": "680",
    "title": "Valid Palindrome II",
    "slug": "valid-palindrome-ii",
    "difficulty": "Easy",
    "acceptance_rate": 42.61,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-palindrome-ii"
  },
  {
    "id": "681",
    "frontend_id": "681",
    "title": "Next Closest Time",
    "slug": "next-closest-time",
    "difficulty": "Medium",
    "acceptance_rate": 46.87,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/next-closest-time"
  },
  {
    "id": "682",
    "frontend_id": "682",
    "title": "Baseball Game",
    "slug": "baseball-game",
    "difficulty": "Easy",
    "acceptance_rate": 78.36,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/baseball-game"
  },
  {
    "id": "683",
    "frontend_id": "683",
    "title": "K Empty Slots",
    "slug": "k-empty-slots",
    "difficulty": "Hard",
    "acceptance_rate": 37.24,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-empty-slots"
  },
  {
    "id": "684",
    "frontend_id": "684",
    "title": "Redundant Connection",
    "slug": "redundant-connection",
    "difficulty": "Medium",
    "acceptance_rate": 66.12,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/redundant-connection"
  },
  {
    "id": "685",
    "frontend_id": "685",
    "title": "Redundant Connection II",
    "slug": "redundant-connection-ii",
    "difficulty": "Hard",
    "acceptance_rate": 34.9,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/redundant-connection-ii"
  },
  {
    "id": "686",
    "frontend_id": "686",
    "title": "Repeated String Match",
    "slug": "repeated-string-match",
    "difficulty": "Medium",
    "acceptance_rate": 36.37,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/repeated-string-match"
  },
  {
    "id": "687",
    "frontend_id": "687",
    "title": "Longest Univalue Path",
    "slug": "longest-univalue-path",
    "difficulty": "Medium",
    "acceptance_rate": 42.34,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-univalue-path"
  },
  {
    "id": "688",
    "frontend_id": "688",
    "title": "Knight Probability in Chessboard",
    "slug": "knight-probability-in-chessboard",
    "difficulty": "Medium",
    "acceptance_rate": 56.49,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/knight-probability-in-chessboard"
  },
  {
    "id": "689",
    "frontend_id": "689",
    "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
    "slug": "maximum-sum-of-3-non-overlapping-subarrays",
    "difficulty": "Hard",
    "acceptance_rate": 59.43,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays"
  },
  {
    "id": "690",
    "frontend_id": "690",
    "title": "Employee Importance",
    "slug": "employee-importance",
    "difficulty": "Medium",
    "acceptance_rate": 68.09,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/employee-importance"
  },
  {
    "id": "691",
    "frontend_id": "691",
    "title": "Stickers to Spell Word",
    "slug": "stickers-to-spell-word",
    "difficulty": "Hard",
    "acceptance_rate": 49.91,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/stickers-to-spell-word"
  },
  {
    "id": "692",
    "frontend_id": "692",
    "title": "Top K Frequent Words",
    "slug": "top-k-frequent-words",
    "difficulty": "Medium",
    "acceptance_rate": 58.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/top-k-frequent-words"
  },
  {
    "id": "693",
    "frontend_id": "693",
    "title": "Binary Number with Alternating Bits",
    "slug": "binary-number-with-alternating-bits",
    "difficulty": "Easy",
    "acceptance_rate": 63.33,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-number-with-alternating-bits"
  },
  {
    "id": "694",
    "frontend_id": "694",
    "title": "Number of Distinct Islands",
    "slug": "number-of-distinct-islands",
    "difficulty": "Medium",
    "acceptance_rate": 62.02,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/number-of-distinct-islands"
  },
  {
    "id": "695",
    "frontend_id": "695",
    "title": "Max Area of Island",
    "slug": "max-area-of-island",
    "difficulty": "Medium",
    "acceptance_rate": 72.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-area-of-island"
  },
  {
    "id": "696",
    "frontend_id": "696",
    "title": "Count Binary Substrings",
    "slug": "count-binary-substrings",
    "difficulty": "Easy",
    "acceptance_rate": 65.77,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-binary-substrings"
  },
  {
    "id": "697",
    "frontend_id": "697",
    "title": "Degree of an Array",
    "slug": "degree-of-an-array",
    "difficulty": "Easy",
    "acceptance_rate": 57.17,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/degree-of-an-array"
  },
  {
    "id": "698",
    "frontend_id": "698",
    "title": "Partition to K Equal Sum Subsets",
    "slug": "partition-to-k-equal-sum-subsets",
    "difficulty": "Medium",
    "acceptance_rate": 38.07,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets"
  },
  {
    "id": "699",
    "frontend_id": "699",
    "title": "Falling Squares",
    "slug": "falling-squares",
    "difficulty": "Hard",
    "acceptance_rate": 45.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/falling-squares"
  },
  {
    "id": "783",
    "frontend_id": "700",
    "title": "Search in a Binary Search Tree",
    "slug": "search-in-a-binary-search-tree",
    "difficulty": "Easy",
    "acceptance_rate": 81.38,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/search-in-a-binary-search-tree"
  },
  {
    "id": "784",
    "frontend_id": "701",
    "title": "Insert into a Binary Search Tree",
    "slug": "insert-into-a-binary-search-tree",
    "difficulty": "Medium",
    "acceptance_rate": 73.49,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/insert-into-a-binary-search-tree"
  },
  {
    "id": "786",
    "frontend_id": "702",
    "title": "Search in a Sorted Array of Unknown Size",
    "slug": "search-in-a-sorted-array-of-unknown-size",
    "difficulty": "Medium",
    "acceptance_rate": 72.66,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size"
  },
  {
    "id": "789",
    "frontend_id": "703",
    "title": "Kth Largest Element in a Stream",
    "slug": "kth-largest-element-in-a-stream",
    "difficulty": "Easy",
    "acceptance_rate": 59.73,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/kth-largest-element-in-a-stream"
  },
  {
    "id": "792",
    "frontend_id": "704",
    "title": "Binary Search",
    "slug": "binary-search",
    "difficulty": "Easy",
    "acceptance_rate": 59.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-search"
  },
  {
    "id": "816",
    "frontend_id": "705",
    "title": "Design HashSet",
    "slug": "design-hashset",
    "difficulty": "Easy",
    "acceptance_rate": 67.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-hashset"
  },
  {
    "id": "817",
    "frontend_id": "706",
    "title": "Design HashMap",
    "slug": "design-hashmap",
    "difficulty": "Easy",
    "acceptance_rate": 65.7,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-hashmap"
  },
  {
    "id": "838",
    "frontend_id": "707",
    "title": "Design Linked List",
    "slug": "design-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 28.93,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/design-linked-list"
  },
  {
    "id": "850",
    "frontend_id": "708",
    "title": "Insert into a Sorted Circular Linked List",
    "slug": "insert-into-a-sorted-circular-linked-list",
    "difficulty": "Medium",
    "acceptance_rate": 37.77,
    "premium": true,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/insert-into-a-sorted-circular-linked-list"
  },
  {
    "id": "742",
    "frontend_id": "709",
    "title": "To Lower Case",
    "slug": "to-lower-case",
    "difficulty": "Easy",
    "acceptance_rate": 84.03,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/to-lower-case"
  },
  {
    "id": "894",
    "frontend_id": "710",
    "title": "Random Pick with Blacklist",
    "slug": "random-pick-with-blacklist",
    "difficulty": "Hard",
    "acceptance_rate": 33.94,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/random-pick-with-blacklist"
  },
  {
    "id": "711",
    "frontend_id": "711",
    "title": "Number of Distinct Islands II",
    "slug": "number-of-distinct-islands-ii",
    "difficulty": "Hard",
    "acceptance_rate": 54.4,
    "premium": true,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-distinct-islands-ii"
  },
  {
    "id": "712",
    "frontend_id": "712",
    "title": "Minimum ASCII Delete Sum for Two Strings",
    "slug": "minimum-ascii-delete-sum-for-two-strings",
    "difficulty": "Medium",
    "acceptance_rate": 65.54,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings"
  },
  {
    "id": "713",
    "frontend_id": "713",
    "title": "Subarray Product Less Than K",
    "slug": "subarray-product-less-than-k",
    "difficulty": "Medium",
    "acceptance_rate": 52.49,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subarray-product-less-than-k"
  },
  {
    "id": "714",
    "frontend_id": "714",
    "title": "Best Time to Buy and Sell Stock with Transaction Fee",
    "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
    "difficulty": "Medium",
    "acceptance_rate": 70.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee"
  },
  {
    "id": "715",
    "frontend_id": "715",
    "title": "Range Module",
    "slug": "range-module",
    "difficulty": "Hard",
    "acceptance_rate": 44.06,
    "premium": false,
    "topics": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/range-module"
  },
  {
    "id": "716",
    "frontend_id": "716",
    "title": "Max Stack",
    "slug": "max-stack",
    "difficulty": "Hard",
    "acceptance_rate": 45.34,
    "premium": true,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-stack"
  },
  {
    "id": "717",
    "frontend_id": "717",
    "title": "1-bit and 2-bit Characters",
    "slug": "1-bit-and-2-bit-characters",
    "difficulty": "Easy",
    "acceptance_rate": 45.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/1-bit-and-2-bit-characters"
  },
  {
    "id": "718",
    "frontend_id": "718",
    "title": "Maximum Length of Repeated Subarray",
    "slug": "maximum-length-of-repeated-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 50.97,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-length-of-repeated-subarray"
  },
  {
    "id": "719",
    "frontend_id": "719",
    "title": "Find K-th Smallest Pair Distance",
    "slug": "find-k-th-smallest-pair-distance",
    "difficulty": "Hard",
    "acceptance_rate": 45.62,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-k-th-smallest-pair-distance"
  },
  {
    "id": "720",
    "frontend_id": "720",
    "title": "Longest Word in Dictionary",
    "slug": "longest-word-in-dictionary",
    "difficulty": "Medium",
    "acceptance_rate": 53.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-word-in-dictionary"
  },
  {
    "id": "721",
    "frontend_id": "721",
    "title": "Accounts Merge",
    "slug": "accounts-merge",
    "difficulty": "Medium",
    "acceptance_rate": 58.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/accounts-merge"
  },
  {
    "id": "722",
    "frontend_id": "722",
    "title": "Remove Comments",
    "slug": "remove-comments",
    "difficulty": "Medium",
    "acceptance_rate": 39.25,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/remove-comments"
  },
  {
    "id": "723",
    "frontend_id": "723",
    "title": "Candy Crush",
    "slug": "candy-crush",
    "difficulty": "Medium",
    "acceptance_rate": 77.2,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/candy-crush"
  },
  {
    "id": "724",
    "frontend_id": "724",
    "title": "Find Pivot Index",
    "slug": "find-pivot-index",
    "difficulty": "Easy",
    "acceptance_rate": 60.04,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-pivot-index"
  },
  {
    "id": "725",
    "frontend_id": "725",
    "title": "Split Linked List in Parts",
    "slug": "split-linked-list-in-parts",
    "difficulty": "Medium",
    "acceptance_rate": 70.12,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-linked-list-in-parts"
  },
  {
    "id": "726",
    "frontend_id": "726",
    "title": "Number of Atoms",
    "slug": "number-of-atoms",
    "difficulty": "Hard",
    "acceptance_rate": 65.02,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-atoms"
  },
  {
    "id": "727",
    "frontend_id": "727",
    "title": "Minimum Window Subsequence",
    "slug": "minimum-window-subsequence",
    "difficulty": "Hard",
    "acceptance_rate": 43.58,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-window-subsequence"
  },
  {
    "id": "728",
    "frontend_id": "728",
    "title": "Self Dividing Numbers",
    "slug": "self-dividing-numbers",
    "difficulty": "Easy",
    "acceptance_rate": 79.43,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/self-dividing-numbers"
  },
  {
    "id": "729",
    "frontend_id": "729",
    "title": "My Calendar I",
    "slug": "my-calendar-i",
    "difficulty": "Medium",
    "acceptance_rate": 58.36,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/my-calendar-i"
  },
  {
    "id": "730",
    "frontend_id": "730",
    "title": "Count Different Palindromic Subsequences",
    "slug": "count-different-palindromic-subsequences",
    "difficulty": "Hard",
    "acceptance_rate": 46.13,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-different-palindromic-subsequences"
  },
  {
    "id": "731",
    "frontend_id": "731",
    "title": "My Calendar II",
    "slug": "my-calendar-ii",
    "difficulty": "Medium",
    "acceptance_rate": 62.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/my-calendar-ii"
  },
  {
    "id": "732",
    "frontend_id": "732",
    "title": "My Calendar III",
    "slug": "my-calendar-iii",
    "difficulty": "Hard",
    "acceptance_rate": 72.02,
    "premium": false,
    "topics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/my-calendar-iii"
  },
  {
    "id": "733",
    "frontend_id": "733",
    "title": "Flood Fill",
    "slug": "flood-fill",
    "difficulty": "Easy",
    "acceptance_rate": 65.94,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flood-fill"
  },
  {
    "id": "734",
    "frontend_id": "734",
    "title": "Sentence Similarity",
    "slug": "sentence-similarity",
    "difficulty": "Easy",
    "acceptance_rate": 44.54,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sentence-similarity"
  },
  {
    "id": "735",
    "frontend_id": "735",
    "title": "Asteroid Collision",
    "slug": "asteroid-collision",
    "difficulty": "Medium",
    "acceptance_rate": 45.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/asteroid-collision"
  },
  {
    "id": "736",
    "frontend_id": "736",
    "title": "Parse Lisp Expression",
    "slug": "parse-lisp-expression",
    "difficulty": "Hard",
    "acceptance_rate": 52.33,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/parse-lisp-expression"
  },
  {
    "id": "737",
    "frontend_id": "737",
    "title": "Sentence Similarity II",
    "slug": "sentence-similarity-ii",
    "difficulty": "Medium",
    "acceptance_rate": 50.52,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sentence-similarity-ii"
  },
  {
    "id": "738",
    "frontend_id": "738",
    "title": "Monotone Increasing Digits",
    "slug": "monotone-increasing-digits",
    "difficulty": "Medium",
    "acceptance_rate": 48.52,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/monotone-increasing-digits"
  },
  {
    "id": "739",
    "frontend_id": "739",
    "title": "Daily Temperatures",
    "slug": "daily-temperatures",
    "difficulty": "Medium",
    "acceptance_rate": 67.06,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/daily-temperatures"
  },
  {
    "id": "740",
    "frontend_id": "740",
    "title": "Delete and Earn",
    "slug": "delete-and-earn",
    "difficulty": "Medium",
    "acceptance_rate": 56.65,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-and-earn"
  },
  {
    "id": "741",
    "frontend_id": "741",
    "title": "Cherry Pickup",
    "slug": "cherry-pickup",
    "difficulty": "Hard",
    "acceptance_rate": 37.63,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cherry-pickup"
  },
  {
    "id": "743",
    "frontend_id": "742",
    "title": "Closest Leaf in a Binary Tree",
    "slug": "closest-leaf-in-a-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 46.96,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/closest-leaf-in-a-binary-tree"
  },
  {
    "id": "744",
    "frontend_id": "743",
    "title": "Network Delay Time",
    "slug": "network-delay-time",
    "difficulty": "Medium",
    "acceptance_rate": 56.6,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/network-delay-time"
  },
  {
    "id": "745",
    "frontend_id": "744",
    "title": "Find Smallest Letter Greater Than Target",
    "slug": "find-smallest-letter-greater-than-target",
    "difficulty": "Easy",
    "acceptance_rate": 53.71,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-smallest-letter-greater-than-target"
  },
  {
    "id": "746",
    "frontend_id": "745",
    "title": "Prefix and Suffix Search",
    "slug": "prefix-and-suffix-search",
    "difficulty": "Hard",
    "acceptance_rate": 41.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/prefix-and-suffix-search"
  },
  {
    "id": "747",
    "frontend_id": "746",
    "title": "Min Cost Climbing Stairs",
    "slug": "min-cost-climbing-stairs",
    "difficulty": "Easy",
    "acceptance_rate": 66.89,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/min-cost-climbing-stairs"
  },
  {
    "id": "748",
    "frontend_id": "747",
    "title": "Largest Number At Least Twice of Others",
    "slug": "largest-number-at-least-twice-of-others",
    "difficulty": "Easy",
    "acceptance_rate": 50.43,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-number-at-least-twice-of-others"
  },
  {
    "id": "749",
    "frontend_id": "748",
    "title": "Shortest Completing Word",
    "slug": "shortest-completing-word",
    "difficulty": "Easy",
    "acceptance_rate": 61.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-completing-word"
  },
  {
    "id": "750",
    "frontend_id": "749",
    "title": "Contain Virus",
    "slug": "contain-virus",
    "difficulty": "Hard",
    "acceptance_rate": 52.33,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/contain-virus"
  },
  {
    "id": "751",
    "frontend_id": "750",
    "title": "Number Of Corner Rectangles",
    "slug": "number-of-corner-rectangles",
    "difficulty": "Medium",
    "acceptance_rate": 67.8,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-corner-rectangles"
  },
  {
    "id": "752",
    "frontend_id": "751",
    "title": "IP to CIDR",
    "slug": "ip-to-cidr",
    "difficulty": "Medium",
    "acceptance_rate": 55.39,
    "premium": true,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ip-to-cidr"
  },
  {
    "id": "753",
    "frontend_id": "752",
    "title": "Open the Lock",
    "slug": "open-the-lock",
    "difficulty": "Medium",
    "acceptance_rate": 60.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/open-the-lock"
  },
  {
    "id": "754",
    "frontend_id": "753",
    "title": "Cracking the Safe",
    "slug": "cracking-the-safe",
    "difficulty": "Hard",
    "acceptance_rate": 57.61,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Eulerian Circuit",
        "slug": "eulerian-circuit"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cracking-the-safe"
  },
  {
    "id": "755",
    "frontend_id": "754",
    "title": "Reach a Number",
    "slug": "reach-a-number",
    "difficulty": "Medium",
    "acceptance_rate": 43.72,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reach-a-number"
  },
  {
    "id": "756",
    "frontend_id": "755",
    "title": "Pour Water",
    "slug": "pour-water",
    "difficulty": "Medium",
    "acceptance_rate": 47.67,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/pour-water"
  },
  {
    "id": "757",
    "frontend_id": "756",
    "title": "Pyramid Transition Matrix",
    "slug": "pyramid-transition-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 52.8,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/pyramid-transition-matrix"
  },
  {
    "id": "759",
    "frontend_id": "757",
    "title": "Set Intersection Size At Least Two",
    "slug": "set-intersection-size-at-least-two",
    "difficulty": "Hard",
    "acceptance_rate": 44.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/set-intersection-size-at-least-two"
  },
  {
    "id": "760",
    "frontend_id": "758",
    "title": "Bold Words in String",
    "slug": "bold-words-in-string",
    "difficulty": "Medium",
    "acceptance_rate": 52.0,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bold-words-in-string"
  },
  {
    "id": "761",
    "frontend_id": "759",
    "title": "Employee Free Time",
    "slug": "employee-free-time",
    "difficulty": "Hard",
    "acceptance_rate": 72.52,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/employee-free-time"
  },
  {
    "id": "762",
    "frontend_id": "760",
    "title": "Find Anagram Mappings",
    "slug": "find-anagram-mappings",
    "difficulty": "Easy",
    "acceptance_rate": 83.83,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/find-anagram-mappings"
  },
  {
    "id": "763",
    "frontend_id": "761",
    "title": "Special Binary String",
    "slug": "special-binary-string",
    "difficulty": "Hard",
    "acceptance_rate": 63.27,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/special-binary-string"
  },
  {
    "id": "767",
    "frontend_id": "762",
    "title": "Prime Number of Set Bits in Binary Representation",
    "slug": "prime-number-of-set-bits-in-binary-representation",
    "difficulty": "Easy",
    "acceptance_rate": 70.62,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation"
  },
  {
    "id": "768",
    "frontend_id": "763",
    "title": "Partition Labels",
    "slug": "partition-labels",
    "difficulty": "Medium",
    "acceptance_rate": 80.22,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/partition-labels"
  },
  {
    "id": "769",
    "frontend_id": "764",
    "title": "Largest Plus Sign",
    "slug": "largest-plus-sign",
    "difficulty": "Medium",
    "acceptance_rate": 48.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-plus-sign"
  },
  {
    "id": "770",
    "frontend_id": "765",
    "title": "Couples Holding Hands",
    "slug": "couples-holding-hands",
    "difficulty": "Hard",
    "acceptance_rate": 58.18,
    "premium": false,
    "topics": [
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/couples-holding-hands"
  },
  {
    "id": "777",
    "frontend_id": "766",
    "title": "Toeplitz Matrix",
    "slug": "toeplitz-matrix",
    "difficulty": "Easy",
    "acceptance_rate": 69.51,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/toeplitz-matrix"
  },
  {
    "id": "778",
    "frontend_id": "767",
    "title": "Reorganize String",
    "slug": "reorganize-string",
    "difficulty": "Medium",
    "acceptance_rate": 55.88,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reorganize-string"
  },
  {
    "id": "779",
    "frontend_id": "768",
    "title": "Max Chunks To Make Sorted II",
    "slug": "max-chunks-to-make-sorted-ii",
    "difficulty": "Hard",
    "acceptance_rate": 53.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii"
  },
  {
    "id": "780",
    "frontend_id": "769",
    "title": "Max Chunks To Make Sorted",
    "slug": "max-chunks-to-make-sorted",
    "difficulty": "Medium",
    "acceptance_rate": 63.96,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-chunks-to-make-sorted"
  },
  {
    "id": "781",
    "frontend_id": "770",
    "title": "Basic Calculator IV",
    "slug": "basic-calculator-iv",
    "difficulty": "Hard",
    "acceptance_rate": 54.63,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/basic-calculator-iv"
  },
  {
    "id": "782",
    "frontend_id": "771",
    "title": "Jewels and Stones",
    "slug": "jewels-and-stones",
    "difficulty": "Easy",
    "acceptance_rate": 89.12,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/jewels-and-stones"
  },
  {
    "id": "785",
    "frontend_id": "772",
    "title": "Basic Calculator III",
    "slug": "basic-calculator-iii",
    "difficulty": "Hard",
    "acceptance_rate": 52.07,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/basic-calculator-iii"
  },
  {
    "id": "787",
    "frontend_id": "773",
    "title": "Sliding Puzzle",
    "slug": "sliding-puzzle",
    "difficulty": "Hard",
    "acceptance_rate": 73.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sliding-puzzle"
  },
  {
    "id": "788",
    "frontend_id": "774",
    "title": "Minimize Max Distance to Gas Station",
    "slug": "minimize-max-distance-to-gas-station",
    "difficulty": "Hard",
    "acceptance_rate": 52.8,
    "premium": true,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimize-max-distance-to-gas-station"
  },
  {
    "id": "790",
    "frontend_id": "775",
    "title": "Global and Local Inversions",
    "slug": "global-and-local-inversions",
    "difficulty": "Medium",
    "acceptance_rate": 42.27,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/global-and-local-inversions"
  },
  {
    "id": "791",
    "frontend_id": "776",
    "title": "Split BST",
    "slug": "split-bst",
    "difficulty": "Medium",
    "acceptance_rate": 82.46,
    "premium": true,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-bst"
  },
  {
    "id": "793",
    "frontend_id": "777",
    "title": "Swap Adjacent in LR String",
    "slug": "swap-adjacent-in-lr-string",
    "difficulty": "Medium",
    "acceptance_rate": 37.41,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/swap-adjacent-in-lr-string"
  },
  {
    "id": "794",
    "frontend_id": "778",
    "title": "Swim in Rising Water",
    "slug": "swim-in-rising-water",
    "difficulty": "Hard",
    "acceptance_rate": 62.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/swim-in-rising-water"
  },
  {
    "id": "795",
    "frontend_id": "779",
    "title": "K-th Symbol in Grammar",
    "slug": "k-th-symbol-in-grammar",
    "difficulty": "Medium",
    "acceptance_rate": 47.2,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-th-symbol-in-grammar"
  },
  {
    "id": "796",
    "frontend_id": "780",
    "title": "Reaching Points",
    "slug": "reaching-points",
    "difficulty": "Hard",
    "acceptance_rate": 33.51,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reaching-points"
  },
  {
    "id": "797",
    "frontend_id": "781",
    "title": "Rabbits in Forest",
    "slug": "rabbits-in-forest",
    "difficulty": "Medium",
    "acceptance_rate": 52.65,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rabbits-in-forest"
  },
  {
    "id": "798",
    "frontend_id": "782",
    "title": "Transform to Chessboard",
    "slug": "transform-to-chessboard",
    "difficulty": "Hard",
    "acceptance_rate": 50.47,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/transform-to-chessboard"
  },
  {
    "id": "799",
    "frontend_id": "783",
    "title": "Minimum Distance Between BST Nodes",
    "slug": "minimum-distance-between-bst-nodes",
    "difficulty": "Easy",
    "acceptance_rate": 60.14,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-distance-between-bst-nodes"
  },
  {
    "id": "800",
    "frontend_id": "784",
    "title": "Letter Case Permutation",
    "slug": "letter-case-permutation",
    "difficulty": "Medium",
    "acceptance_rate": 74.84,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/letter-case-permutation"
  },
  {
    "id": "801",
    "frontend_id": "785",
    "title": "Is Graph Bipartite?",
    "slug": "is-graph-bipartite",
    "difficulty": "Medium",
    "acceptance_rate": 57.28,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/is-graph-bipartite"
  },
  {
    "id": "802",
    "frontend_id": "786",
    "title": "K-th Smallest Prime Fraction",
    "slug": "k-th-smallest-prime-fraction",
    "difficulty": "Medium",
    "acceptance_rate": 68.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-th-smallest-prime-fraction"
  },
  {
    "id": "803",
    "frontend_id": "787",
    "title": "Cheapest Flights Within K Stops",
    "slug": "cheapest-flights-within-k-stops",
    "difficulty": "Medium",
    "acceptance_rate": 40.13,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cheapest-flights-within-k-stops"
  },
  {
    "id": "804",
    "frontend_id": "788",
    "title": "Rotated Digits",
    "slug": "rotated-digits",
    "difficulty": "Medium",
    "acceptance_rate": 56.41,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotated-digits"
  },
  {
    "id": "805",
    "frontend_id": "789",
    "title": "Escape The Ghosts",
    "slug": "escape-the-ghosts",
    "difficulty": "Medium",
    "acceptance_rate": 62.42,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/escape-the-ghosts"
  },
  {
    "id": "806",
    "frontend_id": "790",
    "title": "Domino and Tromino Tiling",
    "slug": "domino-and-tromino-tiling",
    "difficulty": "Medium",
    "acceptance_rate": 48.52,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/domino-and-tromino-tiling"
  },
  {
    "id": "807",
    "frontend_id": "791",
    "title": "Custom Sort String",
    "slug": "custom-sort-string",
    "difficulty": "Medium",
    "acceptance_rate": 71.78,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/custom-sort-string"
  },
  {
    "id": "808",
    "frontend_id": "792",
    "title": "Number of Matching Subsequences",
    "slug": "number-of-matching-subsequences",
    "difficulty": "Medium",
    "acceptance_rate": 50.7,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-matching-subsequences"
  },
  {
    "id": "809",
    "frontend_id": "793",
    "title": "Preimage Size of Factorial Zeroes Function",
    "slug": "preimage-size-of-factorial-zeroes-function",
    "difficulty": "Hard",
    "acceptance_rate": 45.53,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function"
  },
  {
    "id": "810",
    "frontend_id": "794",
    "title": "Valid Tic-Tac-Toe State",
    "slug": "valid-tic-tac-toe-state",
    "difficulty": "Medium",
    "acceptance_rate": 34.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-tic-tac-toe-state"
  },
  {
    "id": "811",
    "frontend_id": "795",
    "title": "Number of Subarrays with Bounded Maximum",
    "slug": "number-of-subarrays-with-bounded-maximum",
    "difficulty": "Medium",
    "acceptance_rate": 53.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum"
  },
  {
    "id": "812",
    "frontend_id": "796",
    "title": "Rotate String",
    "slug": "rotate-string",
    "difficulty": "Easy",
    "acceptance_rate": 63.62,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotate-string"
  },
  {
    "id": "813",
    "frontend_id": "797",
    "title": "All Paths From Source to Target",
    "slug": "all-paths-from-source-to-target",
    "difficulty": "Medium",
    "acceptance_rate": 82.97,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/all-paths-from-source-to-target"
  },
  {
    "id": "814",
    "frontend_id": "798",
    "title": "Smallest Rotation with Highest Score",
    "slug": "smallest-rotation-with-highest-score",
    "difficulty": "Hard",
    "acceptance_rate": 51.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-rotation-with-highest-score"
  },
  {
    "id": "815",
    "frontend_id": "799",
    "title": "Champagne Tower",
    "slug": "champagne-tower",
    "difficulty": "Medium",
    "acceptance_rate": 58.22,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/champagne-tower"
  },
  {
    "id": "818",
    "frontend_id": "800",
    "title": "Similar RGB Color",
    "slug": "similar-rgb-color",
    "difficulty": "Easy",
    "acceptance_rate": 67.74,
    "premium": true,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/similar-rgb-color"
  },
  {
    "id": "819",
    "frontend_id": "801",
    "title": "Minimum Swaps To Make Sequences Increasing",
    "slug": "minimum-swaps-to-make-sequences-increasing",
    "difficulty": "Hard",
    "acceptance_rate": 40.6,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing"
  },
  {
    "id": "820",
    "frontend_id": "802",
    "title": "Find Eventual Safe States",
    "slug": "find-eventual-safe-states",
    "difficulty": "Medium",
    "acceptance_rate": 68.05,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-eventual-safe-states"
  },
  {
    "id": "821",
    "frontend_id": "803",
    "title": "Bricks Falling When Hit",
    "slug": "bricks-falling-when-hit",
    "difficulty": "Hard",
    "acceptance_rate": 35.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bricks-falling-when-hit"
  },
  {
    "id": "822",
    "frontend_id": "804",
    "title": "Unique Morse Code Words",
    "slug": "unique-morse-code-words",
    "difficulty": "Easy",
    "acceptance_rate": 83.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-morse-code-words"
  },
  {
    "id": "823",
    "frontend_id": "805",
    "title": "Split Array With Same Average",
    "slug": "split-array-with-same-average",
    "difficulty": "Hard",
    "acceptance_rate": 25.86,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-array-with-same-average"
  },
  {
    "id": "824",
    "frontend_id": "806",
    "title": "Number of Lines To Write String",
    "slug": "number-of-lines-to-write-string",
    "difficulty": "Easy",
    "acceptance_rate": 70.29,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-lines-to-write-string"
  },
  {
    "id": "825",
    "frontend_id": "807",
    "title": "Max Increase to Keep City Skyline",
    "slug": "max-increase-to-keep-city-skyline",
    "difficulty": "Medium",
    "acceptance_rate": 86.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/max-increase-to-keep-city-skyline"
  },
  {
    "id": "826",
    "frontend_id": "808",
    "title": "Soup Servings",
    "slug": "soup-servings",
    "difficulty": "Medium",
    "acceptance_rate": 53.32,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/soup-servings"
  },
  {
    "id": "827",
    "frontend_id": "809",
    "title": "Expressive Words",
    "slug": "expressive-words",
    "difficulty": "Medium",
    "acceptance_rate": 46.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/expressive-words"
  },
  {
    "id": "828",
    "frontend_id": "810",
    "title": "Chalkboard XOR Game",
    "slug": "chalkboard-xor-game",
    "difficulty": "Hard",
    "acceptance_rate": 62.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/chalkboard-xor-game"
  },
  {
    "id": "829",
    "frontend_id": "811",
    "title": "Subdomain Visit Count",
    "slug": "subdomain-visit-count",
    "difficulty": "Medium",
    "acceptance_rate": 76.76,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subdomain-visit-count"
  },
  {
    "id": "830",
    "frontend_id": "812",
    "title": "Largest Triangle Area",
    "slug": "largest-triangle-area",
    "difficulty": "Easy",
    "acceptance_rate": 61.74,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-triangle-area"
  },
  {
    "id": "831",
    "frontend_id": "813",
    "title": "Largest Sum of Averages",
    "slug": "largest-sum-of-averages",
    "difficulty": "Medium",
    "acceptance_rate": 53.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-sum-of-averages"
  },
  {
    "id": "832",
    "frontend_id": "814",
    "title": "Binary Tree Pruning",
    "slug": "binary-tree-pruning",
    "difficulty": "Medium",
    "acceptance_rate": 72.31,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-pruning"
  },
  {
    "id": "833",
    "frontend_id": "815",
    "title": "Bus Routes",
    "slug": "bus-routes",
    "difficulty": "Hard",
    "acceptance_rate": 47.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bus-routes"
  },
  {
    "id": "834",
    "frontend_id": "816",
    "title": "Ambiguous Coordinates",
    "slug": "ambiguous-coordinates",
    "difficulty": "Medium",
    "acceptance_rate": 55.76,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/ambiguous-coordinates"
  },
  {
    "id": "835",
    "frontend_id": "817",
    "title": "Linked List Components",
    "slug": "linked-list-components",
    "difficulty": "Medium",
    "acceptance_rate": 57.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/linked-list-components"
  },
  {
    "id": "836",
    "frontend_id": "818",
    "title": "Race Car",
    "slug": "race-car",
    "difficulty": "Hard",
    "acceptance_rate": 44.0,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/race-car"
  },
  {
    "id": "837",
    "frontend_id": "819",
    "title": "Most Common Word",
    "slug": "most-common-word",
    "difficulty": "Easy",
    "acceptance_rate": 44.49,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/most-common-word"
  },
  {
    "id": "839",
    "frontend_id": "820",
    "title": "Short Encoding of Words",
    "slug": "short-encoding-of-words",
    "difficulty": "Medium",
    "acceptance_rate": 60.51,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/short-encoding-of-words"
  },
  {
    "id": "841",
    "frontend_id": "821",
    "title": "Shortest Distance to a Character",
    "slug": "shortest-distance-to-a-character",
    "difficulty": "Easy",
    "acceptance_rate": 72.03,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-distance-to-a-character"
  },
  {
    "id": "842",
    "frontend_id": "822",
    "title": "Card Flipping Game",
    "slug": "card-flipping-game",
    "difficulty": "Medium",
    "acceptance_rate": 48.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/card-flipping-game"
  },
  {
    "id": "843",
    "frontend_id": "823",
    "title": "Binary Trees With Factors",
    "slug": "binary-trees-with-factors",
    "difficulty": "Medium",
    "acceptance_rate": 52.91,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-trees-with-factors"
  },
  {
    "id": "851",
    "frontend_id": "824",
    "title": "Goat Latin",
    "slug": "goat-latin",
    "difficulty": "Easy",
    "acceptance_rate": 69.17,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/goat-latin"
  },
  {
    "id": "852",
    "frontend_id": "825",
    "title": "Friends Of Appropriate Ages",
    "slug": "friends-of-appropriate-ages",
    "difficulty": "Medium",
    "acceptance_rate": 48.79,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/friends-of-appropriate-ages"
  },
  {
    "id": "853",
    "frontend_id": "826",
    "title": "Most Profit Assigning Work",
    "slug": "most-profit-assigning-work",
    "difficulty": "Medium",
    "acceptance_rate": 55.85,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/most-profit-assigning-work"
  },
  {
    "id": "854",
    "frontend_id": "827",
    "title": "Making A Large Island",
    "slug": "making-a-large-island",
    "difficulty": "Hard",
    "acceptance_rate": 54.38,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/making-a-large-island"
  },
  {
    "id": "855",
    "frontend_id": "828",
    "title": "Count Unique Characters of All Substrings of a Given String",
    "slug": "count-unique-characters-of-all-substrings-of-a-given-string",
    "difficulty": "Hard",
    "acceptance_rate": 52.67,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string"
  },
  {
    "id": "856",
    "frontend_id": "829",
    "title": "Consecutive Numbers Sum",
    "slug": "consecutive-numbers-sum",
    "difficulty": "Hard",
    "acceptance_rate": 41.92,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/consecutive-numbers-sum"
  },
  {
    "id": "857",
    "frontend_id": "830",
    "title": "Positions of Large Groups",
    "slug": "positions-of-large-groups",
    "difficulty": "Easy",
    "acceptance_rate": 52.76,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/positions-of-large-groups"
  },
  {
    "id": "858",
    "frontend_id": "831",
    "title": "Masking Personal Information",
    "slug": "masking-personal-information",
    "difficulty": "Medium",
    "acceptance_rate": 50.21,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/masking-personal-information"
  },
  {
    "id": "861",
    "frontend_id": "832",
    "title": "Flipping an Image",
    "slug": "flipping-an-image",
    "difficulty": "Easy",
    "acceptance_rate": 82.8,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flipping-an-image"
  },
  {
    "id": "862",
    "frontend_id": "833",
    "title": "Find And Replace in String",
    "slug": "find-and-replace-in-string",
    "difficulty": "Medium",
    "acceptance_rate": 51.47,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-and-replace-in-string"
  },
  {
    "id": "863",
    "frontend_id": "834",
    "title": "Sum of Distances in Tree",
    "slug": "sum-of-distances-in-tree",
    "difficulty": "Hard",
    "acceptance_rate": 65.27,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-distances-in-tree"
  },
  {
    "id": "864",
    "frontend_id": "835",
    "title": "Image Overlap",
    "slug": "image-overlap",
    "difficulty": "Medium",
    "acceptance_rate": 63.69,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/image-overlap"
  },
  {
    "id": "866",
    "frontend_id": "836",
    "title": "Rectangle Overlap",
    "slug": "rectangle-overlap",
    "difficulty": "Easy",
    "acceptance_rate": 45.55,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rectangle-overlap"
  },
  {
    "id": "867",
    "frontend_id": "837",
    "title": "New 21 Game",
    "slug": "new-21-game",
    "difficulty": "Medium",
    "acceptance_rate": 44.8,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/new-21-game"
  },
  {
    "id": "868",
    "frontend_id": "838",
    "title": "Push Dominoes",
    "slug": "push-dominoes",
    "difficulty": "Medium",
    "acceptance_rate": 57.33,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/push-dominoes"
  },
  {
    "id": "869",
    "frontend_id": "839",
    "title": "Similar String Groups",
    "slug": "similar-string-groups",
    "difficulty": "Hard",
    "acceptance_rate": 55.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/similar-string-groups"
  },
  {
    "id": "870",
    "frontend_id": "840",
    "title": "Magic Squares In Grid",
    "slug": "magic-squares-in-grid",
    "difficulty": "Medium",
    "acceptance_rate": 51.53,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/magic-squares-in-grid"
  },
  {
    "id": "871",
    "frontend_id": "841",
    "title": "Keys and Rooms",
    "slug": "keys-and-rooms",
    "difficulty": "Medium",
    "acceptance_rate": 74.33,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/keys-and-rooms"
  },
  {
    "id": "872",
    "frontend_id": "842",
    "title": "Split Array into Fibonacci Sequence",
    "slug": "split-array-into-fibonacci-sequence",
    "difficulty": "Medium",
    "acceptance_rate": 39.54,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/split-array-into-fibonacci-sequence"
  },
  {
    "id": "873",
    "frontend_id": "843",
    "title": "Guess the Word",
    "slug": "guess-the-word",
    "difficulty": "Hard",
    "acceptance_rate": 37.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/guess-the-word"
  },
  {
    "id": "874",
    "frontend_id": "844",
    "title": "Backspace String Compare",
    "slug": "backspace-string-compare",
    "difficulty": "Easy",
    "acceptance_rate": 49.42,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/backspace-string-compare"
  },
  {
    "id": "875",
    "frontend_id": "845",
    "title": "Longest Mountain in Array",
    "slug": "longest-mountain-in-array",
    "difficulty": "Medium",
    "acceptance_rate": 40.92,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-mountain-in-array"
  },
  {
    "id": "876",
    "frontend_id": "846",
    "title": "Hand of Straights",
    "slug": "hand-of-straights",
    "difficulty": "Medium",
    "acceptance_rate": 56.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/hand-of-straights"
  },
  {
    "id": "877",
    "frontend_id": "847",
    "title": "Shortest Path Visiting All Nodes",
    "slug": "shortest-path-visiting-all-nodes",
    "difficulty": "Hard",
    "acceptance_rate": 65.36,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-path-visiting-all-nodes"
  },
  {
    "id": "878",
    "frontend_id": "848",
    "title": "Shifting Letters",
    "slug": "shifting-letters",
    "difficulty": "Medium",
    "acceptance_rate": 45.37,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shifting-letters"
  },
  {
    "id": "879",
    "frontend_id": "849",
    "title": "Maximize Distance to Closest Person",
    "slug": "maximize-distance-to-closest-person",
    "difficulty": "Medium",
    "acceptance_rate": 48.76,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximize-distance-to-closest-person"
  },
  {
    "id": "880",
    "frontend_id": "850",
    "title": "Rectangle Area II",
    "slug": "rectangle-area-ii",
    "difficulty": "Hard",
    "acceptance_rate": 54.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rectangle-area-ii"
  },
  {
    "id": "881",
    "frontend_id": "851",
    "title": "Loud and Rich",
    "slug": "loud-and-rich",
    "difficulty": "Medium",
    "acceptance_rate": 61.01,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/loud-and-rich"
  },
  {
    "id": "882",
    "frontend_id": "852",
    "title": "Peak Index in a Mountain Array",
    "slug": "peak-index-in-a-mountain-array",
    "difficulty": "Medium",
    "acceptance_rate": 67.72,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/peak-index-in-a-mountain-array"
  },
  {
    "id": "883",
    "frontend_id": "853",
    "title": "Car Fleet",
    "slug": "car-fleet",
    "difficulty": "Medium",
    "acceptance_rate": 53.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/car-fleet"
  },
  {
    "id": "884",
    "frontend_id": "854",
    "title": "K-Similar Strings",
    "slug": "k-similar-strings",
    "difficulty": "Hard",
    "acceptance_rate": 40.02,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/k-similar-strings"
  },
  {
    "id": "885",
    "frontend_id": "855",
    "title": "Exam Room",
    "slug": "exam-room",
    "difficulty": "Medium",
    "acceptance_rate": 43.63,
    "premium": false,
    "topics": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/exam-room"
  },
  {
    "id": "886",
    "frontend_id": "856",
    "title": "Score of Parentheses",
    "slug": "score-of-parentheses",
    "difficulty": "Medium",
    "acceptance_rate": 63.77,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/score-of-parentheses"
  },
  {
    "id": "887",
    "frontend_id": "857",
    "title": "Minimum Cost to Hire K Workers",
    "slug": "minimum-cost-to-hire-k-workers",
    "difficulty": "Hard",
    "acceptance_rate": 63.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers"
  },
  {
    "id": "888",
    "frontend_id": "858",
    "title": "Mirror Reflection",
    "slug": "mirror-reflection",
    "difficulty": "Medium",
    "acceptance_rate": 62.06,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/mirror-reflection"
  },
  {
    "id": "889",
    "frontend_id": "859",
    "title": "Buddy Strings",
    "slug": "buddy-strings",
    "difficulty": "Easy",
    "acceptance_rate": 33.55,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/buddy-strings"
  },
  {
    "id": "890",
    "frontend_id": "860",
    "title": "Lemonade Change",
    "slug": "lemonade-change",
    "difficulty": "Easy",
    "acceptance_rate": 58.31,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/lemonade-change"
  },
  {
    "id": "891",
    "frontend_id": "861",
    "title": "Score After Flipping Matrix",
    "slug": "score-after-flipping-matrix",
    "difficulty": "Medium",
    "acceptance_rate": 80.22,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/score-after-flipping-matrix"
  },
  {
    "id": "892",
    "frontend_id": "862",
    "title": "Shortest Subarray with Sum at Least K",
    "slug": "shortest-subarray-with-sum-at-least-k",
    "difficulty": "Hard",
    "acceptance_rate": 32.17,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k"
  },
  {
    "id": "893",
    "frontend_id": "863",
    "title": "All Nodes Distance K in Binary Tree",
    "slug": "all-nodes-distance-k-in-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 65.95,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree"
  },
  {
    "id": "895",
    "frontend_id": "864",
    "title": "Shortest Path to Get All Keys",
    "slug": "shortest-path-to-get-all-keys",
    "difficulty": "Hard",
    "acceptance_rate": 53.62,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-path-to-get-all-keys"
  },
  {
    "id": "896",
    "frontend_id": "865",
    "title": "Smallest Subtree with all the Deepest Nodes",
    "slug": "smallest-subtree-with-all-the-deepest-nodes",
    "difficulty": "Medium",
    "acceptance_rate": 71.6,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes"
  },
  {
    "id": "897",
    "frontend_id": "866",
    "title": "Prime Palindrome",
    "slug": "prime-palindrome",
    "difficulty": "Medium",
    "acceptance_rate": 26.59,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/prime-palindrome"
  },
  {
    "id": "898",
    "frontend_id": "867",
    "title": "Transpose Matrix",
    "slug": "transpose-matrix",
    "difficulty": "Easy",
    "acceptance_rate": 73.81,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/transpose-matrix"
  },
  {
    "id": "899",
    "frontend_id": "868",
    "title": "Binary Gap",
    "slug": "binary-gap",
    "difficulty": "Easy",
    "acceptance_rate": 64.32,
    "premium": false,
    "topics": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-gap"
  },
  {
    "id": "900",
    "frontend_id": "869",
    "title": "Reordered Power of 2",
    "slug": "reordered-power-of-2",
    "difficulty": "Medium",
    "acceptance_rate": 62.18,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reordered-power-of-2"
  },
  {
    "id": "901",
    "frontend_id": "870",
    "title": "Advantage Shuffle",
    "slug": "advantage-shuffle",
    "difficulty": "Medium",
    "acceptance_rate": 53.15,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/advantage-shuffle"
  },
  {
    "id": "902",
    "frontend_id": "871",
    "title": "Minimum Number of Refueling Stops",
    "slug": "minimum-number-of-refueling-stops",
    "difficulty": "Hard",
    "acceptance_rate": 40.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-number-of-refueling-stops"
  },
  {
    "id": "904",
    "frontend_id": "872",
    "title": "Leaf-Similar Trees",
    "slug": "leaf-similar-trees",
    "difficulty": "Easy",
    "acceptance_rate": 70.05,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/leaf-similar-trees"
  },
  {
    "id": "905",
    "frontend_id": "873",
    "title": "Length of Longest Fibonacci Subsequence",
    "slug": "length-of-longest-fibonacci-subsequence",
    "difficulty": "Medium",
    "acceptance_rate": 57.64,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence"
  },
  {
    "id": "906",
    "frontend_id": "874",
    "title": "Walking Robot Simulation",
    "slug": "walking-robot-simulation",
    "difficulty": "Medium",
    "acceptance_rate": 58.13,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/walking-robot-simulation"
  },
  {
    "id": "907",
    "frontend_id": "875",
    "title": "Koko Eating Bananas",
    "slug": "koko-eating-bananas",
    "difficulty": "Medium",
    "acceptance_rate": 48.92,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/koko-eating-bananas"
  },
  {
    "id": "908",
    "frontend_id": "876",
    "title": "Middle of the Linked List",
    "slug": "middle-of-the-linked-list",
    "difficulty": "Easy",
    "acceptance_rate": 80.22,
    "premium": false,
    "topics": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/middle-of-the-linked-list"
  },
  {
    "id": "909",
    "frontend_id": "877",
    "title": "Stone Game",
    "slug": "stone-game",
    "difficulty": "Medium",
    "acceptance_rate": 71.45,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/stone-game"
  },
  {
    "id": "910",
    "frontend_id": "878",
    "title": "Nth Magical Number",
    "slug": "nth-magical-number",
    "difficulty": "Hard",
    "acceptance_rate": 35.68,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/nth-magical-number"
  },
  {
    "id": "911",
    "frontend_id": "879",
    "title": "Profitable Schemes",
    "slug": "profitable-schemes",
    "difficulty": "Hard",
    "acceptance_rate": 48.0,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/profitable-schemes"
  },
  {
    "id": "916",
    "frontend_id": "880",
    "title": "Decoded String at Index",
    "slug": "decoded-string-at-index",
    "difficulty": "Medium",
    "acceptance_rate": 36.58,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/decoded-string-at-index"
  },
  {
    "id": "917",
    "frontend_id": "881",
    "title": "Boats to Save People",
    "slug": "boats-to-save-people",
    "difficulty": "Medium",
    "acceptance_rate": 59.99,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/boats-to-save-people"
  },
  {
    "id": "918",
    "frontend_id": "882",
    "title": "Reachable Nodes In Subdivided Graph",
    "slug": "reachable-nodes-in-subdivided-graph",
    "difficulty": "Hard",
    "acceptance_rate": 50.68,
    "premium": false,
    "topics": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph"
  },
  {
    "id": "919",
    "frontend_id": "883",
    "title": "Projection Area of 3D Shapes",
    "slug": "projection-area-of-3d-shapes",
    "difficulty": "Easy",
    "acceptance_rate": 73.82,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/projection-area-of-3d-shapes"
  },
  {
    "id": "920",
    "frontend_id": "884",
    "title": "Uncommon Words from Two Sentences",
    "slug": "uncommon-words-from-two-sentences",
    "difficulty": "Easy",
    "acceptance_rate": 75.28,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/uncommon-words-from-two-sentences"
  },
  {
    "id": "921",
    "frontend_id": "885",
    "title": "Spiral Matrix III",
    "slug": "spiral-matrix-iii",
    "difficulty": "Medium",
    "acceptance_rate": 84.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/spiral-matrix-iii"
  },
  {
    "id": "922",
    "frontend_id": "886",
    "title": "Possible Bipartition",
    "slug": "possible-bipartition",
    "difficulty": "Medium",
    "acceptance_rate": 51.24,
    "premium": false,
    "topics": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/possible-bipartition"
  },
  {
    "id": "923",
    "frontend_id": "887",
    "title": "Super Egg Drop",
    "slug": "super-egg-drop",
    "difficulty": "Hard",
    "acceptance_rate": 28.45,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/super-egg-drop"
  },
  {
    "id": "924",
    "frontend_id": "888",
    "title": "Fair Candy Swap",
    "slug": "fair-candy-swap",
    "difficulty": "Easy",
    "acceptance_rate": 62.92,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/fair-candy-swap"
  },
  {
    "id": "925",
    "frontend_id": "889",
    "title": "Construct Binary Tree from Preorder and Postorder Traversal",
    "slug": "construct-binary-tree-from-preorder-and-postorder-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 77.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal"
  },
  {
    "id": "926",
    "frontend_id": "890",
    "title": "Find and Replace Pattern",
    "slug": "find-and-replace-pattern",
    "difficulty": "Medium",
    "acceptance_rate": 76.79,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-and-replace-pattern"
  },
  {
    "id": "927",
    "frontend_id": "891",
    "title": "Sum of Subsequence Widths",
    "slug": "sum-of-subsequence-widths",
    "difficulty": "Hard",
    "acceptance_rate": 38.67,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-subsequence-widths"
  },
  {
    "id": "928",
    "frontend_id": "892",
    "title": "Surface Area of 3D Shapes",
    "slug": "surface-area-of-3d-shapes",
    "difficulty": "Easy",
    "acceptance_rate": 67.62,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/surface-area-of-3d-shapes"
  },
  {
    "id": "929",
    "frontend_id": "893",
    "title": "Groups of Special-Equivalent Strings",
    "slug": "groups-of-special-equivalent-strings",
    "difficulty": "Medium",
    "acceptance_rate": 72.6,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/groups-of-special-equivalent-strings"
  },
  {
    "id": "930",
    "frontend_id": "894",
    "title": "All Possible Full Binary Trees",
    "slug": "all-possible-full-binary-trees",
    "difficulty": "Medium",
    "acceptance_rate": 82.7,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/all-possible-full-binary-trees"
  },
  {
    "id": "931",
    "frontend_id": "895",
    "title": "Maximum Frequency Stack",
    "slug": "maximum-frequency-stack",
    "difficulty": "Hard",
    "acceptance_rate": 66.73,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-frequency-stack"
  },
  {
    "id": "932",
    "frontend_id": "896",
    "title": "Monotonic Array",
    "slug": "monotonic-array",
    "difficulty": "Easy",
    "acceptance_rate": 61.57,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/monotonic-array"
  },
  {
    "id": "933",
    "frontend_id": "897",
    "title": "Increasing Order Search Tree",
    "slug": "increasing-order-search-tree",
    "difficulty": "Easy",
    "acceptance_rate": 78.57,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/increasing-order-search-tree"
  },
  {
    "id": "934",
    "frontend_id": "898",
    "title": "Bitwise ORs of Subarrays",
    "slug": "bitwise-ors-of-subarrays",
    "difficulty": "Medium",
    "acceptance_rate": 40.39,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bitwise-ors-of-subarrays"
  },
  {
    "id": "935",
    "frontend_id": "899",
    "title": "Orderly Queue",
    "slug": "orderly-queue",
    "difficulty": "Hard",
    "acceptance_rate": 66.1,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/orderly-queue"
  },
  {
    "id": "936",
    "frontend_id": "900",
    "title": "RLE Iterator",
    "slug": "rle-iterator",
    "difficulty": "Medium",
    "acceptance_rate": 59.76,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rle-iterator"
  },
  {
    "id": "937",
    "frontend_id": "901",
    "title": "Online Stock Span",
    "slug": "online-stock-span",
    "difficulty": "Medium",
    "acceptance_rate": 67.27,
    "premium": false,
    "topics": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/online-stock-span"
  },
  {
    "id": "938",
    "frontend_id": "902",
    "title": "Numbers At Most N Given Digit Set",
    "slug": "numbers-at-most-n-given-digit-set",
    "difficulty": "Hard",
    "acceptance_rate": 43.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set"
  },
  {
    "id": "939",
    "frontend_id": "903",
    "title": "Valid Permutations for DI Sequence",
    "slug": "valid-permutations-for-di-sequence",
    "difficulty": "Hard",
    "acceptance_rate": 56.83,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-permutations-for-di-sequence"
  },
  {
    "id": "940",
    "frontend_id": "904",
    "title": "Fruit Into Baskets",
    "slug": "fruit-into-baskets",
    "difficulty": "Medium",
    "acceptance_rate": 45.73,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/fruit-into-baskets"
  },
  {
    "id": "941",
    "frontend_id": "905",
    "title": "Sort Array By Parity",
    "slug": "sort-array-by-parity",
    "difficulty": "Easy",
    "acceptance_rate": 76.26,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-array-by-parity"
  },
  {
    "id": "942",
    "frontend_id": "906",
    "title": "Super Palindromes",
    "slug": "super-palindromes",
    "difficulty": "Hard",
    "acceptance_rate": 39.16,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/super-palindromes"
  },
  {
    "id": "943",
    "frontend_id": "907",
    "title": "Sum of Subarray Minimums",
    "slug": "sum-of-subarray-minimums",
    "difficulty": "Medium",
    "acceptance_rate": 37.38,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-subarray-minimums"
  },
  {
    "id": "944",
    "frontend_id": "908",
    "title": "Smallest Range I",
    "slug": "smallest-range-i",
    "difficulty": "Easy",
    "acceptance_rate": 71.53,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-range-i"
  },
  {
    "id": "945",
    "frontend_id": "909",
    "title": "Snakes and Ladders",
    "slug": "snakes-and-ladders",
    "difficulty": "Medium",
    "acceptance_rate": 44.03,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/snakes-and-ladders"
  },
  {
    "id": "946",
    "frontend_id": "910",
    "title": "Smallest Range II",
    "slug": "smallest-range-ii",
    "difficulty": "Medium",
    "acceptance_rate": 36.96,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-range-ii"
  },
  {
    "id": "947",
    "frontend_id": "911",
    "title": "Online Election",
    "slug": "online-election",
    "difficulty": "Medium",
    "acceptance_rate": 52.49,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/online-election"
  },
  {
    "id": "948",
    "frontend_id": "912",
    "title": "Sort an Array",
    "slug": "sort-an-array",
    "difficulty": "Medium",
    "acceptance_rate": 56.98,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Radix Sort",
        "slug": "radix-sort"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sort-an-array"
  },
  {
    "id": "949",
    "frontend_id": "913",
    "title": "Cat and Mouse",
    "slug": "cat-and-mouse",
    "difficulty": "Hard",
    "acceptance_rate": 33.99,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cat-and-mouse"
  },
  {
    "id": "950",
    "frontend_id": "914",
    "title": "X of a Kind in a Deck of Cards",
    "slug": "x-of-a-kind-in-a-deck-of-cards",
    "difficulty": "Easy",
    "acceptance_rate": 29.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards"
  },
  {
    "id": "951",
    "frontend_id": "915",
    "title": "Partition Array into Disjoint Intervals",
    "slug": "partition-array-into-disjoint-intervals",
    "difficulty": "Medium",
    "acceptance_rate": 48.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/partition-array-into-disjoint-intervals"
  },
  {
    "id": "952",
    "frontend_id": "916",
    "title": "Word Subsets",
    "slug": "word-subsets",
    "difficulty": "Medium",
    "acceptance_rate": 55.63,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/word-subsets"
  },
  {
    "id": "953",
    "frontend_id": "917",
    "title": "Reverse Only Letters",
    "slug": "reverse-only-letters",
    "difficulty": "Easy",
    "acceptance_rate": 66.5,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reverse-only-letters"
  },
  {
    "id": "954",
    "frontend_id": "918",
    "title": "Maximum Sum Circular Subarray",
    "slug": "maximum-sum-circular-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 47.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-sum-circular-subarray"
  },
  {
    "id": "955",
    "frontend_id": "919",
    "title": "Complete Binary Tree Inserter",
    "slug": "complete-binary-tree-inserter",
    "difficulty": "Medium",
    "acceptance_rate": 66.26,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/complete-binary-tree-inserter"
  },
  {
    "id": "956",
    "frontend_id": "920",
    "title": "Number of Music Playlists",
    "slug": "number-of-music-playlists",
    "difficulty": "Hard",
    "acceptance_rate": 59.97,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-music-playlists"
  },
  {
    "id": "957",
    "frontend_id": "921",
    "title": "Minimum Add to Make Parentheses Valid",
    "slug": "minimum-add-to-make-parentheses-valid",
    "difficulty": "Medium",
    "acceptance_rate": 74.69,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid"
  },
  {
    "id": "958",
    "frontend_id": "922",
    "title": "Sort Array By Parity II",
    "slug": "sort-array-by-parity-ii",
    "difficulty": "Easy",
    "acceptance_rate": 70.94,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/sort-array-by-parity-ii"
  },
  {
    "id": "959",
    "frontend_id": "923",
    "title": "3Sum With Multiplicity",
    "slug": "3sum-with-multiplicity",
    "difficulty": "Medium",
    "acceptance_rate": 45.71,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/3sum-with-multiplicity"
  },
  {
    "id": "960",
    "frontend_id": "924",
    "title": "Minimize Malware Spread",
    "slug": "minimize-malware-spread",
    "difficulty": "Hard",
    "acceptance_rate": 42.19,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimize-malware-spread"
  },
  {
    "id": "961",
    "frontend_id": "925",
    "title": "Long Pressed Name",
    "slug": "long-pressed-name",
    "difficulty": "Easy",
    "acceptance_rate": 32.42,
    "premium": false,
    "topics": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/long-pressed-name"
  },
  {
    "id": "962",
    "frontend_id": "926",
    "title": "Flip String to Monotone Increasing",
    "slug": "flip-string-to-monotone-increasing",
    "difficulty": "Medium",
    "acceptance_rate": 61.55,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing"
  },
  {
    "id": "963",
    "frontend_id": "927",
    "title": "Three Equal Parts",
    "slug": "three-equal-parts",
    "difficulty": "Hard",
    "acceptance_rate": 40.13,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/three-equal-parts"
  },
  {
    "id": "964",
    "frontend_id": "928",
    "title": "Minimize Malware Spread II",
    "slug": "minimize-malware-spread-ii",
    "difficulty": "Hard",
    "acceptance_rate": 44.44,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimize-malware-spread-ii"
  },
  {
    "id": "965",
    "frontend_id": "929",
    "title": "Unique Email Addresses",
    "slug": "unique-email-addresses",
    "difficulty": "Easy",
    "acceptance_rate": 67.49,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-email-addresses"
  },
  {
    "id": "966",
    "frontend_id": "930",
    "title": "Binary Subarrays With Sum",
    "slug": "binary-subarrays-with-sum",
    "difficulty": "Medium",
    "acceptance_rate": 65.24,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-subarrays-with-sum"
  },
  {
    "id": "967",
    "frontend_id": "931",
    "title": "Minimum Falling Path Sum",
    "slug": "minimum-falling-path-sum",
    "difficulty": "Medium",
    "acceptance_rate": 61.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-falling-path-sum"
  },
  {
    "id": "968",
    "frontend_id": "932",
    "title": "Beautiful Array",
    "slug": "beautiful-array",
    "difficulty": "Medium",
    "acceptance_rate": 66.79,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/beautiful-array"
  },
  {
    "id": "969",
    "frontend_id": "933",
    "title": "Number of Recent Calls",
    "slug": "number-of-recent-calls",
    "difficulty": "Easy",
    "acceptance_rate": 77.2,
    "premium": false,
    "topics": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-recent-calls"
  },
  {
    "id": "971",
    "frontend_id": "934",
    "title": "Shortest Bridge",
    "slug": "shortest-bridge",
    "difficulty": "Medium",
    "acceptance_rate": 58.37,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/shortest-bridge"
  },
  {
    "id": "972",
    "frontend_id": "935",
    "title": "Knight Dialer",
    "slug": "knight-dialer",
    "difficulty": "Medium",
    "acceptance_rate": 60.98,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/knight-dialer"
  },
  {
    "id": "973",
    "frontend_id": "936",
    "title": "Stamping The Sequence",
    "slug": "stamping-the-sequence",
    "difficulty": "Hard",
    "acceptance_rate": 61.88,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/stamping-the-sequence"
  },
  {
    "id": "974",
    "frontend_id": "937",
    "title": "Reorder Data in Log Files",
    "slug": "reorder-data-in-log-files",
    "difficulty": "Medium",
    "acceptance_rate": 56.69,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reorder-data-in-log-files"
  },
  {
    "id": "975",
    "frontend_id": "938",
    "title": "Range Sum of BST",
    "slug": "range-sum-of-bst",
    "difficulty": "Easy",
    "acceptance_rate": 87.37,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/range-sum-of-bst"
  },
  {
    "id": "976",
    "frontend_id": "939",
    "title": "Minimum Area Rectangle",
    "slug": "minimum-area-rectangle",
    "difficulty": "Medium",
    "acceptance_rate": 54.83,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-area-rectangle"
  },
  {
    "id": "977",
    "frontend_id": "940",
    "title": "Distinct Subsequences II",
    "slug": "distinct-subsequences-ii",
    "difficulty": "Hard",
    "acceptance_rate": 43.42,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/distinct-subsequences-ii"
  },
  {
    "id": "978",
    "frontend_id": "941",
    "title": "Valid Mountain Array",
    "slug": "valid-mountain-array",
    "difficulty": "Easy",
    "acceptance_rate": 33.84,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/valid-mountain-array"
  },
  {
    "id": "979",
    "frontend_id": "942",
    "title": "DI String Match",
    "slug": "di-string-match",
    "difficulty": "Easy",
    "acceptance_rate": 79.75,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/di-string-match"
  },
  {
    "id": "980",
    "frontend_id": "943",
    "title": "Find the Shortest Superstring",
    "slug": "find-the-shortest-superstring",
    "difficulty": "Hard",
    "acceptance_rate": 44.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-shortest-superstring"
  },
  {
    "id": "981",
    "frontend_id": "944",
    "title": "Delete Columns to Make Sorted",
    "slug": "delete-columns-to-make-sorted",
    "difficulty": "Easy",
    "acceptance_rate": 74.71,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-columns-to-make-sorted"
  },
  {
    "id": "982",
    "frontend_id": "945",
    "title": "Minimum Increment to Make Array Unique",
    "slug": "minimum-increment-to-make-array-unique",
    "difficulty": "Medium",
    "acceptance_rate": 60.21,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-increment-to-make-array-unique"
  },
  {
    "id": "983",
    "frontend_id": "946",
    "title": "Validate Stack Sequences",
    "slug": "validate-stack-sequences",
    "difficulty": "Medium",
    "acceptance_rate": 69.75,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/validate-stack-sequences"
  },
  {
    "id": "984",
    "frontend_id": "947",
    "title": "Most Stones Removed with Same Row or Column",
    "slug": "most-stones-removed-with-same-row-or-column",
    "difficulty": "Medium",
    "acceptance_rate": 62.11,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column"
  },
  {
    "id": "985",
    "frontend_id": "948",
    "title": "Bag of Tokens",
    "slug": "bag-of-tokens",
    "difficulty": "Medium",
    "acceptance_rate": 59.07,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/bag-of-tokens"
  },
  {
    "id": "986",
    "frontend_id": "949",
    "title": "Largest Time for Given Digits",
    "slug": "largest-time-for-given-digits",
    "difficulty": "Medium",
    "acceptance_rate": 35.43,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-time-for-given-digits"
  },
  {
    "id": "987",
    "frontend_id": "950",
    "title": "Reveal Cards In Increasing Order",
    "slug": "reveal-cards-in-increasing-order",
    "difficulty": "Medium",
    "acceptance_rate": 83.16,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/reveal-cards-in-increasing-order"
  },
  {
    "id": "988",
    "frontend_id": "951",
    "title": "Flip Equivalent Binary Trees",
    "slug": "flip-equivalent-binary-trees",
    "difficulty": "Medium",
    "acceptance_rate": 69.72,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flip-equivalent-binary-trees"
  },
  {
    "id": "989",
    "frontend_id": "952",
    "title": "Largest Component Size by Common Factor",
    "slug": "largest-component-size-by-common-factor",
    "difficulty": "Hard",
    "acceptance_rate": 41.33,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-component-size-by-common-factor"
  },
  {
    "id": "990",
    "frontend_id": "953",
    "title": "Verifying an Alien Dictionary",
    "slug": "verifying-an-alien-dictionary",
    "difficulty": "Easy",
    "acceptance_rate": 55.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/verifying-an-alien-dictionary"
  },
  {
    "id": "991",
    "frontend_id": "954",
    "title": "Array of Doubled Pairs",
    "slug": "array-of-doubled-pairs",
    "difficulty": "Medium",
    "acceptance_rate": 39.33,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/array-of-doubled-pairs"
  },
  {
    "id": "992",
    "frontend_id": "955",
    "title": "Delete Columns to Make Sorted II",
    "slug": "delete-columns-to-make-sorted-ii",
    "difficulty": "Medium",
    "acceptance_rate": 35.46,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii"
  },
  {
    "id": "993",
    "frontend_id": "956",
    "title": "Tallest Billboard",
    "slug": "tallest-billboard",
    "difficulty": "Hard",
    "acceptance_rate": 51.93,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/tallest-billboard"
  },
  {
    "id": "994",
    "frontend_id": "957",
    "title": "Prison Cells After N Days",
    "slug": "prison-cells-after-n-days",
    "difficulty": "Medium",
    "acceptance_rate": 38.95,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/prison-cells-after-n-days"
  },
  {
    "id": "998",
    "frontend_id": "958",
    "title": "Check Completeness of a Binary Tree",
    "slug": "check-completeness-of-a-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 58.09,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/check-completeness-of-a-binary-tree"
  },
  {
    "id": "999",
    "frontend_id": "959",
    "title": "Regions Cut By Slashes",
    "slug": "regions-cut-by-slashes",
    "difficulty": "Medium",
    "acceptance_rate": 77.72,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/regions-cut-by-slashes"
  },
  {
    "id": "1000",
    "frontend_id": "960",
    "title": "Delete Columns to Make Sorted III",
    "slug": "delete-columns-to-make-sorted-iii",
    "difficulty": "Hard",
    "acceptance_rate": 58.34,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii"
  },
  {
    "id": "1001",
    "frontend_id": "961",
    "title": "N-Repeated Element in Size 2N Array",
    "slug": "n-repeated-element-in-size-2n-array",
    "difficulty": "Easy",
    "acceptance_rate": 77.32,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array"
  },
  {
    "id": "1002",
    "frontend_id": "962",
    "title": "Maximum Width Ramp",
    "slug": "maximum-width-ramp",
    "difficulty": "Medium",
    "acceptance_rate": 55.61,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-width-ramp"
  },
  {
    "id": "1003",
    "frontend_id": "963",
    "title": "Minimum Area Rectangle II",
    "slug": "minimum-area-rectangle-ii",
    "difficulty": "Medium",
    "acceptance_rate": 55.36,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-area-rectangle-ii"
  },
  {
    "id": "1004",
    "frontend_id": "964",
    "title": "Least Operators to Express Number",
    "slug": "least-operators-to-express-number",
    "difficulty": "Hard",
    "acceptance_rate": 48.4,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/least-operators-to-express-number"
  },
  {
    "id": "1005",
    "frontend_id": "965",
    "title": "Univalued Binary Tree",
    "slug": "univalued-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 71.88,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/univalued-binary-tree"
  },
  {
    "id": "1006",
    "frontend_id": "966",
    "title": "Vowel Spellchecker",
    "slug": "vowel-spellchecker",
    "difficulty": "Medium",
    "acceptance_rate": 51.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/vowel-spellchecker"
  },
  {
    "id": "1007",
    "frontend_id": "967",
    "title": "Numbers With Same Consecutive Differences",
    "slug": "numbers-with-same-consecutive-differences",
    "difficulty": "Medium",
    "acceptance_rate": 58.58,
    "premium": false,
    "topics": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/numbers-with-same-consecutive-differences"
  },
  {
    "id": "1008",
    "frontend_id": "968",
    "title": "Binary Tree Cameras",
    "slug": "binary-tree-cameras",
    "difficulty": "Hard",
    "acceptance_rate": 47.01,
    "premium": false,
    "topics": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/binary-tree-cameras"
  },
  {
    "id": "1009",
    "frontend_id": "969",
    "title": "Pancake Sorting",
    "slug": "pancake-sorting",
    "difficulty": "Medium",
    "acceptance_rate": 71.02,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/pancake-sorting"
  },
  {
    "id": "1010",
    "frontend_id": "970",
    "title": "Powerful Integers",
    "slug": "powerful-integers",
    "difficulty": "Medium",
    "acceptance_rate": 43.92,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/powerful-integers"
  },
  {
    "id": "1011",
    "frontend_id": "971",
    "title": "Flip Binary Tree To Match Preorder Traversal",
    "slug": "flip-binary-tree-to-match-preorder-traversal",
    "difficulty": "Medium",
    "acceptance_rate": 50.89,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal"
  },
  {
    "id": "1012",
    "frontend_id": "972",
    "title": "Equal Rational Numbers",
    "slug": "equal-rational-numbers",
    "difficulty": "Hard",
    "acceptance_rate": 44.41,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/equal-rational-numbers"
  },
  {
    "id": "1014",
    "frontend_id": "973",
    "title": "K Closest Points to Origin",
    "slug": "k-closest-points-to-origin",
    "difficulty": "Medium",
    "acceptance_rate": 67.64,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/k-closest-points-to-origin"
  },
  {
    "id": "1016",
    "frontend_id": "974",
    "title": "Subarray Sums Divisible by K",
    "slug": "subarray-sums-divisible-by-k",
    "difficulty": "Medium",
    "acceptance_rate": 55.54,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subarray-sums-divisible-by-k"
  },
  {
    "id": "1017",
    "frontend_id": "975",
    "title": "Odd Even Jump",
    "slug": "odd-even-jump",
    "difficulty": "Hard",
    "acceptance_rate": 40.58,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/odd-even-jump"
  },
  {
    "id": "1018",
    "frontend_id": "976",
    "title": "Largest Perimeter Triangle",
    "slug": "largest-perimeter-triangle",
    "difficulty": "Easy",
    "acceptance_rate": 57.08,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/largest-perimeter-triangle"
  },
  {
    "id": "1019",
    "frontend_id": "977",
    "title": "Squares of a Sorted Array",
    "slug": "squares-of-a-sorted-array",
    "difficulty": "Easy",
    "acceptance_rate": 73.11,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/squares-of-a-sorted-array"
  },
  {
    "id": "1020",
    "frontend_id": "978",
    "title": "Longest Turbulent Subarray",
    "slug": "longest-turbulent-subarray",
    "difficulty": "Medium",
    "acceptance_rate": 47.81,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/longest-turbulent-subarray"
  },
  {
    "id": "1021",
    "frontend_id": "979",
    "title": "Distribute Coins in Binary Tree",
    "slug": "distribute-coins-in-binary-tree",
    "difficulty": "Medium",
    "acceptance_rate": 77.13,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/distribute-coins-in-binary-tree"
  },
  {
    "id": "1022",
    "frontend_id": "980",
    "title": "Unique Paths III",
    "slug": "unique-paths-iii",
    "difficulty": "Hard",
    "acceptance_rate": 82.23,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/unique-paths-iii"
  },
  {
    "id": "1023",
    "frontend_id": "981",
    "title": "Time Based Key-Value Store",
    "slug": "time-based-key-value-store",
    "difficulty": "Medium",
    "acceptance_rate": 49.38,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/time-based-key-value-store"
  },
  {
    "id": "1024",
    "frontend_id": "982",
    "title": "Triples with Bitwise AND Equal To Zero",
    "slug": "triples-with-bitwise-and-equal-to-zero",
    "difficulty": "Hard",
    "acceptance_rate": 59.1,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero"
  },
  {
    "id": "1025",
    "frontend_id": "983",
    "title": "Minimum Cost For Tickets",
    "slug": "minimum-cost-for-tickets",
    "difficulty": "Medium",
    "acceptance_rate": 67.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-cost-for-tickets"
  },
  {
    "id": "1026",
    "frontend_id": "984",
    "title": "String Without AAA or BBB",
    "slug": "string-without-aaa-or-bbb",
    "difficulty": "Medium",
    "acceptance_rate": 44.33,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/string-without-aaa-or-bbb"
  },
  {
    "id": "1027",
    "frontend_id": "985",
    "title": "Sum of Even Numbers After Queries",
    "slug": "sum-of-even-numbers-after-queries",
    "difficulty": "Medium",
    "acceptance_rate": 68.41,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/sum-of-even-numbers-after-queries"
  },
  {
    "id": "1028",
    "frontend_id": "986",
    "title": "Interval List Intersections",
    "slug": "interval-list-intersections",
    "difficulty": "Medium",
    "acceptance_rate": 72.5,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/interval-list-intersections"
  },
  {
    "id": "1029",
    "frontend_id": "987",
    "title": "Vertical Order Traversal of a Binary Tree",
    "slug": "vertical-order-traversal-of-a-binary-tree",
    "difficulty": "Hard",
    "acceptance_rate": 50.56,
    "premium": false,
    "topics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": true,
    "url": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree"
  },
  {
    "id": "1030",
    "frontend_id": "988",
    "title": "Smallest String Starting From Leaf",
    "slug": "smallest-string-starting-from-leaf",
    "difficulty": "Medium",
    "acceptance_rate": 60.71,
    "premium": false,
    "topics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/smallest-string-starting-from-leaf"
  },
  {
    "id": "1031",
    "frontend_id": "989",
    "title": "Add to Array-Form of Integer",
    "slug": "add-to-array-form-of-integer",
    "difficulty": "Easy",
    "acceptance_rate": 44.98,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/add-to-array-form-of-integer"
  },
  {
    "id": "1032",
    "frontend_id": "990",
    "title": "Satisfiability of Equality Equations",
    "slug": "satisfiability-of-equality-equations",
    "difficulty": "Medium",
    "acceptance_rate": 50.88,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/satisfiability-of-equality-equations"
  },
  {
    "id": "1033",
    "frontend_id": "991",
    "title": "Broken Calculator",
    "slug": "broken-calculator",
    "difficulty": "Medium",
    "acceptance_rate": 54.98,
    "premium": false,
    "topics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/broken-calculator"
  },
  {
    "id": "1034",
    "frontend_id": "992",
    "title": "Subarrays with K Different Integers",
    "slug": "subarrays-with-k-different-integers",
    "difficulty": "Hard",
    "acceptance_rate": 65.26,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/subarrays-with-k-different-integers"
  },
  {
    "id": "1035",
    "frontend_id": "993",
    "title": "Cousins in Binary Tree",
    "slug": "cousins-in-binary-tree",
    "difficulty": "Easy",
    "acceptance_rate": 57.8,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/cousins-in-binary-tree"
  },
  {
    "id": "1036",
    "frontend_id": "994",
    "title": "Rotting Oranges",
    "slug": "rotting-oranges",
    "difficulty": "Medium",
    "acceptance_rate": 56.09,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/rotting-oranges"
  },
  {
    "id": "1037",
    "frontend_id": "995",
    "title": "Minimum Number of K Consecutive Bit Flips",
    "slug": "minimum-number-of-k-consecutive-bit-flips",
    "difficulty": "Hard",
    "acceptance_rate": 62.15,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips"
  },
  {
    "id": "1038",
    "frontend_id": "996",
    "title": "Number of Squareful Arrays",
    "slug": "number-of-squareful-arrays",
    "difficulty": "Hard",
    "acceptance_rate": 50.4,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/number-of-squareful-arrays"
  },
  {
    "id": "1039",
    "frontend_id": "997",
    "title": "Find the Town Judge",
    "slug": "find-the-town-judge",
    "difficulty": "Easy",
    "acceptance_rate": 49.9,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "solution_available": true,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/find-the-town-judge"
  },
  {
    "id": "1040",
    "frontend_id": "998",
    "title": "Maximum Binary Tree II",
    "slug": "maximum-binary-tree-ii",
    "difficulty": "Medium",
    "acceptance_rate": 70.23,
    "premium": false,
    "topics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/maximum-binary-tree-ii"
  },
  {
    "id": "1041",
    "frontend_id": "999",
    "title": "Available Captures for Rook",
    "slug": "available-captures-for-rook",
    "difficulty": "Easy",
    "acceptance_rate": 70.12,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/available-captures-for-rook"
  },
  {
    "id": "1042",
    "frontend_id": "1000",
    "title": "Minimum Cost to Merge Stones",
    "slug": "minimum-cost-to-merge-stones",
    "difficulty": "Hard",
    "acceptance_rate": 44.05,
    "premium": false,
    "topics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "solution_available": false,
    "video_solution_available": false,
    "url": "https://leetcode.com/problems/minimum-cost-to-merge-stones"
  }
]